var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,1.453,1,1.126]],["body/interfaces/Account.html",[0,2.627,1,2.22,2,2.859,3,0.257,4,0.22,5,0.22,6,3.135,7,0.334,8,1.061,9,0.733,10,3.385,11,2.932,12,1.996,13,1.2,14,3.658,15,3.385,16,2.567,17,3.014,18,0.493,19,0.024,20,1.975,21,0.343,22,2.432,23,3.135,24,3.48,25,2.432,26,2.859,27,1.624,28,0.016,29,0.019,30,0.016]],["title/interfaces/AccountDTO.html",[0,1.453,25,1.794]],["body/interfaces/AccountDTO.html",[0,2.683,1,2.32,2,3.001,3,0.27,4,0.231,5,0.231,6,3.29,7,0.351,8,1.093,9,0.741,10,2.553,11,2.212,12,1.506,13,0.905,14,2.76,15,2.553,16,1.936,17,2.373,18,0.455,19,0.024,20,1.955,21,0.35,22,2.553,23,3.29,24,3.653,25,3.084,26,4.044,27,2.298,28,0.016,29,0.02,30,0.016]],["title/interfaces/AccountJWT.html",[0,1.453,22,1.794]],["body/interfaces/AccountJWT.html",[0,2.696,1,2.324,2,3.033,3,0.273,4,0.233,5,0.233,6,3.326,7,0.355,8,1.1,10,2.581,11,2.236,12,1.522,13,0.915,14,2.79,15,2.581,16,1.957,17,2.398,18,0.458,19,0.024,20,1.957,21,0.352,22,3.104,23,4.451,24,4.941,25,2.581,26,3.033,27,1.723,28,0.017,29,0.02,30,0.017]],["title/injectables/AccountService.html",[31,0.405,32,1.453]],["body/injectables/AccountService.html",[1,2.262,3,0.21,4,0.18,5,0.18,7,0.274,9,0.709,18,0.484,19,0.025,21,0.21,28,0.013,29,0.017,30,0.013,31,0.595,32,2.134,33,1.249,34,3.228,35,0.647,36,5.032,37,4.271,38,6.001,39,5.032,40,3.77,41,4.271,42,5.032,43,0.571,44,3.228,45,4.05,46,2.774,47,0.854,48,3.803,49,0.894,50,0.709,51,3.396,52,5.032,53,3.803,54,4.901,55,0.841,56,5.032,57,3.803,58,3.803,59,5.032,60,3.803,61,5.032,62,3.803,63,5.032,64,3.803,65,5.032,66,3.803,67,0.538,68,5.032,69,2.341,70,0.307,71,1.992,72,2.849,73,2.567,74,1.417,75,1.33,76,0.341,77,1.417,78,1.038,79,1.386,80,3.803,81,3.803,82,1.104,83,5.032,84,3.228,85,0.86,86,3.803,87,3.803,88,3.803,89,3.803,90,3.803,91,3.803,92,3.803,93,3.803]],["title/components/AdminComponent.html",[94,0.339,95,0.825]],["body/components/AdminComponent.html",[1,1.425,3,0.107,4,0.091,5,0.091,7,0.139,8,0.568,9,0.573,13,0.805,16,1.216,18,0.363,19,0.025,21,0.107,25,1.01,28,0.018,29,0.01,30,0.007,32,2.239,35,0.394,37,2.599,40,2.294,43,0.289,47,0.831,49,0.679,50,0.612,55,0.743,67,0.546,70,0.156,76,0.173,78,0.835,79,0.409,82,1.638,85,0.98,94,0.377,95,1.045,96,0.945,97,0.595,98,0.633,99,0.633,100,0.633,101,1.636,102,1.006,103,1.418,104,0.633,105,2.091,106,1.847,107,1.733,108,1.006,109,3.808,110,1.006,111,3.062,112,3.232,113,3.808,114,3.232,115,1.8,116,1.12,117,1.785,118,2.853,119,3.808,120,2.452,121,2.548,122,3.062,123,3.062,124,4.337,125,2.599,126,4.337,127,3.681,128,1.615,129,3.062,130,1.091,131,2.155,132,3.681,133,3.062,134,3.062,135,1.928,136,1.928,137,3.062,138,1.928,139,4.731,140,3.062,141,1.928,142,3.062,143,1.928,144,2.599,145,1.928,146,2.599,147,1.291,148,1.928,149,1.928,150,1.928,151,3.062,152,1.928,153,1.928,154,3.062,155,1.928,156,2.853,157,3.232,158,1.091,159,2.599,160,1.928,161,1.928,162,3.062,163,2.477,164,0.674,165,0.494,166,1.928,167,1.928,168,1.928,169,1.636,170,0.718,171,0.938,172,1.444,173,0.977,174,1.444,175,1.301,176,3.232,177,0.977,178,1.444,179,1.301,180,0.674,181,0.766,182,0.875,183,1.091,184,0.785,185,1.187,186,1.301,187,1.636,188,1.301,189,0.977,190,1.444,191,1.301,192,1.301,193,0.938,194,1.928,195,1.928,196,1.928,197,1.928,198,1.928,199,1.636,200,1.928,201,1.928,202,3.545,203,3.808,204,3.09,205,1.928,206,3.062,207,3.808,208,3.545,209,3.193,210,1.636,211,1.636,212,1.636,213,1.533,214,1.636,215,1.928,216,1.928,217,1.928,218,1.928,219,1.928,220,1.636,221,1.636,222,3.808,223,1.928,224,3.808,225,1.928,226,1.722,227,1.091,228,1.928,229,1.928,230,1.928,231,1.928,232,1.928,233,1.928,234,1.853,235,1.928,236,1.928,237,1.928,238,3.062,239,3.062,240,3.062,241,3.062,242,1.928,243,4.337,244,4.337,245,1.928,246,3.062,247,2.599,248,1.928,249,1.928,250,3.062,251,3.062,252,3.062,253,1.928,254,1.928,255,1.928,256,1.928,257,3.062,258,1.928,259,3.062,260,1.928,261,3.062,262,1.928,263,1.928,264,1.928,265,1.636,266,1.928,267,1.928,268,1.636,269,1.928,270,1.636,271,1.636,272,2.155,273,1.636,274,2.294,275,1.636,276,2.599,277,1.636,278,2.599,279,1.928,280,1.444,281,3.062,282,3.062,283,3.062,284,1.928,285,3.062,286,1.301,287,3.062,288,1.187,289,3.062,290,1.301,291,3.062,292,1.301,293,3.062,294,1.301,295,3.062,296,1.928,297,3.062,298,1.251,299,1.636,300,1.106,301,1.636,302,2.599,303,1.928,304,2.066,305,1.928,306,3.062,307,1.301,308,1.49,309,2.066,310,2.326,311,3.1,312,2.455,313,1.301,314,1.301,315,2.066,316,1.301,317,1.301,318,2.57,319,3.232,320,2.853,321,2.066,322,1.301,323,1.091,324,1.251,325,1.301,326,1.49,327,2,328,2.146,329,0.938,330,0.938,331,1.49,332,0.938,333,1.49,334,0.938,335,1.49,336,1.49,337,0.938,338,1.636,339,2.294,340,1.636,341,1.301,342,1.444,343,1.636,344,1.636,345,1.636,346,1.636,347,1.444,348,1.301,349,1.444,350,0.56,351,0.945,352,0.633,353,0.633,354,1.636,355,1.636,356,1.636,357,1.636,358,1.636,359,1.928,360,1.928,361,1.301,362,1.187,363,1.301,364,1.301,365,1.301,366,1.928,367,1.636,368,1.636,369,1.928,370,1.928,371,1.301,372,1.006,373,0.494,374,0.633,375,0.464,376,0.633,377,1.251,378,0.464,379,0.633,380,0.494,381,0.633,382,0.494,383,0.633,384,0.464,385,0.633,386,1.039,387,0.464,388,0.633,389,0.494,390,0.633,391,0.494,392,0.595,393,0.494,394,0.633,395,0.464,396,0.56,397,0.633,398,0.633]],["title/modules/AngularMaterialModule.html",[399,1.794,400,1.939]],["body/modules/AngularMaterialModule.html",[3,0.195,4,0.167,5,0.167,19,0.025,21,0.195,28,0.012,29,0.016,30,0.012,67,0.649,70,0.285,76,0.316,82,1.025,172,2.645,272,1.998,308,2.329,310,1.315,312,1.998,399,2.506,400,2.709,401,1.998,402,2.645,403,2.645,404,1.16,405,3.586,406,4.063,407,4.786,408,2.996,409,3.586,410,4.063,411,3.53,412,4.063,413,3.53,414,4.063,415,3.53,416,4.063,417,3.53,418,4.063,419,4.786,420,4.063,421,4.786,422,4.063,423,3.53,424,4.063,425,3.53,426,4.063,427,3.53,428,4.786,429,4.063,430,4.063,431,4.786,432,2.996,433,4.063,434,3.53,435,4.063,436,4.063,437,3.53,438,4.063,439,3.53,440,4.063,441,3.53,442,4.063,443,3.53,444,4.063,445,3.53,446,4.063,447,3.53,448,4.063,449,3.53,450,3.53,451,4.063,452,3.53,453,4.063,454,3.53,455,4.063,456,3.53,457,3.53,458,4.063,459,3.53,460,4.063,461,3.53,462,4.063,463,3.53,464,4.063,465,3.53,466,4.063,467,3.53,468,4.063,469,3.53,470,4.063,471,3.53,472,2.645,473,4.063,474,3.53,475,4.063,476,3.53,477,4.063,478,3.53,479,4.063,480,3.53,481,4.063,482,3.53,483,4.063,484,2.382,485,2.996,486,3.23,487,3.586,488,3.53,489,2.996,490,4.069,491,2.645,492,2.382,493,2.645,494,4.063,495,2.996,496,3.53]],["title/components/AppComponent.html",[94,0.339,373,0.879]],["body/components/AppComponent.html",[3,0.242,4,0.207,5,0.207,13,1.022,19,0.024,21,0.242,28,0.015,29,0.019,30,0.015,50,0.597,67,0.392,70,0.353,75,1.925,76,0.392,85,1.245,94,0.596,95,1.053,96,1.7,97,1.35,98,1.436,99,1.436,100,1.436,104,1.436,105,2.345,106,2.072,108,1.809,110,1.809,173,1.121,177,1.121,184,1.121,189,1.121,213,1.836,298,1.436,300,1.269,324,1.809,350,1.269,351,1.7,352,1.436,353,1.436,372,1.809,373,1.622,374,1.436,375,1.053,376,1.436,377,1.98,378,1.053,379,1.436,380,1.121,381,1.436,382,1.121,383,1.436,384,1.053,385,1.436,386,1.645,387,1.053,388,1.436,389,1.121,390,1.436,391,1.121,392,1.35,393,1.121,394,1.436,395,1.053,396,1.269,397,1.436,398,1.436,404,1.436,497,3.711,498,5.506,499,5.506,500,4.673,501,6.027,502,5.506]],["title/injectables/AppDateAdapter.html",[31,0.405,486,2.312]],["body/injectables/AppDateAdapter.html",[3,0.257,4,0.22,5,0.22,7,0.335,9,0.505,18,0.335,19,0.025,20,1.562,21,0.257,28,0.016,29,0.019,30,0.016,31,0.677,33,1.529,35,0.736,47,0.598,49,0.598,50,0.505,55,0.598,67,0.513,70,0.375,76,0.417,213,1.799,226,1.848,323,2.634,404,1.529,406,4.858,432,3.95,486,3.862,489,4.858,503,4.288,504,3.486,505,4.668,506,5.723,507,5.723,508,4.858,509,4.858,510,4.858,511,5.489,512,5.723,513,6.199,514,5.723,515,6.467,516,4.644,517,4.653,518,3.95,519,3.14,520,3.95,521,3.486,522,3.95,523,3.486,524,3.95,525,3.95]],["title/modules/AppModule.html",[399,1.794,526,2.312]],["body/modules/AppModule.html",[1,1.67,3,0.172,4,0.147,5,0.147,13,1.025,19,0.025,21,0.172,28,0.011,29,0.015,30,0.011,32,2.341,46,2.341,67,0.616,70,0.251,76,0.279,95,1.454,116,1.096,117,1.704,120,2.341,173,1.548,175,2.101,176,4.314,177,1.548,179,2.101,184,1.548,186,2.101,187,2.643,189,1.548,191,2.101,350,0.904,373,1.709,375,1.454,378,1.454,380,1.548,382,1.548,384,1.454,386,0.85,387,1.454,389,1.548,391,1.548,393,1.125,395,1.454,399,1.631,400,3.124,401,2.484,409,3.288,491,3.288,492,2.101,493,3.808,526,4.911,527,2.101,528,4.314,529,3.808,530,2.643,531,2.643,532,2.643,533,2.643,534,2.643,535,3.124,536,1.93,537,2.89,538,2.89,539,2.341,540,3.124,541,2.89,542,3.124,543,2.504,544,3.725,545,2.101,546,3.114,547,4.389,548,5.083,549,3.114,550,2.643,551,2.643,552,3.114,553,2.643,554,2.333,555,2.643,556,2.643,557,2.643,558,2.101,559,2.643,560,2.643,561,3.114,562,3.114,563,4.389,564,2.101,565,2.643,566,3.114,567,2.101,568,2.333,569,3.114,570,3.288,571,3.288,572,2.643,573,3.114]],["title/modules/AppRoutingModule.html",[399,1.794,535,1.939]],["body/modules/AppRoutingModule.html",[3,0.229,4,0.196,5,0.196,19,0.025,21,0.229,28,0.014,29,0.018,30,0.014,40,3.098,67,0.617,70,0.334,76,0.371,82,1.2,94,0.669,95,1.28,107,3.714,234,3.119,308,2.012,375,1.28,378,1.414,382,1.363,384,1.28,387,1.28,395,1.28,396,1.2,399,2.165,401,2.34,409,3.981,491,3.098,492,2.791,535,3.008,550,3.51,551,3.51,553,3.51,554,3.098,555,3.51,556,3.51,557,3.51,558,2.791,559,3.51,560,3.51,572,3.51,574,4.135,575,4.135,576,4.182,577,5.314,578,1.876,579,4.038,580,4.135,581,4.135,582,6.759,583,2.791,584,3.51,585,5.441,586,6.411,587,4.643,588,3.098,589,3.51,590,4.135,591,4.135,592,4.135,593,4.135]],["title/guards/AuthGuardService.html",[579,2.109,594,2.567]],["body/guards/AuthGuardService.html",[3,0.237,4,0.203,5,0.203,7,0.309,9,0.648,17,2.907,18,0.43,19,0.025,21,0.237,28,0.015,29,0.018,30,0.015,31,0.644,35,0.699,43,0.644,47,0.768,49,0.768,50,0.648,55,0.699,67,0.563,70,0.346,76,0.385,77,1.598,78,1.485,79,1.332,82,1.245,102,1.409,116,1.336,226,1.704,536,2.353,578,1.946,579,3.348,585,5.333,595,4.29,596,4.707,597,3.641,598,5.44,599,2.895,600,3.469,601,4.29,602,5.44,603,6.624,604,5.974,605,5.974,606,4.29,607,4.618,608,5.44,609,5.44,610,5.974,611,4.29,612,4.29,613,3.214,614,4.29,615,4.29,616,4.29,617,4.29,618,3.641,619,4.29,620,3.641,621,4.29,622,4.29,623,4.618,624,3.348,625,2.026,626,1.704]],["title/interceptors/AuthInterceptor.html",[627,2.908,628,2.312]],["body/interceptors/AuthInterceptor.html",[3,0.265,4,0.226,5,0.226,7,0.344,9,0.519,18,0.344,19,0.025,21,0.265,23,4.234,28,0.016,29,0.02,30,0.016,31,0.689,35,0.748,47,0.615,49,0.615,50,0.519,55,0.615,67,0.563,69,2.943,70,0.386,76,0.429,79,1.234,82,1.69,84,4.06,102,1.571,596,4.361,628,3.928,629,4.783,630,4.06,631,5.82,632,5.82,633,6.529,634,5.326,635,6.529,636,4.783,637,4.783,638,4.234,639,5.82,640,4.783,641,2.943,642,4.783,643,4.783,644,4.783,645,4.783,646,4.783,647,4.783,648,4.783]],["title/injectables/AuthService.html",[31,0.405,536,1.198]],["body/injectables/AuthService.html",[1,1.921,3,0.174,4,0.149,5,0.149,7,0.227,8,0.822,9,0.634,12,0.974,13,1.085,16,1.252,17,2.155,18,0.421,19,0.025,20,1.654,21,0.174,22,2.906,28,0.021,29,0.015,30,0.011,31,0.524,33,1.036,35,0.569,43,0.473,44,2.676,45,3.745,46,2.64,47,0.871,49,0.751,50,0.634,51,2.988,55,0.85,67,0.558,69,1.941,70,0.254,71,1.651,73,2.128,74,1.174,75,1.103,76,0.283,77,1.174,78,1.208,79,1.347,82,1.76,115,1.992,121,2.565,147,1.514,164,1.548,165,1.135,188,2.128,204,2.319,227,1.785,536,1.548,578,1.431,583,3.454,600,3.26,624,1.941,625,1.174,626,1.252,649,2.676,650,5.118,651,5.55,652,5.55,653,5.55,654,6.226,655,4.158,656,5.846,657,4.428,658,4.428,659,4.428,660,5.55,661,2.155,662,4.428,663,3.153,664,3.153,665,3.153,666,3.153,667,4.428,668,3.153,669,3.454,670,3.153,671,3.153,672,4.428,673,3.153,674,4.428,675,3.153,676,4.428,677,3.318,678,3.153,679,4.428,680,5.118,681,3.153,682,3.15,683,3.153,684,3.153,685,3.834,686,2.676,687,3.153,688,3.153,689,3.153,690,4.428,691,3.153,692,3.153,693,3.153,694,3.153,695,3.153,696,3.153,697,3.153,698,3.153,699,3.153,700,3.153,701,3.153,702,3.153,703,3.153,704,3.153,705,3.153,706,3.153,707,3.153,708,3.153,709,3.153,710,5.118,711,3.153,712,3.153,713,3.153,714,3.153,715,3.153,716,3.153,717,3.153,718,3.153,719,3.153,720,3.153,721,3.153,722,3.153,723,2.676,724,4.428]],["title/interfaces/CodeDetails.html",[0,1.453,725,2.312]],["body/interfaces/CodeDetails.html",[0,2.192,2,3.182,3,0.286,4,0.245,5,0.245,7,0.372,8,1.132,18,0.439,19,0.023,20,1.89,21,0.286,28,0.017,29,0.021,30,0.017,404,1.698,669,3.489,725,4.115,726,4.388,727,4.675,728,6.996,729,5.169,730,5.169,731,4.388,732,4.388,733,5.169,734,5.169,735,3.873]],["title/injectables/CustomerService.html",[31,0.405,537,1.794]],["body/injectables/CustomerService.html",[3,0.15,4,0.128,5,0.128,7,0.195,9,0.598,11,1.804,12,1.228,18,0.286,19,0.025,21,0.15,28,0.009,29,0.013,30,0.009,31,0.471,33,0.892,35,0.511,43,0.407,45,3.496,46,2.444,47,0.709,49,0.741,50,0.598,51,3.176,54,2.033,55,0.741,67,0.517,69,1.67,70,0.219,71,1.421,72,2.033,73,1.832,74,1.011,75,0.949,76,0.243,77,1.011,78,1.284,79,1.098,82,0.788,226,1.078,227,1.536,234,1.935,393,1.624,404,1.306,516,3.882,536,2.082,537,2.082,538,3.118,638,3.496,682,3.189,736,2.304,737,3.976,738,3.976,739,3.976,740,3.976,741,2.304,742,2.714,743,3.976,744,4.706,745,4.398,746,4.892,747,4.706,748,2.714,749,2.714,750,3.976,751,3.976,752,2.683,753,3.976,754,2.714,755,3.976,756,2.714,757,3.976,758,2.714,759,3.882,760,3.496,761,5.181,762,5.181,763,5.181,764,4.398,765,3.976,766,2.714,767,3.976,768,2.979,769,2.714,770,2.714,771,1.686,772,2.714,773,2.714,774,2.714,775,2.714,776,2.714,777,5.515,778,2.304,779,3.375,780,2.714,781,2.714,782,2.714,783,4.398,784,2.714,785,2.304,786,2.304,787,2.714,788,2.714,789,2.714,790,2.304,791,2.714,792,2.714,793,2.714,794,2.304,795,2.714,796,2.304,797,2.714,798,2.304,799,2.714,800,1.67,801,2.714,802,2.304,803,2.714,804,1.67,805,2.714,806,2.714,807,2.714,808,2.714,809,2.714,810,2.714,811,2.714,812,2.714,813,2.714,814,2.714,815,2.304,816,2.714,817,2.714,818,2.714,819,2.714,820,2.714,821,2.714,822,2.714,823,2.714,824,2.714,825,2.714,826,3.375,827,2.714,828,2.683,829,2.304,830,2.714,831,1.832,832,2.714,833,1.832,834,2.714,835,2.714,836,2.714,837,5.181,838,2.714,839,3.375,840,2.714,841,2.714,842,2.714,843,2.714,844,3.375,845,2.714,846,2.714,847,2.714,848,2.714,849,2.714,850,2.714,851,2.714,852,2.714,853,2.714,854,2.714,855,2.714,856,2.714,857,2.714,858,2.714,859,2.714,860,2.714,861,2.714,862,2.714,863,2.714,864,2.714,865,2.714,866,2.714,867,2.714,868,2.714,869,2.714,870,2.714,871,2.714,872,2.714,873,2.714,874,2.714,875,2.714,876,2.714,877,2.714,878,2.714,879,2.714,880,2.714,881,2.033,882,2.714,883,2.714,884,2.714,885,2.714,886,2.714,887,2.714,888,2.714,889,2.714,890,2.714,891,2.714,892,2.714,893,2.714,894,2.714,895,2.714,896,2.714,897,2.714,898,2.714,899,2.714,900,2.714,901,2.304,902,2.714]],["title/components/CustomersComponent.html",[94,0.339,375,0.825]],["body/components/CustomersComponent.html",[3,0.136,4,0.116,5,0.116,7,0.177,8,0.686,9,0.482,12,0.76,13,0.686,18,0.4,19,0.025,21,0.136,28,0.008,29,0.013,30,0.008,35,0.475,43,0.369,47,0.835,49,0.571,50,0.574,55,0.681,67,0.544,70,0.199,76,0.221,78,1.009,79,0.522,82,0.715,85,1.116,94,0.439,95,0.593,96,1.142,97,0.76,98,0.809,99,0.809,100,0.809,102,1.215,103,1.655,104,0.809,105,2.183,106,1.929,108,1.215,110,1.215,112,3.771,114,3.771,115,1.95,116,1.205,117,1.91,118,3.328,120,2.622,121,1.764,125,3.139,128,1.84,130,1.393,144,3.139,146,3.139,147,1.445,156,1.844,157,3.771,158,1.393,159,3.139,163,2.772,164,0.861,165,0.631,169,2.089,170,0.917,172,1.844,173,0.631,177,0.631,180,0.861,181,0.978,182,1.117,183,1.393,184,0.631,189,0.631,193,1.198,202,1.844,204,1.289,208,1.844,209,1.661,210,2.089,211,2.089,212,2.089,213,1.675,214,2.089,220,2.089,221,2.089,226,1.469,227,1.393,271,2.089,272,2.514,275,2.089,276,3.139,277,2.089,278,3.139,280,1.844,298,0.809,300,0.715,308,1.8,309,2.496,310,2.44,311,3.423,312,2.796,313,1.661,314,1.661,315,2.496,316,1.661,317,1.661,318,2.998,319,3.771,320,3.328,321,2.496,322,1.661,323,1.393,324,1.459,325,1.661,326,1.8,327,2.209,328,2.402,329,1.198,330,1.198,331,1.8,332,1.198,333,1.8,334,1.198,335,1.8,336,1.8,337,1.198,338,2.089,339,2.771,340,2.089,341,1.661,342,1.844,343,2.089,344,2.089,345,2.089,346,2.089,347,1.844,348,1.661,349,1.844,350,0.715,351,1.142,352,0.809,353,0.809,355,2.089,357,2.089,358,2.089,372,1.215,373,0.631,374,0.809,375,1.19,376,0.809,377,1.459,378,0.593,379,0.809,380,0.631,381,0.809,382,0.631,383,0.809,384,0.593,385,0.809,386,1.212,387,0.593,388,0.809,389,0.631,390,0.809,391,0.631,392,0.76,393,0.631,394,0.809,395,0.593,396,0.715,397,0.809,398,0.809,505,1.661,519,1.661,536,2.017,537,3.021,589,4.494,685,2.771,903,2.089,904,4.442,905,3.698,906,4.442,907,4.939,908,4.939,909,3.698,910,3.698,911,2.461,912,2.461,913,2.461,914,2.461,915,3.698,916,2.461,917,2.461,918,2.461,919,3.698,920,2.461,921,2.461,922,2.461,923,1.515,924,2.461,925,2.461,926,2.461,927,2.089,928,3.698,929,2.461,930,2.461,931,2.461,932,2.461,933,2.461,934,4.939,935,2.461,936,2.461,937,2.461,938,2.461,939,3.698,940,2.461,941,2.461,942,2.461,943,4.442,944,2.461,945,4.442,946,2.461,947,2.089,948,2.461,949,3.698,950,3.139,951,3.139,952,3.139,953,2.771,954,4.939,955,2.461,956,3.698,957,3.698,958,3.698,959,2.461,960,3.698,961,1.661,962,3.698,963,1.661,964,3.698,965,3.698,966,2.461,967,1.844,968,2.461,969,2.089,970,2.089,971,2.461,972,3.139,973,3.139,974,3.139,975,2.771,976,2.461,977,3.698,978,2.461,979,1.661,980,1.661]],["title/injectables/DateService.html",[31,0.405,538,1.794]],["body/injectables/DateService.html",[3,0.256,4,0.219,5,0.219,7,0.333,9,0.501,18,0.333,19,0.025,20,1.261,21,0.256,28,0.016,29,0.019,30,0.016,31,0.674,33,1.518,35,0.733,43,0.927,47,0.733,49,0.594,50,0.501,55,0.733,67,0.414,70,0.373,74,1.721,75,1.616,76,0.414,213,1.794,226,1.836,404,1.873,505,4.792,508,4.838,509,4.838,510,4.838,511,4.838,519,3.119,520,3.923,521,3.463,522,3.923,523,3.463,524,3.923,525,3.923,538,2.985,771,1.96,981,3.923,982,4.838,983,4.27,984,5.7,985,5.7,986,4.622,987,5.7,988,4.622,989,5.7,990,5.7,991,5.7]],["title/components/DeleteAccountDialog.html",[94,0.339,173,0.879]],["body/components/DeleteAccountDialog.html",[1,2.138,3,0.18,4,0.154,5,0.154,7,0.235,8,0.842,9,0.354,13,0.842,18,0.326,19,0.024,21,0.18,28,0.011,29,0.015,30,0.011,35,0.583,43,0.489,47,0.788,49,0.419,50,0.565,55,0.808,67,0.467,70,0.263,76,0.292,77,1.215,85,1.025,94,0.515,95,0.786,96,1.4,97,1.007,98,1.072,99,1.072,100,1.072,102,1.49,103,1.941,104,1.072,105,2.271,106,2.007,108,1.49,110,1.49,115,2.013,116,1.308,128,2.098,131,3.188,147,1.537,158,1.846,165,1.444,171,1.587,173,1.444,174,4.709,175,4.241,177,0.836,180,1.141,184,0.836,189,0.836,213,1.635,234,2.88,298,1.072,300,1.86,301,2.768,304,3.06,310,2.424,324,1.49,326,1.587,327,2.585,328,2.685,329,1.587,330,1.587,331,1.587,332,1.587,333,1.587,334,1.587,335,1.587,336,1.587,337,1.587,350,0.947,351,1.4,352,1.072,353,1.072,368,2.768,372,1.49,373,0.836,374,1.072,375,0.786,376,1.072,377,1.712,378,0.786,379,1.072,380,0.836,381,1.072,382,0.836,383,1.072,384,0.786,385,1.072,386,1.422,387,0.786,388,1.072,389,0.836,390,1.072,391,0.836,392,1.007,393,0.836,394,1.072,395,0.786,396,0.947,397,1.072,398,1.072,625,1.689,626,1.801,992,2.201,993,3.905,994,3.397,995,3.801,996,3.801,997,2.201,998,3.188,999,3.262,1000,2.566,1001,3.262,1002,3.262,1003,3.188,1004,2.949,1005,3.356,1006,3.801,1007,3.262,1008,2.566,1009,3.06,1010,3.262,1011,3.262,1012,2.201,1013,2.201,1014,2.444,1015,2.201,1016,3.262,1017,3.06,1018,2.007,1019,3.262,1020,2.007]],["title/injectables/DictionaryService.html",[31,0.405,116,0.68]],["body/injectables/DictionaryService.html",[0,0.88,1,1.978,3,0.067,4,0.057,5,0.173,7,0.087,8,0.385,9,0.131,10,2.366,12,1.859,13,1.165,15,2.092,16,1.587,18,0.234,19,0.024,20,1.167,21,0.067,27,0.726,28,0.004,29,0.007,30,0.004,31,0.246,33,0.396,35,0.267,43,0.41,47,0.55,49,0.155,50,0.668,55,0.47,67,0.108,70,0.097,74,0.449,75,0.422,76,0.108,79,0.256,85,1.108,106,0.942,107,1.837,116,0.412,147,0.329,164,1.135,165,1.025,199,2.754,209,4.128,226,1.794,272,2.261,274,1.555,300,0.942,302,1.762,311,1.277,312,2.261,348,1.401,351,0.641,386,1.338,392,1.514,393,1.257,396,0.942,404,0.682,505,3.049,545,1.401,567,3.049,583,3.049,634,1.762,655,2.431,677,1.555,727,2.19,731,2.754,732,2.754,745,2.754,746,3.391,752,1.401,768,2.431,771,0.512,778,1.762,779,3.835,785,4.61,786,1.762,790,2.754,794,3.835,796,3.391,798,1.762,800,1.997,802,3.391,804,1.277,815,2.754,828,3.049,829,3.391,839,3.391,844,3.391,881,3.894,901,4.412,982,1.762,1008,2.261,1017,1.401,1021,1.024,1022,3.673,1023,2.076,1024,2.076,1025,1.762,1026,2.076,1027,2.076,1028,3.245,1029,3.245,1030,3.245,1031,2.732,1032,2.732,1033,2.732,1034,2.732,1035,2.754,1036,1.206,1037,2.076,1038,1.206,1039,2.076,1040,2.754,1041,2.076,1042,1.762,1043,2.076,1044,1.206,1045,2.076,1046,2.754,1047,2.076,1048,2.993,1049,1.206,1050,2.076,1051,2.047,1052,2.076,1053,1.206,1054,2.076,1055,3.995,1056,2.076,1057,5.431,1058,6.202,1059,3.995,1060,3.995,1061,3.245,1062,6.02,1063,3.245,1064,3.245,1065,3.245,1066,2.076,1067,3.245,1068,2.076,1069,2.076,1070,3.995,1071,4.518,1072,5.431,1073,3.995,1074,3.245,1075,2.076,1076,3.995,1077,3.245,1078,2.076,1079,3.995,1080,3.245,1081,2.076,1082,2.076,1083,3.245,1084,2.076,1085,3.245,1086,3.245,1087,3.245,1088,5.431,1089,3.245,1090,3.245,1091,4.902,1092,3.245,1093,3.245,1094,2.076,1095,5.431,1096,3.995,1097,2.076,1098,2.076,1099,2.076,1100,2.076,1101,4.518,1102,3.245,1103,3.245,1104,2.076,1105,3.245,1106,1.762,1107,2.076,1108,2.076,1109,2.076,1110,2.076,1111,3.245,1112,2.076,1113,3.245,1114,3.245,1115,2.076,1116,3.245,1117,2.076,1118,3.245,1119,3.245,1120,3.245,1121,3.995,1122,3.245,1123,2.076,1124,3.995,1125,2.076,1126,2.076,1127,2.076,1128,3.245,1129,2.076,1130,3.245,1131,2.076,1132,3.245,1133,3.245,1134,3.995,1135,3.245,1136,3.995,1137,2.076,1138,3.245,1139,2.076,1140,3.245,1141,2.076,1142,3.245,1143,3.245,1144,2.076,1145,1.762,1146,3.245,1147,3.245,1148,3.245,1149,2.076,1150,2.076,1151,3.995,1152,2.076,1153,3.245,1154,3.245,1155,2.076,1156,2.076,1157,3.245,1158,2.076,1159,3.245,1160,3.245,1161,5.431,1162,5.776,1163,3.245,1164,2.076,1165,3.245,1166,2.076,1167,3.245,1168,2.076,1169,3.245,1170,2.076,1171,2.076,1172,3.245,1173,2.076,1174,2.076,1175,2.076,1176,2.076,1177,3.245,1178,3.835,1179,2.076,1180,3.995,1181,2.076,1182,3.245,1183,2.076,1184,2.076,1185,2.076,1186,3.245,1187,2.076,1188,3.245,1189,2.076,1190,3.245,1191,4.518,1192,3.245,1193,3.245,1194,2.076,1195,3.245,1196,2.076,1197,3.245,1198,3.245,1199,2.076,1200,3.245,1201,3.245,1202,3.385,1203,3.245,1204,3.245,1205,3.245,1206,3.245,1207,2.076,1208,3.245,1209,2.076,1210,3.245,1211,2.076,1212,4.518,1213,2.076,1214,3.245,1215,2.076,1216,2.076,1217,3.245,1218,2.076,1219,3.245,1220,2.076,1221,3.995,1222,2.076,1223,3.245,1224,2.076,1225,4.518,1226,2.076,1227,2.076,1228,3.245,1229,2.076,1230,3.245,1231,2.076,1232,3.245,1233,2.076,1234,3.245,1235,3.245,1236,3.245,1237,3.245,1238,2.076,1239,3.245,1240,2.076,1241,3.245,1242,2.076,1243,2.076,1244,3.245,1245,2.076,1246,3.995,1247,2.076,1248,3.995,1249,2.076,1250,3.245,1251,2.076,1252,3.245,1253,2.076,1254,3.245,1255,2.076,1256,2.076,1257,3.995,1258,3.245,1259,2.076,1260,3.245,1261,2.076,1262,3.245,1263,3.245,1264,2.076,1265,3.245,1266,2.076,1267,3.995,1268,2.076,1269,3.245,1270,2.076,1271,2.076,1272,2.076,1273,3.245,1274,3.245,1275,3.245,1276,2.076,1277,3.245,1278,2.076,1279,3.245,1280,2.076,1281,2.076,1282,3.245,1283,2.076,1284,3.245,1285,2.076,1286,3.245,1287,3.995,1288,2.076,1289,3.245,1290,3.245,1291,2.076,1292,3.245,1293,3.245,1294,3.245,1295,3.245,1296,3.245,1297,2.076,1298,3.245,1299,3.245,1300,3.245,1301,3.245,1302,2.076,1303,3.245,1304,3.245,1305,3.245,1306,3.245,1307,2.076,1308,3.245,1309,2.076,1310,1.206,1311,3.245,1312,2.076,1313,1.762,1314,2.076,1315,3.995,1316,2.076,1317,2.076,1318,3.245,1319,2.076,1320,2.076,1321,2.076,1322,3.995,1323,2.459,1324,3.245,1325,2.076,1326,2.076,1327,2.076,1328,3.245,1329,2.076,1330,2.076,1331,2.076,1332,2.076,1333,2.076,1334,2.076,1335,3.245,1336,2.076,1337,2.076,1338,2.076,1339,2.076,1340,2.076,1341,3.245,1342,2.076,1343,3.391,1344,2.076,1345,2.076,1346,2.076,1347,2.076,1348,2.076,1349,1.762,1350,2.076,1351,2.076,1352,2.076,1353,3.245,1354,2.076,1355,2.076,1356,2.076,1357,2.076,1358,2.076,1359,1.555,1360,2.076,1361,2.754,1362,1.762,1363,2.076,1364,2.076,1365,2.076,1366,1.206,1367,2.076,1368,1.206]],["title/components/EditAccountDialog.html",[94,0.339,189,0.879]],["body/components/EditAccountDialog.html",[1,2.206,3,0.146,4,0.125,5,0.125,7,0.19,8,0.722,9,0.286,11,1.195,12,0.813,13,0.722,16,1.046,18,0.392,19,0.024,21,0.146,27,2.333,28,0.009,29,0.013,30,0.009,35,0.5,43,0.395,47,0.82,49,0.338,50,0.502,55,0.594,67,0.529,70,0.213,76,0.236,78,1.262,79,0.558,85,1.154,94,0.457,95,0.634,96,1.201,97,0.813,98,0.865,99,0.865,100,0.865,102,1.278,103,1.722,104,0.865,105,2.206,106,1.949,108,1.278,110,1.278,115,2.095,116,1.227,117,1.942,120,2.666,121,1.836,128,1.902,130,1.491,147,1.262,158,1.491,163,2.421,165,0.997,170,0.981,171,1.281,173,0.675,177,0.675,180,0.921,181,1.046,182,1.195,183,1.491,184,0.675,189,1.309,190,4.835,191,4.355,193,1.281,213,1.482,234,2.651,286,1.777,288,1.621,290,1.777,292,1.777,294,1.777,298,1.989,299,2.235,300,0.764,310,2.302,324,1.278,326,1.281,327,2.163,328,2.471,329,1.281,330,1.281,331,1.281,332,1.281,333,1.281,334,1.281,335,1.281,336,1.281,337,1.281,350,0.764,351,1.201,352,0.865,353,0.865,361,1.777,362,1.621,363,1.777,364,1.777,365,1.777,367,2.235,372,1.278,373,0.675,374,0.865,375,0.634,376,0.865,377,1.519,378,0.634,379,0.865,380,0.675,381,0.865,382,0.675,383,0.865,384,0.634,385,0.865,386,1.262,387,0.634,388,0.865,389,0.675,390,0.865,391,0.675,392,0.813,393,0.675,394,0.865,395,0.634,396,0.764,397,0.865,398,0.865,539,2.501,626,1.545,661,1.892,752,1.777,800,1.621,804,1.621,831,1.777,833,1.777,953,1.973,961,1.777,963,1.777,975,1.973,979,1.777,980,1.777,992,1.777,993,3.464,994,2.914,998,2.89,1000,2.617,1009,2.625,1012,1.777,1013,1.777,1018,1.621,1020,1.621,1369,3.925,1370,4.334,1371,4.334,1372,3.925,1373,3.338,1374,3.301,1375,2.633,1376,2.633,1377,2.633,1378,3.925,1379,2.235,1380,2.421,1381,2.235,1382,2.235,1383,2.633,1384,1.379,1385,1.491,1386,1.777,1387,3.889,1388,2.633,1389,2.235,1390,1.491,1391,2.633,1392,3.301,1393,2.633,1394,2.633,1395,2.986,1396,2.633,1397,2.633,1398,3.301,1399,2.633,1400,2.633,1401,2.633,1402,2.235,1403,2.235,1404,2.633,1405,2.633,1406,2.235,1407,2.633,1408,2.235,1409,2.633,1410,2.235,1411,2.633,1412,2.235,1413,2.633,1414,2.235,1415,2.633,1416,2.235,1417,2.633,1418,2.235,1419,2.235,1420,1.973,1421,3.777,1422,1.777,1423,2.914,1424,1.973,1425,3.301,1426,2.235,1427,2.235,1428,2.235,1429,2.235,1430,2.235,1431,2.633,1432,1.973,1433,1.777,1434,1.973,1435,2.235,1436,2.235,1437,2.235,1438,2.235,1439,2.235,1440,2.633]],["title/injectables/ErrorMessageService.html",[31,0.405,117,1.058]],["body/injectables/ErrorMessageService.html",[3,0.2,4,0.171,5,0.171,7,0.261,8,0.904,9,0.528,12,1.817,18,0.455,19,0.025,20,1.726,21,0.2,27,2.297,28,0.012,29,0.016,30,0.012,31,0.576,33,1.19,35,0.626,43,0.544,47,0.831,49,0.626,50,0.638,55,0.466,67,0.437,70,0.292,74,1.349,75,1.267,76,0.325,77,1.349,79,1.032,85,1.43,116,1.304,117,1.504,130,2.05,164,1.925,165,1.411,181,2.512,404,1.6,613,2.714,771,2.066,1022,4.922,1040,4.996,1048,3.65,1051,3.65,1106,4.135,1145,4.996,1359,4.601,1441,3.075,1442,4.871,1443,4.871,1444,4.135,1445,5.504,1446,5.504,1447,4.871,1448,3.623,1449,4.871,1450,6.141,1451,3.623,1452,4.871,1453,4.871,1454,4.871,1455,4.871,1456,3.623,1457,6.324,1458,4.871,1459,4.871,1460,4.996,1461,5.886,1462,5.886,1463,5.886,1464,5.886,1465,4.871,1466,4.871,1467,5.886,1468,4.996,1469,3.623,1470,3.65,1471,5.886,1472,5.886,1473,4.871,1474,4.871,1475,3.623,1476,3.075,1477,3.623,1478,4.135,1479,3.623]],["title/injectables/FormValidationService.html",[31,0.405,539,1.453]],["body/injectables/FormValidationService.html",[3,0.218,4,0.186,5,0.186,7,0.284,9,0.622,17,2.506,18,0.413,19,0.025,20,1.767,21,0.218,27,1.801,28,0.013,29,0.017,30,0.013,31,0.609,33,1.294,35,0.662,43,0.861,47,0.782,49,0.737,50,0.622,55,0.737,67,0.462,70,0.318,74,1.467,75,1.378,76,0.353,79,1.338,82,1.766,163,3.455,170,1.467,539,2.184,625,1.918,626,1.565,682,3.169,1025,3.344,1361,3.344,1362,3.344,1380,3.004,1385,3.573,1460,5.164,1468,5.164,1470,4.558,1476,4.87,1480,2.659,1481,3.939,1482,5.15,1483,5.737,1484,3.939,1485,3.939,1486,5.737,1487,5.15,1488,3.939,1489,5.15,1490,5.15,1491,3.939,1492,4.371,1493,3.939,1494,5.15,1495,3.344,1496,3.939,1497,3.939,1498,3.939,1499,5.737,1500,3.939,1501,3.939,1502,3.939,1503,3.939,1504,3.939,1505,3.344,1506,3.344,1507,3.939,1508,3.939,1509,3.939,1510,3.939,1511,3.939,1512,5.15,1513,5.15,1514,3.939,1515,3.939,1516,5.15,1517,3.939]],["title/injectables/HttpService.html",[31,0.405,46,1.453]],["body/injectables/HttpService.html",[3,0.213,4,0.182,5,0.182,7,0.277,8,0.941,9,0.615,18,0.434,19,0.025,21,0.213,26,2.367,27,2.294,28,0.019,29,0.017,30,0.013,31,0.6,33,1.263,35,0.652,43,0.577,46,2.15,47,0.775,49,0.805,50,0.615,54,4.914,55,0.729,67,0.577,70,0.31,74,1.432,75,1.345,76,0.345,77,1.432,78,1.709,79,1.328,82,1.471,97,1.188,116,1.302,164,1.345,165,0.986,300,1.471,484,2.595,578,1.745,599,2.595,600,3.369,613,2.881,623,3.264,624,2.367,625,1.432,638,4.341,641,2.367,764,5.46,768,3.798,771,2.15,1008,2.177,1022,2.881,1518,3.264,1519,5.67,1520,5.069,1521,6.559,1522,3.846,1523,5.069,1524,3.846,1525,5.069,1526,5.069,1527,3.846,1528,3.846,1529,3.846,1530,3.846,1531,3.846,1532,3.264,1533,3.846,1534,5.069,1535,3.846,1536,3.846,1537,3.846,1538,5.069,1539,3.846,1540,3.846,1541,3.264,1542,3.846,1543,5.069,1544,3.846,1545,3.846,1546,3.846,1547,3.846,1548,3.846,1549,3.846,1550,3.846,1551,3.846]],["title/injectables/JSONValidationService.html",[31,0.405,540,1.939]],["body/injectables/JSONValidationService.html",[3,0.226,4,0.194,5,0.194,7,0.295,8,0.76,9,0.572,10,2.143,11,1.856,12,1.264,13,0.76,14,2.316,15,2.143,16,1.625,17,1.991,18,0.486,19,0.025,20,1.785,21,0.226,26,2.518,28,0.02,29,0.018,30,0.014,31,0.625,33,1.344,35,0.678,43,0.877,47,0.751,49,0.678,50,0.572,55,0.678,67,0.473,70,0.33,74,1.524,75,1.431,76,0.367,79,1.238,82,1.899,85,0.925,121,2.598,204,2.764,540,2.988,771,1.735,1042,3.473,1359,4.625,1480,2.761,1492,3.473,1541,3.473,1552,4.625,1553,5.278,1554,5.278,1555,4.092,1556,5.278,1557,4.092,1558,5.278,1559,4.092,1560,5.278,1561,4.959,1562,5.278,1563,4.092,1564,3.955,1565,3.473,1566,4.092,1567,4.092,1568,4.092,1569,4.092,1570,4.092,1571,4.092,1572,4.092,1573,4.092,1574,4.092,1575,5.278,1576,4.092,1577,4.092,1578,4.092,1579,4.092,1580,4.092]],["title/components/LoginComponent.html",[94,0.339,378,0.825]],["body/components/LoginComponent.html",[3,0.162,4,0.139,5,0.139,7,0.211,8,0.78,9,0.318,13,1.055,18,0.386,19,0.025,21,0.162,27,1.877,28,0.017,29,0.014,30,0.01,32,2.584,35,0.54,43,0.439,47,0.816,49,0.376,50,0.533,55,0.632,67,0.569,70,0.236,76,0.263,77,1.091,78,1.465,79,0.621,82,1.22,85,0.95,94,0.486,95,0.705,96,1.297,97,0.904,98,0.962,99,0.962,100,0.962,102,1.38,103,1.83,104,0.962,105,2.239,106,1.979,108,1.38,110,1.38,115,1.944,116,1.279,117,1.989,121,2.35,128,1.999,131,2.781,132,4.557,147,1.146,164,1.024,165,0.751,170,1.091,171,1.425,173,0.751,177,0.751,180,1.024,181,1.163,182,1.328,184,0.751,185,1.802,189,0.751,192,1.976,204,2.573,213,1.558,265,2.485,268,2.485,298,0.962,300,0.85,308,2.044,309,2.835,310,2.117,311,3.304,312,2.781,313,1.976,314,1.976,315,2.835,316,1.976,317,1.976,318,3.316,321,1.976,322,1.976,323,1.657,324,1.614,325,1.976,350,0.85,351,1.297,352,0.962,353,0.962,372,1.38,373,0.751,374,0.962,375,0.705,376,0.962,377,1.614,378,1.293,379,0.962,380,0.751,381,0.962,382,0.751,383,0.962,384,0.705,385,0.962,386,1.341,387,0.705,388,0.962,389,1.077,390,0.962,391,0.751,392,0.904,393,0.751,394,0.962,395,0.705,396,0.85,397,0.962,398,0.962,536,2.131,564,1.976,565,2.485,578,1.328,583,3.992,599,1.976,600,3.098,618,2.485,626,1.668,661,2.044,669,1.976,923,1.802,1373,3.449,1380,2.573,1384,1.533,1390,1.657,1395,2.2,1421,3.038,1581,2.485,1582,4.913,1583,4.201,1584,5.684,1585,4.913,1586,5.368,1587,4.913,1588,4.201,1589,2.928,1590,2.928,1591,2.928,1592,2.928,1593,2.928,1594,2.928,1595,2.928,1596,2.928,1597,2.928,1598,4.201,1599,4.201,1600,2.928,1601,4.201,1602,2.928,1603,2.928,1604,2.928,1605,2.928,1606,2.928,1607,2.928,1608,2.928,1609,2.928,1610,2.928,1611,2.194,1612,3.148,1613,3.148,1614,2.194,1615,2.485,1616,2.485,1617,4.17,1618,2.928,1619,2.928,1620,2.928,1621,2.194,1622,2.194,1623,2.485,1624,2.485]],["title/components/MainComponent.html",[94,0.339,380,0.879]],["body/components/MainComponent.html",[3,0.157,4,0.134,5,0.134,7,0.204,8,0.762,9,0.307,13,0.762,18,0.404,19,0.025,21,0.157,28,0.01,29,0.014,30,0.01,35,0.528,43,0.425,47,0.809,49,0.364,50,0.523,55,0.68,67,0.525,70,0.229,76,0.254,78,0.773,85,0.928,94,0.555,95,0.683,96,1.267,97,0.875,98,0.931,99,0.931,100,0.931,102,1.348,103,1.797,104,0.931,105,2.229,106,1.97,108,1.348,110,1.348,115,2.128,116,1.27,128,1.97,147,1.531,173,0.727,177,0.727,180,0.991,184,0.727,189,0.727,193,1.379,213,1.535,227,2.323,270,2.406,274,3.075,280,4.384,298,0.931,300,0.823,310,1.97,320,3.614,324,1.348,327,2.1,339,2.124,341,1.913,342,2.124,347,2.124,348,1.913,350,0.823,351,1.267,352,0.931,353,0.931,354,2.406,372,1.348,373,0.727,374,0.931,375,0.683,376,0.931,377,1.585,378,1.352,379,0.931,380,1.356,381,0.931,382,1.237,383,0.931,384,0.683,385,0.931,386,1.719,387,0.683,388,0.931,389,0.727,390,0.931,391,0.727,392,0.875,393,0.727,394,0.931,395,0.683,396,1.4,397,0.931,398,0.931,404,0.931,472,2.124,484,1.913,500,3.483,536,2.236,543,2.902,578,1.286,584,3.483,599,1.913,600,3.298,624,1.744,655,4.63,923,1.744,947,2.406,967,3.075,970,2.406,983,2.124,1003,2.993,1004,2.769,1005,3.236,1035,4.489,1046,4.764,1048,3.075,1051,3.075,1625,2.406,1626,4.104,1627,4.104,1628,4.104,1629,4.104,1630,4.824,1631,4.104,1632,5.122,1633,2.834,1634,2.834,1635,4.489,1636,2.834,1637,2.834,1638,2.834,1639,4.104,1640,4.104,1641,2.834,1642,2.834,1643,2.834,1644,2.834,1645,2.406,1646,2.124,1647,2.834,1648,2.834,1649,4.104,1650,2.834,1651,2.834,1652,2.406,1653,2.834,1654,2.834,1655,4.824,1656,4.104,1657,2.834,1658,4.104,1659,2.406,1660,2.834,1661,2.406,1662,4.104,1663,4.104,1664,2.834,1665,4.104,1666,2.834,1667,2.834,1668,2.834,1669,2.834,1670,2.834,1671,2.834,1672,2.834,1673,2.834,1674,3.483,1675,2.834,1676,2.834,1677,2.834,1678,2.834,1679,4.104,1680,2.406,1681,2.834,1682,2.406]],["title/components/NewAccountDialog.html",[94,0.339,177,0.879]],["body/components/NewAccountDialog.html",[1,2.141,3,0.138,4,0.118,5,0.118,7,0.18,8,0.695,9,0.406,10,1.311,11,1.7,12,1.157,13,0.695,15,1.311,16,1.488,18,0.439,19,0.025,20,0.683,21,0.138,27,2.315,28,0.008,29,0.013,30,0.008,35,0.481,43,0.376,47,0.81,49,0.481,50,0.54,55,0.64,67,0.52,70,0.202,76,0.225,78,1.225,79,0.531,82,0.727,85,1.379,94,0.444,95,0.603,96,1.157,97,0.773,98,0.823,99,0.823,100,0.823,102,1.231,103,1.672,104,0.823,105,2.189,106,1.934,107,1.417,108,1.231,110,1.231,115,1.96,116,1.211,117,1.918,120,2.634,121,1.782,127,2.125,128,1.855,130,1.417,147,1.359,164,0.876,165,0.642,170,0.933,171,1.218,173,0.642,177,1.277,178,4.784,179,4.309,180,0.876,181,0.994,182,1.136,183,1.417,184,0.642,189,0.642,193,1.218,213,1.548,273,2.125,286,1.69,288,1.541,290,1.69,292,1.69,294,1.69,298,0.823,300,0.727,310,2.272,324,1.231,326,1.218,327,2.118,328,2.42,329,1.218,330,1.218,331,1.218,332,1.218,333,1.218,334,1.218,335,1.218,336,1.218,337,1.218,350,0.727,351,1.157,352,0.823,353,0.823,356,2.125,361,1.69,362,1.541,363,1.69,364,1.69,365,1.69,372,1.231,373,0.642,374,0.823,375,0.603,376,0.823,377,1.475,378,0.603,379,0.823,380,0.642,381,0.823,382,0.642,383,0.823,384,0.603,385,0.823,386,1.225,387,0.603,388,0.823,389,0.642,390,0.823,391,0.642,392,0.773,393,0.642,394,0.823,395,0.603,396,0.727,397,0.823,398,0.823,404,0.823,539,2.46,587,3.732,625,0.933,661,1.823,752,1.69,771,1.062,783,2.125,800,2.305,804,2.305,831,2.528,833,2.528,953,1.876,961,1.69,963,1.69,975,1.876,979,1.69,980,1.69,992,1.69,993,3.363,994,2.807,998,2.82,1000,2.54,1004,1.962,1005,1.962,1018,1.541,1020,1.541,1323,3.066,1369,3.81,1370,4.228,1371,4.228,1372,3.81,1373,3.284,1374,3.18,1378,3.18,1379,2.125,1380,2.35,1381,2.125,1382,2.125,1384,1.311,1385,1.417,1386,1.69,1389,2.125,1390,1.417,1395,2.931,1398,3.18,1402,2.125,1403,2.125,1406,2.125,1408,2.125,1410,2.125,1412,2.125,1414,2.125,1416,2.125,1418,2.125,1419,2.125,1420,1.876,1421,3.746,1422,1.69,1423,2.807,1424,1.876,1425,3.18,1426,2.125,1427,2.125,1428,2.125,1429,2.125,1430,2.125,1432,1.876,1433,1.69,1434,1.876,1435,2.125,1436,2.125,1437,2.125,1438,2.125,1439,2.125,1683,4.488,1684,3.746,1685,3.746,1686,2.504,1687,3.746,1688,4.228,1689,2.504,1690,2.504,1691,2.504,1692,2.504,1693,2.504,1694,2.125,1695,2.504,1696,4.488,1697,2.504,1698,2.504,1699,2.504,1700,4.488,1701,2.504,1702,2.504,1703,2.504,1704,2.504,1705,2.504,1706,2.504,1707,2.504,1708,2.504]],["title/components/PreselectionComponent.html",[94,0.339,384,0.825]],["body/components/PreselectionComponent.html",[3,0.178,4,0.152,5,0.152,7,0.232,8,0.833,9,0.349,13,0.833,18,0.478,19,0.025,20,1.225,21,0.178,28,0.011,29,0.015,30,0.011,35,0.577,43,0.483,47,0.834,49,0.413,50,0.561,55,0.577,67,0.547,70,0.259,76,0.288,78,0.878,85,1.265,94,0.512,95,0.775,96,1.386,97,0.993,98,1.057,99,1.057,100,1.057,102,1.475,103,1.926,104,1.057,105,2.267,106,2.003,108,1.475,110,1.475,115,2.182,116,1.304,117,2.029,120,2.787,128,2.085,147,1.411,164,1.57,165,1.151,173,0.825,177,0.825,180,1.125,181,1.277,182,1.459,183,1.82,184,0.825,189,0.825,193,1.565,213,1.625,298,1.057,300,0.934,324,1.475,327,1.783,350,0.934,351,1.386,352,1.057,353,1.057,372,1.475,373,0.825,374,1.057,375,0.775,376,1.057,377,1.699,378,0.775,379,1.057,380,0.825,381,1.057,382,1.326,383,1.057,384,1.348,385,1.057,386,1.411,387,0.775,388,1.057,389,0.825,390,1.057,391,0.825,392,0.993,393,1.51,394,1.057,395,0.775,396,0.934,397,1.057,398,1.057,404,1.057,543,2.943,578,1.459,588,3.364,600,3.278,727,3.03,828,3.03,950,2.73,951,2.73,952,2.73,972,2.73,973,2.73,974,2.73,1003,2.541,1004,2.351,1005,2.931,1202,3.364,1349,3.811,1635,3.811,1646,2.409,1661,2.73,1682,2.73,1709,2.73,1710,4.489,1711,3.811,1712,4.489,1713,5.172,1714,4.489,1715,4.39,1716,4.39,1717,5.598,1718,3.216,1719,4.489,1720,3.216,1721,3.216,1722,3.216,1723,4.489,1724,4.489,1725,3.216,1726,3.216,1727,3.216,1728,3.216,1729,3.216,1730,3.216,1731,3.216,1732,3.216,1733,3.216,1734,3.216,1735,4.489,1736,3.216,1737,3.216,1738,3.216,1739,3.216]],["title/injectables/RecaptchaService.html",[31,0.405,541,1.794]],["body/injectables/RecaptchaService.html",[3,0.259,4,0.221,5,0.221,7,0.337,9,0.623,18,0.337,19,0.025,21,0.259,28,0.016,29,0.019,30,0.016,31,0.679,33,1.537,35,0.738,43,0.702,45,4.372,46,2.87,47,0.738,49,0.738,50,0.623,51,4.193,55,0.601,67,0.596,69,2.878,70,0.377,71,2.449,72,3.504,73,3.156,74,1.742,75,1.635,76,0.419,77,1.742,78,1.276,79,0.991,541,3.006,638,4.193,641,2.878,741,3.97,759,4.302,760,3.874,771,1.983,1740,3.97,1741,5.741,1742,4.677,1743,5.741,1744,4.677,1745,4.873,1746,5.644,1747,4.677,1748,3.504]],["title/components/ResetPasswordAdminDialog.html",[94,0.339,184,0.879]],["body/components/ResetPasswordAdminDialog.html",[3,0.177,4,0.152,5,0.152,7,0.231,8,0.832,9,0.348,13,1.305,18,0.323,19,0.024,21,0.177,28,0.011,29,0.015,30,0.011,35,0.576,43,0.481,47,0.783,49,0.412,50,0.56,55,0.804,67,0.463,70,0.259,76,0.288,77,1.195,85,1.013,94,0.511,95,0.773,96,1.384,97,0.991,98,1.054,99,1.054,100,1.054,102,1.473,103,1.924,104,1.054,105,2.267,106,2.003,107,2.537,108,1.473,110,1.473,115,2.003,116,1.304,128,2.083,131,3.165,147,1.526,158,1.816,165,1.434,171,1.561,173,0.823,177,0.823,180,1.122,184,1.434,185,3.85,186,4.222,189,0.823,213,1.623,234,2.863,298,1.054,300,0.931,304,3.025,307,2.165,310,2.415,324,1.473,326,1.561,327,2.575,328,2.669,329,1.561,330,1.561,331,1.561,332,1.561,333,1.561,334,1.561,335,1.561,336,1.561,337,1.561,350,0.931,351,1.384,352,1.054,353,1.054,371,2.165,372,1.473,373,0.823,374,1.054,375,0.773,376,1.054,377,1.697,378,0.773,379,1.054,380,0.823,381,1.054,382,0.823,383,1.054,384,0.773,385,1.054,386,1.792,387,0.773,388,1.054,389,0.823,390,1.054,391,0.823,392,0.991,393,0.823,394,1.054,395,0.773,396,0.931,397,1.054,398,1.054,625,1.669,626,1.78,995,3.774,996,3.774,997,2.165,998,3.165,1000,2.537,1003,3.165,1004,2.928,1005,3.342,1006,3.774,1008,2.537,1009,3.025,1012,2.165,1013,2.165,1014,2.404,1015,2.165,1017,3.025,1018,1.975,1020,1.975,1749,2.723,1750,5.166,1751,4.482,1752,3.208,1753,3.208,1754,3.208,1755,3.208,1756,3.208,1757,3.208,1758,3.208,1759,3.208]],["title/components/ResetPasswordComponent.html",[94,0.339,387,0.825]],["body/components/ResetPasswordComponent.html",[3,0.151,4,0.129,5,0.129,7,0.196,8,0.741,9,0.296,13,1.026,18,0.398,19,0.025,20,1.089,21,0.151,22,1.428,27,2.019,28,0.018,29,0.013,30,0.009,32,2.529,35,0.513,43,0.409,47,0.835,49,0.351,50,0.512,55,0.607,67,0.559,70,0.22,76,0.245,77,1.016,78,1.508,79,0.578,82,0.792,85,0.902,94,0.467,95,0.657,96,1.232,97,0.842,98,0.896,99,0.896,100,0.896,102,1.311,103,1.758,104,0.896,105,2.217,106,1.959,108,1.311,110,1.311,115,1.897,116,1.258,117,1.958,121,2.293,128,1.934,147,1.089,164,1.816,165,1.332,170,1.016,173,0.699,177,0.699,180,0.954,181,1.083,182,1.237,184,0.699,188,1.841,189,0.699,192,1.841,202,2.99,204,2.09,208,2.99,209,2.693,213,1.508,298,0.896,300,0.792,307,1.841,324,1.311,350,0.792,351,1.232,352,0.896,353,0.896,371,1.841,372,1.311,373,0.699,374,0.896,375,0.657,376,0.896,377,1.55,378,0.657,379,0.896,380,0.699,381,0.896,382,0.699,383,0.896,384,0.657,385,0.896,386,1.73,387,1.251,388,0.896,389,0.699,390,0.896,391,0.699,392,0.842,393,0.699,394,0.896,395,0.657,396,0.792,397,0.896,398,0.896,536,2.085,539,2.529,558,4.429,578,1.237,600,3.123,607,3.387,624,1.679,625,1.486,626,2.195,661,1.942,682,2.456,923,1.679,1178,4.006,1323,3.196,1373,3.375,1380,2.471,1384,2.09,1385,1.544,1386,1.841,1390,1.544,1395,2.09,1421,2.939,1611,2.044,1612,3.891,1613,3.891,1614,2.044,1616,2.315,1621,2.044,1622,2.044,1624,2.315,1652,2.315,1760,5.57,1761,2.315,1762,4.719,1763,3.991,1764,4.691,1765,4.691,1766,4.006,1767,4.719,1768,5.193,1769,4.006,1770,2.728,1771,5.193,1772,3.991,1773,2.728,1774,2.728,1775,2.728,1776,2.728,1777,2.728,1778,2.728,1779,2.728,1780,2.728,1781,2.728,1782,2.315,1783,2.728,1784,2.728,1785,2.315,1786,3.387,1787,2.315,1788,4.719,1789,2.728,1790,2.728,1791,2.728,1792,2.728,1793,2.728,1794,2.315,1795,2.728,1796,2.728,1797,2.728,1798,2.728,1799,2.315,1800,2.315,1801,2.315,1802,2.315,1803,2.315,1804,2.315,1805,2.315,1806,2.315]],["title/components/ResetPasswordUserDialog.html",[94,0.339,389,0.879]],["body/components/ResetPasswordUserDialog.html",[3,0.16,4,0.137,5,0.137,7,0.208,8,0.773,9,0.314,12,1.506,13,1.309,18,0.384,19,0.024,21,0.16,27,1.456,28,0.01,29,0.014,30,0.01,35,0.535,43,0.434,47,0.813,49,0.372,50,0.529,55,0.78,67,0.507,70,0.233,76,0.259,77,1.077,78,0.789,79,0.613,85,0.941,94,0.483,95,0.696,96,1.286,97,0.893,98,0.95,99,0.95,100,0.95,102,1.368,103,1.817,104,0.95,105,2.235,106,1.975,108,1.368,110,1.368,115,2.079,116,1.275,117,1.984,121,1.937,128,1.988,131,3.021,147,1.331,158,1.636,165,1.068,170,1.077,171,1.407,173,0.741,177,0.741,180,1.011,181,1.148,182,1.312,184,0.741,185,3.954,189,0.741,213,1.549,234,2.752,288,1.779,298,0.95,300,0.839,304,2.809,307,1.951,310,2.357,324,1.368,326,1.407,327,2.513,328,2.566,329,1.407,330,1.407,331,1.407,332,1.407,333,1.407,334,1.407,335,1.407,336,1.407,337,1.407,350,0.839,351,1.286,352,0.95,353,0.95,362,1.779,371,1.951,372,1.368,373,0.741,374,0.95,375,0.696,376,0.95,377,1.603,378,0.696,379,0.95,380,0.741,381,0.95,382,0.741,383,0.95,384,0.696,385,0.95,386,1.753,387,0.696,388,0.95,389,1.369,390,0.95,391,0.741,392,0.893,393,0.741,394,0.95,395,0.696,396,0.839,397,0.95,398,0.95,564,4.335,587,3.119,625,1.551,661,2.026,995,3.602,996,3.602,997,1.951,998,3.021,1000,2.356,1003,3.021,1004,2.795,1005,3.253,1006,3.602,1008,2.356,1009,2.809,1012,1.951,1013,1.951,1015,1.951,1017,2.809,1018,1.779,1020,1.779,1373,3.436,1380,2.555,1384,1.514,1390,1.636,1395,1.514,1421,2.356,1422,1.951,1433,1.951,1615,2.454,1623,2.454,1694,2.454,1807,2.454,1808,4.878,1809,4.163,1810,4.878,1811,4.878,1812,4.163,1813,2.891,1814,2.891,1815,2.891,1816,4.163,1817,2.891,1818,2.891,1819,2.891,1820,2.891,1821,2.891,1822,2.891,1823,2.891,1824,2.891,1825,2.891,1826,2.891]],["title/injectables/SearchService.html",[31,0.405,542,1.939]],["body/injectables/SearchService.html",[3,0.24,4,0.206,5,0.206,7,0.313,9,0.471,18,0.313,19,0.025,21,0.24,28,0.015,29,0.019,30,0.015,31,0.649,33,1.427,35,0.705,43,0.902,47,0.705,49,0.558,50,0.471,55,0.558,67,0.566,70,0.351,74,1.618,75,1.519,76,0.39,79,1.162,118,4.108,147,1.185,163,3.305,165,1.406,170,1.618,226,1.725,272,3.819,404,1.802,472,5.161,542,3.104,641,2.674,725,4.259,771,2.548,1478,4.655,1827,3.687,1828,5.484,1829,5.484,1830,5.484,1831,4.344,1832,5.484,1833,6.311,1834,6.311,1835,4.344,1836,5.484,1837,6.311,1838,5.484,1839,5.484,1840,5.484,1841,4.344,1842,4.344,1843,4.344,1844,4.344,1845,4.344,1846,4.344,1847,4.344]],["title/components/SendCustomerConfirmationDialog.html",[94,0.339,391,0.879]],["body/components/SendCustomerConfirmationDialog.html",[3,0.161,4,0.138,5,0.138,7,0.21,8,0.778,9,0.455,12,1.294,13,0.778,18,0.425,19,0.025,20,0.796,21,0.161,28,0.01,29,0.014,30,0.01,35,0.689,43,0.438,47,0.801,49,0.539,50,0.581,55,0.783,67,0.53,70,0.236,71,1.528,76,0.262,78,0.796,85,1.212,94,0.485,95,0.703,96,1.294,97,0.901,98,0.959,99,0.959,100,0.959,104,0.959,105,2.238,106,1.978,108,1.377,110,1.377,115,1.865,116,1.278,121,1.948,131,3.345,147,1.144,163,2.973,164,1.466,165,1.515,170,1.087,171,1.42,173,0.748,177,0.748,180,1.021,184,0.748,189,0.748,193,1.42,213,1.556,298,0.959,300,0.847,324,1.377,327,2.129,350,0.847,351,1.294,352,0.959,353,0.959,372,1.377,373,0.748,374,0.959,375,0.703,376,0.959,377,1.611,378,0.703,379,0.959,380,0.748,381,0.959,382,0.748,383,0.959,384,0.703,385,0.959,386,1.338,387,0.703,388,0.959,389,0.748,390,0.959,391,1.375,392,1.988,393,1.806,394,0.959,395,0.703,396,0.847,397,0.959,398,0.959,404,0.959,541,3.188,567,4.398,568,4.752,625,1.561,626,1.665,682,1.796,686,2.477,759,3.14,760,2.829,771,1.238,995,3.617,996,3.617,997,1.97,998,3.213,1000,3.034,1003,3.034,1004,3.095,1005,3.371,1006,3.617,1008,2.372,1014,2.187,1015,1.97,1343,3.558,1384,1.528,1395,2.195,1688,2.477,1711,3.558,1745,5.384,1746,2.477,1748,2.187,1848,5.384,1849,2.477,1850,4.192,1851,4.192,1852,4.905,1853,4.192,1854,4.163,1855,4.192,1856,4.192,1857,2.919,1858,2.919,1859,4.192,1860,2.919,1861,4.192,1862,4.192,1863,4.192,1864,2.919,1865,2.919,1866,2.919,1867,2.919,1868,2.919,1869,2.919,1870,2.919,1871,2.919,1872,2.919]],["title/components/SettingsComponent.html",[94,0.339,395,0.825]],["body/components/SettingsComponent.html",[1,1.494,3,0.116,4,0.099,5,0.099,7,0.151,8,0.608,9,0.355,11,2.063,12,0.649,13,1.076,14,1.189,16,0.834,18,0.417,19,0.025,21,0.116,25,1.1,27,2.2,28,0.007,29,0.011,30,0.007,32,2.313,35,0.421,41,2.78,43,0.315,47,0.837,49,0.421,50,0.493,55,0.584,67,0.532,70,0.169,76,0.188,78,1.241,79,0.694,85,1.028,94,0.398,95,0.506,96,1.011,97,0.649,98,0.69,99,0.69,100,0.69,102,1.076,103,1.499,104,0.69,105,2.125,106,1.877,107,2.574,108,1.076,110,1.076,115,1.984,116,1.151,117,1.831,120,2.514,121,1.599,128,1.694,130,1.189,147,1.241,163,2.581,164,1.59,165,1.52,170,0.782,173,0.539,177,0.539,180,0.734,181,0.834,182,0.953,183,1.189,184,0.539,188,1.417,189,0.539,192,1.417,193,1.022,204,1.1,213,1.431,226,1.301,247,2.78,286,1.417,288,1.293,290,1.417,292,1.417,294,1.417,298,0.69,300,0.61,308,1.594,309,2.21,310,2.344,311,3.473,312,2.279,313,1.417,314,1.417,315,2.21,316,1.417,317,1.417,318,2.717,321,1.417,322,1.417,323,1.189,324,1.323,325,1.417,326,1.022,327,2.074,328,2.237,329,1.022,330,1.022,331,1.022,332,1.022,333,1.594,334,1.022,335,1.022,336,1.022,337,1.022,349,2.454,350,0.61,351,1.011,352,0.69,353,0.69,361,1.417,362,1.293,363,1.417,364,1.417,365,1.417,372,1.076,373,0.539,374,0.69,375,0.506,376,0.69,377,1.323,378,0.506,379,0.69,380,0.539,381,0.69,382,0.539,383,0.69,384,0.506,385,0.69,386,1.099,387,0.506,388,0.69,389,0.539,390,0.69,391,0.539,392,0.649,393,0.539,394,0.69,395,1.095,396,1.431,397,0.69,398,0.69,536,1.907,539,2.313,543,2.689,620,3.859,625,1.836,626,2.436,661,1.594,677,1.574,723,2.78,800,1.293,804,1.293,831,1.417,833,1.417,923,1.293,927,1.783,961,1.417,963,1.417,967,2.454,969,3.417,979,1.417,980,1.417,1323,2.798,1373,3.087,1380,2.581,1384,1.715,1385,1.189,1386,1.417,1390,1.854,1392,4.433,1395,2.381,1420,1.574,1421,3.472,1422,1.417,1423,2.454,1424,1.574,1432,1.574,1433,1.417,1434,1.574,1470,2.454,1506,2.78,1611,1.574,1612,3.913,1613,3.913,1614,1.574,1617,3.417,1621,1.574,1622,1.574,1646,1.574,1659,1.783,1680,1.783,1764,4.63,1765,4.184,1766,3.417,1769,3.417,1782,1.783,1785,1.783,1786,2.78,1787,1.783,1794,1.783,1799,1.783,1800,1.783,1801,1.783,1802,1.783,1803,1.783,1804,1.783,1805,1.783,1806,1.783,1873,1.783,1874,4.026,1875,3.275,1876,4.026,1877,4.026,1878,4.026,1879,4.547,1880,4.026,1881,3.275,1882,2.1,1883,2.1,1884,2.1,1885,3.275,1886,2.1,1887,3.275,1888,2.1,1889,2.1,1890,2.1,1891,2.1,1892,2.1,1893,2.1,1894,2.1,1895,2.1,1896,2.1,1897,2.1,1898,2.1,1899,2.1,1900,2.1,1901,2.1,1902,2.1,1903,2.1,1904,2.1,1905,2.1,1906,2.1,1907,2.1,1908,2.1,1909,2.1,1910,2.1,1911,2.1,1912,2.1,1913,2.1,1914,2.1,1915,2.1,1916,2.1,1917,2.1,1918,2.1,1919,2.1,1920,2.1,1921,2.1,1922,3.275,1923,3.275,1924,2.1,1925,3.275,1926,2.1,1927,2.1,1928,2.1,1929,3.275,1930,2.1,1931,2.1,1932,2.1,1933,2.1,1934,2.1,1935,2.1,1936,2.1,1937,2.1,1938,2.1,1939,2.1,1940,2.1,1941,2.1,1942,2.1,1943,4.547,1944,2.1,1945,2.1,1946,2.1,1947,2.1,1948,2.1,1949,2.1,1950,2.1,1951,2.1,1952,2.1,1953,2.1,1954,2.1,1955,2.1,1956,2.1]],["title/injectables/StorageService.html",[31,0.405,543,1.554]],["body/injectables/StorageService.html",[3,0.247,4,0.212,5,0.212,7,0.322,9,0.606,18,0.402,19,0.025,20,1.827,21,0.247,28,0.015,29,0.019,30,0.015,31,0.661,33,1.469,35,0.718,43,0.914,47,0.86,49,0.718,50,0.606,55,0.783,67,0.401,70,0.361,74,1.665,75,1.564,76,0.401,79,1.184,147,1.662,234,2.717,404,1.469,543,2.533,588,4.184,661,2.717,828,3.017,1202,3.35,1444,4.74,1505,4.74,1715,5.571,1716,5.571,1957,3.795,1958,5.584,1959,5.584,1960,6.377,1961,4.471,1962,4.471,1963,5.584,1964,4.471,1965,4.471,1966,4.471,1967,4.471,1968,4.471,1969,4.471,1970,4.471,1971,4.471,1972,5.584,1973,5.584,1974,4.471,1975,4.471,1976,4.471,1977,4.471]],["title/coverage.html",[1978,3.981]],["body/coverage.html",[0,2.556,1,1.891,5,0.162,6,3.613,13,1.069,18,0.247,19,0.025,22,1.798,25,1.798,28,0.012,29,0.016,30,0.012,31,0.812,32,1.456,34,2.914,46,1.456,71,2.459,85,0.776,94,0.682,95,0.827,101,2.914,116,0.681,117,1.06,120,1.456,156,2.572,173,0.88,174,2.572,175,2.317,177,0.88,178,2.572,179,2.317,181,1.363,184,0.88,185,2.89,186,2.317,189,0.88,190,2.572,191,2.317,227,4.02,373,0.88,375,0.827,378,0.827,380,0.88,382,0.88,384,0.827,387,0.827,389,0.88,391,0.88,393,1.204,395,0.827,402,2.572,403,2.572,486,2.317,487,2.572,490,2.572,497,2.914,503,3.519,504,3.519,536,1.2,537,1.798,538,1.798,539,1.456,540,1.943,541,1.798,542,1.943,543,1.557,554,2.572,558,2.317,564,2.317,567,2.317,568,2.572,570,2.572,571,2.572,579,2.113,594,2.572,596,3.519,597,2.914,627,2.914,628,2.317,630,2.914,649,2.914,669,2.317,725,2.317,726,2.914,736,2.914,881,2.572,903,2.914,981,2.914,992,3.613,1021,2.914,1385,1.943,1441,2.914,1480,3.613,1518,2.914,1552,3.519,1564,2.572,1581,2.914,1625,2.914,1674,2.914,1709,2.914,1740,2.914,1749,2.914,1760,2.914,1761,2.914,1807,2.914,1827,2.914,1848,2.914,1849,2.914,1873,2.914,1957,2.914,1978,2.914,1979,3.433,1980,3.433,1981,3.433,1982,6.581,1983,6.581,1984,3.433,1985,3.433,1986,3.433,1987,3.433,1988,4.697,1989,3.433,1990,3.433,1991,3.433,1992,3.433,1993,3.433,1994,3.433,1995,4.697,1996,3.433,1997,3.433,1998,3.433,1999,4.697,2000,4.697,2001,3.433,2002,3.433,2003,3.433,2004,3.433,2005,3.433,2006,3.433,2007,3.433,2008,3.433,2009,5.756,2010,5.756,2011,4.697,2012,3.986,2013,3.433,2014,3.433,2015,4.697,2016,5.354,2017,5.354,2018,3.433,2019,3.433,2020,3.433,2021,3.433,2022,4.697,2023,3.433,2024,3.433,2025,2.914,2026,2.914,2027,3.986,2028,2.914,2029,2.914,2030,3.433,2031,3.433]],["title/dependencies.html",[527,2.783,2032,2.854]],["body/dependencies.html",[19,0.025,28,0.015,29,0.019,30,0.015,70,0.352,170,1.623,226,1.731,272,2.467,308,2.121,310,1.623,328,2.73,405,3.265,408,3.699,484,4.396,485,3.699,527,2.941,529,3.265,578,1.977,641,3.382,685,3.265,735,4.117,983,3.265,1532,3.699,1561,4.664,1645,3.699,1748,3.265,2033,4.358,2034,6.831,2035,4.358,2036,5.495,2037,4.358,2038,4.358,2039,4.358,2040,4.358,2041,4.358,2042,4.358,2043,5.495,2044,4.358,2045,4.358,2046,4.358,2047,4.358,2048,3.699,2049,4.358,2050,4.358,2051,4.358,2052,4.358,2053,5.495,2054,4.358,2055,4.358,2056,5.495,2057,4.358,2058,4.358,2059,4.358,2060,4.358,2061,4.358,2062,4.664,2063,5.495,2064,4.358,2065,4.358,2066,4.358,2067,4.358,2068,4.358,2069,4.358,2070,4.358,2071,4.358,2072,4.358,2073,4.358,2074,4.358,2075,4.358,2076,4.358,2077,4.358,2078,4.358,2079,4.358,2080,4.358,2081,4.358,2082,5.495,2083,4.358,2084,4.358,2085,4.358,2086,4.358,2087,4.358,2088,4.358,2089,4.358,2090,4.358,2091,4.358,2092,4.358]],["title/index.html",[7,0.205,2093,2.854,2094,2.854]],["body/index.html",[4,0.225,19,0.02,28,0.016,29,0.02,30,0.016,50,0.515,85,1.074,94,0.619,106,1.379,308,3.347,405,4.686,545,3.205,727,3.205,760,3.911,826,4.031,1313,4.031,1323,2.923,1495,4.031,2062,4.031,2095,4.75,2096,5.796,2097,4.75,2098,6.255,2099,4.75,2100,4.75,2101,4.75,2102,6.678,2103,4.75,2104,4.75,2105,4.75,2106,4.75,2107,4.75,2108,4.75,2109,4.75,2110,6.255,2111,6.255,2112,4.75,2113,6.678,2114,4.75,2115,4.75,2116,4.75,2117,4.75,2118,4.75,2119,4.031,2120,5.796,2121,5.796,2122,6.513,2123,4.75,2124,5.796,2125,5.796,2126,4.75,2127,6.513,2128,4.75,2129,4.75,2130,6.255,2131,4.75,2132,4.75,2133,4.75]],["title/modules.html",[401,2.655]],["body/modules.html",[19,0.021,28,0.019,29,0.021,30,0.019,400,3.107,401,3.107,526,3.705,535,3.107,735,4.113,2048,4.66,2134,6.315,2135,6.315,2136,6.648,2137,5.489]],["title/overview.html",[2138,3.981]],["body/overview.html",[2,2.404,19,0.024,28,0.013,29,0.017,30,0.013,32,2.423,33,1.283,46,2.423,95,1.376,96,1.206,116,1.134,117,1.764,120,2.423,173,1.465,177,1.465,184,1.465,189,1.465,226,1.551,350,1.134,373,1.688,375,1.376,378,1.376,380,1.465,382,1.465,384,1.376,386,1.066,387,1.376,389,1.465,391,1.465,395,1.376,399,2.045,400,3.234,401,2.211,492,2.636,493,2.926,526,4.945,527,2.636,528,3.315,529,2.926,530,3.315,531,3.315,532,3.315,533,3.315,534,3.315,535,3.234,536,1.998,537,2.992,538,2.992,539,2.423,540,3.234,541,2.992,542,3.234,543,2.592,544,4.347,545,2.636,576,2.636,594,2.926,2138,3.315,2139,3.906,2140,3.906,2141,3.906,2142,3.906,2143,3.906]],["title/routes.html",[576,3.165]],["body/routes.html",[19,0.022,28,0.019,29,0.022,30,0.019,576,3.803]],["title/miscellaneous/variables.html",[2144,2.422,2145,3.501]],["body/miscellaneous/variables.html",[7,0.261,8,0.672,10,1.897,11,1.644,12,1.119,13,0.672,14,2.05,15,1.897,16,1.439,17,1.763,18,0.5,19,0.025,20,1.726,28,0.012,29,0.016,30,0.012,32,1.536,46,1.536,71,3.082,82,1.052,116,0.719,117,1.119,120,1.536,164,2.297,165,1.685,323,2.05,341,2.445,400,2.05,402,2.714,403,3.65,410,3.075,412,3.075,414,3.075,416,3.075,418,3.075,420,3.075,422,3.075,424,3.075,426,3.075,429,3.075,430,3.075,433,3.075,435,3.075,436,3.075,438,3.075,440,3.075,442,3.075,444,3.075,446,3.075,448,3.075,451,3.075,453,3.075,455,3.075,458,3.075,460,3.075,462,3.075,464,3.075,466,3.075,468,3.075,470,3.075,473,3.075,475,3.075,477,3.075,479,3.075,481,3.075,483,3.075,487,3.65,490,3.65,494,3.075,495,3.075,503,2.714,504,3.65,516,3.65,518,3.075,519,3.287,521,4.41,523,4.41,535,2.05,536,1.267,537,1.897,538,1.897,539,1.536,540,2.05,541,1.897,542,2.05,543,1.644,570,3.65,571,3.65,579,2.23,625,1.349,626,2.186,628,2.445,1480,3.287,1552,2.714,1564,3.65,1565,3.075,1632,3.075,1854,4.135,2012,3.075,2025,3.075,2026,3.075,2027,3.075,2028,4.135,2029,4.135,2119,4.135,2144,3.075,2145,3.075,2146,3.623,2147,4.871,2148,3.623,2149,3.623,2150,4.871,2151,3.623,2152,3.623,2153,3.623,2154,4.871,2155,3.623,2156,6.462,2157,3.623,2158,3.623,2159,4.871,2160,3.623,2161,3.623,2162,3.623,2163,3.623,2164,4.871,2165,5.504,2166,4.871,2167,3.623,2168,3.623,2169,3.623,2170,3.623,2171,3.623,2172,3.623,2173,3.623,2174,3.623,2175,3.623,2176,3.623,2177,3.623,2178,3.623]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["0.0.2",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["0000",{"_index":783,"title":{},"body":{"injectables/CustomerService.html":{},"components/NewAccountDialog.html":{}}}],["1",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/SearchService.html":{},"components/SettingsComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["1.0.1",{"_index":2074,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":2079,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":337,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["1.6.2",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["1/43",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["10.0.0",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["10.1.5",{"_index":2100,"title":{},"body":{"index.html":{}}}],["100",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["10px",{"_index":349,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/SettingsComponent.html":{}}}],["11.0.0",{"_index":2040,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["11.2.5",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["11.2.6",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":345,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["13.1.0",{"_index":2076,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2141,"title":{},"body":{"overview.html":{}}}],["15",{"_index":2140,"title":{},"body":{"overview.html":{}}}],["17/48",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":1673,"title":{},"body":{"components/MainComponent.html":{}}}],["2",{"_index":881,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{},"coverage.html":{}}}],["2.0.0",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":969,"title":{},"body":{"components/CustomersComponent.html":{},"components/SettingsComponent.html":{}}}],["22",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1670,"title":{},"body":{"components/MainComponent.html":{}}}],["28",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2139,"title":{},"body":{"overview.html":{}}}],["3.1.4",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":346,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["33",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["4/9",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":1550,"title":{},"body":{"injectables/HttpService.html":{}}}],["44",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2142,"title":{},"body":{"overview.html":{}}}],["5.6.0",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1674,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["6.14.8",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["60px",{"_index":1667,"title":{},"body":{"components/MainComponent.html":{}}}],["66",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["6ldmvteaaaaaahpan12msq5nnwr8g6d4txtsleig",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.1",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2143,"title":{},"body":{"overview.html":{}}}],["8.5.1",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["800px",{"_index":340,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["9",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["9_",{"_index":1515,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["a.username.tolowercase",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{}}}],["abbrechen",{"_index":1185,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["abbreviation",{"_index":1040,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{}}}],["abbreviations",{"_index":1443,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["abmelden",{"_index":1082,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["acc",{"_index":199,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DictionaryService.html":{}}}],["accessors",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["accordion",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["account'},{'name",{"_index":377,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["account.dialog",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{}}}],["account.dialog.html",{"_index":994,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["account.dialog.scss",{"_index":993,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["account.dialog.ts",{"_index":992,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"coverage.html":{}}}],["account.dialog.ts:10",{"_index":999,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["account.dialog.ts:12",{"_index":1010,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["account.dialog.ts:13",{"_index":1011,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["account.dialog.ts:15",{"_index":1001,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["account.dialog.ts:16",{"_index":1381,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["account.dialog.ts:17",{"_index":1374,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["account.dialog.ts:19",{"_index":1379,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["account.dialog.ts:20",{"_index":1378,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["account.dialog.ts:21",{"_index":1007,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["account.dialog.ts:23",{"_index":1690,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["account.dialog.ts:24",{"_index":1376,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["account.dialog.ts:28",{"_index":1002,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["account.dialog.ts:36",{"_index":1689,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["account.dialog.ts:38",{"_index":1375,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["account.dialog.ts:40",{"_index":1691,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["account.dialog.ts:42",{"_index":1377,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["account.dialog.ts:58",{"_index":1383,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["account.dialog.ts:61",{"_index":1692,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["account.dialog.ts:69",{"_index":1686,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["account.email",{"_index":289,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.email.tolowercase().includes(val",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.firstname",{"_index":282,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.mobile",{"_index":295,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.phone",{"_index":293,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.role",{"_index":297,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.role.tolowercase().includes(val",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.secondname",{"_index":283,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.username",{"_index":287,"title":{},"body":{"components/AdminComponent.html":{}}}],["account.username.tolowercase().includes(val",{"_index":216,"title":{},"body":{"components/AdminComponent.html":{}}}],["account_circle",{"_index":285,"title":{},"body":{"components/AdminComponent.html":{}}}],["accountdto",{"_index":25,"title":{"interfaces/AccountDTO.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["accountform",{"_index":1876,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accountformcontrol",{"_index":1880,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accountjwt",{"_index":22,"title":{"interfaces/AccountJWT.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["accountresponse",{"_index":247,"title":{},"body":{"components/AdminComponent.html":{},"components/SettingsComponent.html":{}}}],["accountresponse.account.blocked",{"_index":252,"title":{},"body":{"components/AdminComponent.html":{}}}],["accountresponse.account.email",{"_index":250,"title":{},"body":{"components/AdminComponent.html":{}}}],["accountrole",{"_index":619,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["accounts",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{}}}],["accountservice",{"_index":32,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accounttoblock",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttoblock.blocked",{"_index":246,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttochange",{"_index":1887,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.blocked",{"_index":1937,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.companycode",{"_index":1910,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.firstname",{"_index":1912,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.mobile",{"_index":1918,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.password",{"_index":1927,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.passwordold",{"_index":1928,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.phone",{"_index":1916,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttochange.secondname",{"_index":1914,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accounttoedit",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttoreset",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttoreset.username",{"_index":267,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttosend",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttosend.email",{"_index":244,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttosend.username",{"_index":235,"title":{},"body":{"components/AdminComponent.html":{}}}],["accounttype",{"_index":1683,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["accset",{"_index":1128,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["action",{"_index":1320,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["activatedroute",{"_index":1771,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":603,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["activatedroutesnapshot,routerstatesnapshot",{"_index":612,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["actual_component",{"_index":398,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["adapter",{"_index":506,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["adapters/format",{"_index":488,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["add",{"_index":274,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DictionaryService.html":{},"components/MainComponent.html":{}}}],["addfile",{"_index":1192,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["additional",{"_index":1338,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["additionalname",{"_index":753,"title":{},"body":{"injectables/CustomerService.html":{}}}],["addr",{"_index":1223,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["address",{"_index":785,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["adm",{"_index":1089,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["admin",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/DictionaryService.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/SettingsComponent.html":{}}}],["admin'},{'name",{"_index":372,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["admin.component.html",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.dialog",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{}}}],["admin.dialog.html",{"_index":1751,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.scss",{"_index":1750,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.ts",{"_index":1749,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{},"coverage.html":{}}}],["admin.dialog.ts:10",{"_index":1752,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.ts:12",{"_index":1756,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.ts:13",{"_index":1757,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.ts:14",{"_index":1753,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.ts:20",{"_index":1755,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin.dialog.ts:27",{"_index":1754,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["admin/account",{"_index":1687,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["admin/reset",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/ResetPasswordAdminDialog.html":{},"coverage.html":{}}}],["admin_panel_settings",{"_index":1663,"title":{},"body":{"components/MainComponent.html":{}}}],["adminarea",{"_index":1083,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["admincomponent",{"_index":95,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administrator",{"_index":1090,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["adname",{"_index":1225,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["adresse",{"_index":1072,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["aftercontentinit",{"_index":1641,"title":{},"body":{"components/MainComponent.html":{}}}],["afterviewinit",{"_index":1642,"title":{},"body":{"components/MainComponent.html":{}}}],["agb",{"_index":840,"title":{},"body":{"injectables/CustomerService.html":{}}}],["ajv",{"_index":1561,"title":{},"body":{"injectables/JSONValidationService.html":{},"dependencies.html":{}}}],["ajv.compile(userschema",{"_index":1567,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["ajv/dist/jtd",{"_index":1563,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["alert(this.dictionaryservice.get('notallowed",{"_index":623,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/HttpService.html":{}}}],["align",{"_index":333,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["alle",{"_index":1122,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["allgemeine",{"_index":1215,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["allowed",{"_index":1316,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["allows",{"_index":1710,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["already",{"_index":1362,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/FormValidationService.html":{}}}],["alte",{"_index":1144,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["altes",{"_index":1141,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["anfordern",{"_index":1261,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["angelegt",{"_index":1302,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["angular",{"_index":405,"title":{},"body":{"modules/AngularMaterialModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":411,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/cdk/portal",{"_index":415,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/cdk/tree",{"_index":413,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/common",{"_index":408,"title":{},"body":{"modules/AngularMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":69,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{}}}],["angular/compiler",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":2038,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/FormValidationService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":417,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/badge",{"_index":469,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/button",{"_index":419,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/card",{"_index":423,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":425,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/chips",{"_index":427,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/core",{"_index":432,"title":{},"body":{"modules/AngularMaterialModule.html":{},"injectables/AppDateAdapter.html":{}}}],["angular/material/datepicker",{"_index":476,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/dialog",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["angular/material/divider",{"_index":434,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/expansion",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/CustomersComponent.html":{}}}],["angular/material/form",{"_index":437,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/grid",{"_index":471,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/icon",{"_index":439,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/input",{"_index":441,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/list",{"_index":443,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/menu",{"_index":445,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/paginator",{"_index":447,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/progress",{"_index":449,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/radio",{"_index":474,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/select",{"_index":452,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":454,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/slide",{"_index":482,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/snack",{"_index":456,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/sort",{"_index":459,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/stepper",{"_index":480,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/table",{"_index":461,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/tabs",{"_index":463,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":465,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/tooltip",{"_index":478,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/material/tree",{"_index":467,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["angular/platform",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":578,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angularmaterialmodule",{"_index":400,"title":{"modules/AngularMaterialModule.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["anhängen",{"_index":1222,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["anlegen",{"_index":1092,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["anmeldung",{"_index":1054,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["another",{"_index":1503,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["anrede",{"_index":1278,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["anschrift",{"_index":1224,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["antragsteller",{"_index":1274,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["antragstellerinformationen",{"_index":1272,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["anweisungen",{"_index":1069,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["app",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["app.component",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["app1",{"_index":1273,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["app2",{"_index":1275,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["app_date_formats",{"_index":487,"title":{},"body":{"modules/AngularMaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":373,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdateadapter",{"_index":486,"title":{"injectables/AppDateAdapter.html":{}},"body":{"modules/AngularMaterialModule.html":{},"injectables/AppDateAdapter.html":{},"coverage.html":{}}}],["appearance",{"_index":313,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["applicant",{"_index":746,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["applicant?.get('birthdate')?.value",{"_index":856,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('birthdate1')?.value",{"_index":873,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('birthdate2')?.value",{"_index":891,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('email')?.value",{"_index":863,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('email1')?.value",{"_index":880,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('email2')?.value",{"_index":898,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('firstname')?.value",{"_index":852,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('firstname1')?.value",{"_index":869,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('firstname2')?.value",{"_index":887,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('mobile')?.value",{"_index":861,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('mobile1')?.value",{"_index":878,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('mobile2')?.value",{"_index":896,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('phone')?.value",{"_index":859,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('phone1')?.value",{"_index":876,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('phone2')?.value",{"_index":894,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('salutation')?.value?.code",{"_index":848,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('salutation1')?.value?.code",{"_index":865,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('salutation2')?.value?.code",{"_index":883,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('secondname')?.value",{"_index":854,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('secondname1')?.value",{"_index":871,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('secondname2')?.value",{"_index":889,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('title')?.value?.code",{"_index":850,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('title1')?.value?.code",{"_index":867,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicant?.get('title2')?.value?.code",{"_index":885,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantbirthdate0",{"_index":855,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantbirthdate1",{"_index":872,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantbirthdate2",{"_index":890,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantemail0",{"_index":862,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantemail1",{"_index":879,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantemail2",{"_index":897,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantfirstname0",{"_index":851,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantfirstname1",{"_index":868,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantfirstname2",{"_index":886,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantmobile0",{"_index":860,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantmobile1",{"_index":877,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantmobile2",{"_index":895,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantphone0",{"_index":858,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantphone1",{"_index":875,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantphone2",{"_index":893,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantsalutation0",{"_index":847,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantsalutation1",{"_index":864,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantsalutation2",{"_index":882,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantsecondname0",{"_index":853,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantsecondname1",{"_index":870,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicantsecondname2",{"_index":888,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicanttitle0",{"_index":849,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicanttitle1",{"_index":866,"title":{},"body":{"injectables/CustomerService.html":{}}}],["applicanttitle2",{"_index":884,"title":{},"body":{"injectables/CustomerService.html":{}}}],["application",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/MainComponent.html":{}}}],["application/json",{"_index":87,"title":{},"body":{"injectables/AccountService.html":{}}}],["apply",{"_index":1180,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["appmodule",{"_index":526,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":535,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":1325,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["array",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"coverage.html":{}}}],["array.sort(function",{"_index":220,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["artifacts",{"_index":2114,"title":{},"body":{"index.html":{}}}],["assignment",{"_index":1735,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["async",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["attach",{"_index":1221,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["auf",{"_index":1171,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["aus",{"_index":1463,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["ausklappen",{"_index":1123,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["auth.service",{"_index":614,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["auth/auth.service",{"_index":769,"title":{},"body":{"injectables/CustomerService.html":{}}}],["authguardservice",{"_index":579,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":628,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":536,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":2107,"title":{},"body":{"index.html":{}}}],["available",{"_index":2135,"title":{},"body":{"modules.html":{}}}],["await",{"_index":204,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["b",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["b.username.tolowercase",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{}}}],["back",{"_index":1334,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bank",{"_index":819,"title":{},"body":{"injectables/CustomerService.html":{}}}],["bar",{"_index":457,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["base",{"_index":1677,"title":{},"body":{"components/MainComponent.html":{}}}],["baseline",{"_index":344,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["baywa.com",{"_index":1664,"title":{},"body":{"components/MainComponent.html":{}}}],["bck",{"_index":1186,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bearer",{"_index":646,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["being",{"_index":1363,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bemerkungsfeld",{"_index":1268,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["benutzer",{"_index":1088,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["benutzername",{"_index":1060,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["benutzername/e",{"_index":1158,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["berechtigt",{"_index":1170,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bereich",{"_index":1084,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["berein",{"_index":1152,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bereits",{"_index":1155,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bernehmen",{"_index":1181,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bestehen",{"_index":1467,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["bestätigen",{"_index":1137,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bestätigungs",{"_index":1293,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bestätigungsmail",{"_index":1066,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["beta.33",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1047,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bic",{"_index":817,"title":{},"body":{"injectables/CustomerService.html":{}}}],["birth",{"_index":1339,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["birthdate",{"_index":835,"title":{},"body":{"injectables/CustomerService.html":{}}}],["bitte",{"_index":1103,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["black",{"_index":319,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["black!important",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["block",{"_index":302,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DictionaryService.html":{}}}],["blockaccount",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["blockaccount(accounttoblock",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{}}}],["blocked",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/DictionaryService.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"miscellaneous/variables.html":{}}}],["blockusr",{"_index":1114,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["body",{"_index":88,"title":{},"body":{"injectables/AccountService.html":{}}}],["boolean",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/FormValidationService.html":{},"injectables/JSONValidationService.html":{},"miscellaneous/variables.html":{}}}],["boolean|urltree",{"_index":615,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["bootstrap",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["branche",{"_index":1251,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["branchencode",{"_index":1253,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["browse",{"_index":2136,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":735,"title":{},"body":{"interfaces/CodeDetails.html":{},"dependencies.html":{},"modules.html":{}}}],["browseranimationsmodule",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brth",{"_index":1228,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["bsdropdownmodule.forroot",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buchstaben",{"_index":1464,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["buchungskreis",{"_index":1207,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["buffer",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":2113,"title":{},"body":{"index.html":{}}}],["button",{"_index":327,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["button.mat",{"_index":326,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["c",{"_index":1489,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["call",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactivate",{"_index":585,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["canactivate(route",{"_index":602,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["cancel",{"_index":1017,"title":{},"body":{"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["captcha",{"_index":1745,"title":{},"body":{"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["caret",{"_index":325,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["catch",{"_index":208,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["catcherror",{"_index":1530,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror(this.handleerror",{"_index":1546,"title":{},"body":{"injectables/HttpService.html":{}}}],["cdktreemodule",{"_index":412,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":1323,"title":{},"body":{"injectables/DictionaryService.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["changeaccounttype",{"_index":1684,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["changeaccounttype(event",{"_index":1685,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["changedetectorref",{"_index":1643,"title":{},"body":{"components/MainComponent.html":{}}}],["changing",{"_index":1926,"title":{},"body":{"components/SettingsComponent.html":{}}}],["characters",{"_index":1348,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["check",{"_index":1495,"title":{},"body":{"injectables/FormValidationService.html":{},"index.html":{}}}],["checkaccountlogin",{"_index":598,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["checkaccountlogin(route",{"_index":609,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["checkhash",{"_index":1768,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["checktokenexpiration",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["chleft",{"_index":1269,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["chng",{"_index":1135,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["chngacc",{"_index":1133,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["chngpswd",{"_index":1182,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["choose",{"_index":1711,"title":{},"body":{"components/PreselectionComponent.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["city",{"_index":796,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["class",{"_index":76,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["clearinterval(this.timer",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":2098,"title":{},"body":{"index.html":{}}}],["click",{"_index":1003,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/MainComponent.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["client",{"_index":2095,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":643,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["close",{"_index":1370,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["closes",{"_index":1006,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["cluster_appmodule",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":727,"title":{},"body":{"interfaces/CodeDetails.html":{},"injectables/DictionaryService.html":{},"components/PreselectionComponent.html":{},"index.html":{}}}],["codedetails",{"_index":725,"title":{"interfaces/CodeDetails.html":{}},"body":{"interfaces/CodeDetails.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["collapse",{"_index":1124,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["color",{"_index":318,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["comapany",{"_index":1336,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["comcode",{"_index":1206,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["commonmodule",{"_index":407,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["company",{"_index":1349,"title":{},"body":{"injectables/DictionaryService.html":{},"components/PreselectionComponent.html":{}}}],["companycode",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/CustomerService.html":{},"components/EditAccountDialog.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["companycodedetails",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["companycodedetails[account.companycode",{"_index":291,"title":{},"body":{"components/AdminComponent.html":{}}}],["compat",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["compers",{"_index":1279,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["component",{"_index":94,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":353,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["components/admin/admin.component",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/customers/customers.component",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/main/main.component",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["components/new",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/preselection/preselection.component",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/reset",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/settings/settings.component",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["concat",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["confirm",{"_index":1136,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["confirmation",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"injectables/DictionaryService.html":{},"components/SendCustomerConfirmationDialog.html":{},"coverage.html":{}}}],["confirmation'},{'name",{"_index":394,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["confirmation.dialog",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmation.dialog.html",{"_index":1853,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.scss",{"_index":1852,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.ts",{"_index":1849,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{},"coverage.html":{}}}],["confirmation.dialog.ts:18",{"_index":1864,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.ts:20",{"_index":1856,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.ts:22",{"_index":1862,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.ts:30",{"_index":1860,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.ts:40",{"_index":1858,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmation.dialog.ts:47",{"_index":1857,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["confirmpassword",{"_index":1786,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["console.error(e",{"_index":1798,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.error(e.stack",{"_index":210,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["console.error(error",{"_index":1548,"title":{},"body":{"injectables/HttpService.html":{}}}],["console.error(errors",{"_index":1570,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["const",{"_index":82,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["constructobject",{"_index":737,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructobject(generalinformation",{"_index":743,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(dialogref",{"_index":997,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["constructor(dictionaryservice",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["constructor(http",{"_index":44,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["constructor(httpservice",{"_index":741,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/DeleteAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{}}}],["constructor(public",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["constructor(route",{"_index":1770,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(router",{"_index":599,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{}}}],["constructor(storageservice",{"_index":1718,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["constructs",{"_index":1452,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["contact",{"_index":1212,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["contactinformation",{"_index":744,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"city\")?.value",{"_index":797,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"country\")?.value?.code",{"_index":799,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"email\")?.value",{"_index":806,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"fax\")?.value",{"_index":803,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"housenumber\")?.value",{"_index":789,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"mailbox\")?.value",{"_index":791,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"mobile\")?.value",{"_index":805,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"phone\")?.value",{"_index":801,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"street\")?.value",{"_index":787,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"zip\")?.value",{"_index":795,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contactinformation?.get(\"zipmailbox\")?.value",{"_index":793,"title":{},"body":{"injectables/CustomerService.html":{}}}],["contain",{"_index":1471,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["containing",{"_index":1331,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["contains",{"_index":1626,"title":{},"body":{"components/MainComponent.html":{}}}],["content",{"_index":86,"title":{},"body":{"injectables/AccountService.html":{}}}],["context",{"_index":2028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continf",{"_index":1217,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["control",{"_index":1497,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["control.value",{"_index":1508,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["controlname",{"_index":1485,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["cookie",{"_index":1645,"title":{},"body":{"components/MainComponent.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":1632,"title":{},"body":{"components/MainComponent.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["corresponding",{"_index":1041,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["cou",{"_index":1239,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["country",{"_index":798,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["coverage",{"_index":1978,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":1203,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["create",{"_index":1091,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["createaccount",{"_index":36,"title":{},"body":{"injectables/AccountService.html":{}}}],["createaccount(account",{"_index":52,"title":{},"body":{"injectables/AccountService.html":{}}}],["created",{"_index":1356,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["creation",{"_index":767,"title":{},"body":{"injectables/CustomerService.html":{}}}],["credit",{"_index":1345,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["credit/debit",{"_index":1712,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["creditlimit",{"_index":842,"title":{},"body":{"injectables/CustomerService.html":{}}}],["creditor",{"_index":1335,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["crelmt",{"_index":1265,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["crypto",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["ctrl",{"_index":1838,"title":{},"body":{"injectables/SearchService.html":{}}}],["ctrl.value",{"_index":1842,"title":{},"body":{"injectables/SearchService.html":{}}}],["currentlanguage",{"_index":1031,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["cursor",{"_index":1949,"title":{},"body":{"components/SettingsComponent.html":{}}}],["cusconfissnd",{"_index":1300,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["cusissnd",{"_index":1299,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["cuss",{"_index":1077,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["custom",{"_index":1493,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["custom_elements_schema",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["customer",{"_index":393,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["customer.customer.data.firstname",{"_index":962,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customer.customer.data.orgapersons",{"_index":956,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customer.customer.data.secondname",{"_index":964,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customer.datetime",{"_index":934,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customer.datetime.tolowercase().includes(val",{"_index":941,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customer.sapid",{"_index":949,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customer.sapid.tolowercase().includes(val",{"_index":942,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customers",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{}}}],["customers'},{'name",{"_index":376,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["customers.component.html",{"_index":905,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customers.component.scss",{"_index":904,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customerscomponent",{"_index":375,"title":{"components/CustomersComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["customerservice",{"_index":537,"title":{"injectables/CustomerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["customertype",{"_index":1715,"title":{},"body":{"components/PreselectionComponent.html":{},"injectables/StorageService.html":{}}}],["customertype(customertype",{"_index":1976,"title":{},"body":{"injectables/StorageService.html":{}}}],["custype",{"_index":1195,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["danach",{"_index":1108,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["darf",{"_index":1461,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["das",{"_index":1143,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["data",{"_index":234,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomerService.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/StorageService.html":{}}}],["data.accounttoedit",{"_index":1388,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["data.notes",{"_index":899,"title":{},"body":{"injectables/CustomerService.html":{}}}],["date",{"_index":505,"title":{},"body":{"injectables/AppDateAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{}}}],["date(applicant?.get(\"birthdate\").value",{"_index":857,"title":{},"body":{"injectables/CustomerService.html":{}}}],["date(applicant?.get(\"birthdate1\").value",{"_index":874,"title":{},"body":{"injectables/CustomerService.html":{}}}],["date(applicant?.get(\"birthdate2\").value",{"_index":892,"title":{},"body":{"injectables/CustomerService.html":{}}}],["date(generalinformation?.get(\"birthdate\").value",{"_index":838,"title":{},"body":{"injectables/CustomerService.html":{}}}],["date.getdate",{"_index":520,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["date.getfullyear",{"_index":524,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["date.getmonth",{"_index":522,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["date.service",{"_index":770,"title":{},"body":{"injectables/CustomerService.html":{}}}],["datea11ylabel",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dateadapter",{"_index":428,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["datei",{"_index":1193,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["dateinput",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datepicker",{"_index":489,"title":{},"body":{"modules/AngularMaterialModule.html":{},"injectables/AppDateAdapter.html":{}}}],["datepicker.ts",{"_index":504,"title":{},"body":{"injectables/AppDateAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepicker.ts:9",{"_index":517,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["dateservice",{"_index":538,"title":{"injectables/DateService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datetime",{"_index":931,"title":{},"body":{"components/CustomersComponent.html":{}}}],["datetime.issame(new",{"_index":933,"title":{},"body":{"components/CustomersComponent.html":{}}}],["datum",{"_index":1179,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["day",{"_index":519,"title":{},"body":{"injectables/AppDateAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":508,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["de",{"_index":1048,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"components/MainComponent.html":{}}}],["deb",{"_index":1201,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["debcre",{"_index":1205,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["debit",{"_index":839,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["debitcredittype",{"_index":1716,"title":{},"body":{"components/PreselectionComponent.html":{},"injectables/StorageService.html":{}}}],["debitcredittype(debitcredittype",{"_index":1977,"title":{},"body":{"injectables/StorageService.html":{}}}],["debitor",{"_index":1202,"title":{},"body":{"injectables/DictionaryService.html":{},"components/PreselectionComponent.html":{},"injectables/StorageService.html":{}}}],["declarations",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["deep",{"_index":309,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["default",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultinterval",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["define",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defined",{"_index":47,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["defines",{"_index":982,"title":{},"body":{"injectables/DateService.html":{},"injectables/DictionaryService.html":{}}}],["delete",{"_index":300,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["deleteaccount",{"_index":37,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{}}}],["deleteaccount(account",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{}}}],["deleteaccount(accounttosend",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{}}}],["deleteaccountdialog",{"_index":173,"title":{"components/DeleteAccountDialog.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deleteaccountdialog.afterclosed().topromise",{"_index":236,"title":{},"body":{"components/AdminComponent.html":{}}}],["deleted",{"_index":1358,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["delusr",{"_index":1118,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["delusr1",{"_index":1294,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["delusr2",{"_index":1295,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["dependencies",{"_index":527,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":1161,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["description",{"_index":404,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"injectables/StorageService.html":{}}}],["details",{"_index":728,"title":{},"body":{"interfaces/CodeDetails.html":{}}}],["dev",{"_index":2104,"title":{},"body":{"index.html":{}}}],["development",{"_index":2101,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/DeleteAccountDialog.html":{},"components/LoginComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["dialog/delete",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/DeleteAccountDialog.html":{},"coverage.html":{}}}],["dialog/edit",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/EditAccountDialog.html":{},"coverage.html":{}}}],["dialog/new",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/NewAccountDialog.html":{},"coverage.html":{}}}],["dialog/send",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"components/SendCustomerConfirmationDialog.html":{},"coverage.html":{}}}],["dialogref",{"_index":1000,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["dialogs/delete",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/edit",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/new",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/reset",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/send",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["dictionary",{"_index":1032,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["dictionary.service",{"_index":613,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{}}}],["dictionaryde",{"_index":1033,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["dictionaryen",{"_index":1034,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["dictionaryservice",{"_index":116,"title":{"injectables/DictionaryService.html":{}},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dictionaryservice.get('acc",{"_index":1659,"title":{},"body":{"components/MainComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('accset",{"_index":1942,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get('adm",{"_index":1704,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["dictionaryservice.get('adminarea",{"_index":270,"title":{},"body":{"components/AdminComponent.html":{},"components/MainComponent.html":{}}}],["dictionaryservice.get('apply",{"_index":1947,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get('blocked",{"_index":284,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get('blockusr",{"_index":303,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get('can",{"_index":1018,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get('chng",{"_index":1431,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["dictionaryservice.get('chngacc",{"_index":299,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{}}}],["dictionaryservice.get('collapse",{"_index":277,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["dictionaryservice.get('comcode",{"_index":290,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('compers",{"_index":955,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get('cre",{"_index":1734,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('create",{"_index":1705,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["dictionaryservice.get('cuss",{"_index":947,"title":{},"body":{"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["dictionaryservice.get('custype",{"_index":950,"title":{},"body":{"components/CustomersComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('deb",{"_index":952,"title":{},"body":{"components/CustomersComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('debcre",{"_index":1733,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('delusr",{"_index":301,"title":{},"body":{"components/AdminComponent.html":{},"components/DeleteAccountDialog.html":{}}}],["dictionaryservice.get('delusr1')}}{{data.username}}{{dictionaryservice.get('delusr2",{"_index":1016,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["dictionaryservice.get('email",{"_index":288,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('expand",{"_index":275,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["dictionaryservice.get('fname",{"_index":961,"title":{},"body":{"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('hello')}}{{authservice.account.username",{"_index":1657,"title":{},"body":{"components/MainComponent.html":{}}}],["dictionaryservice.get('id",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["dictionaryservice.get('lang",{"_index":1658,"title":{},"body":{"components/MainComponent.html":{}}}],["dictionaryservice.get('legfrm",{"_index":957,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get('login",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{}}}],["dictionaryservice.get('logout",{"_index":1660,"title":{},"body":{"components/MainComponent.html":{}}}],["dictionaryservice.get('mob",{"_index":294,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('name",{"_index":279,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get('newacc",{"_index":273,"title":{},"body":{"components/AdminComponent.html":{},"components/NewAccountDialog.html":{}}}],["dictionaryservice.get('newcus",{"_index":1661,"title":{},"body":{"components/MainComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('nxt",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dictionaryservice.get('org",{"_index":951,"title":{},"body":{"components/CustomersComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('per",{"_index":1732,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('perorg",{"_index":1731,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get('pswd",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('pswdconf",{"_index":1801,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('pswdfog",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get('pswdnmatch",{"_index":1803,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('pswdold",{"_index":1945,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get('resetpswd",{"_index":307,"title":{},"body":{"components/AdminComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get('resetpswd1')}}{{data.username}}{{dictionaryservice.get('resetpswd2",{"_index":1758,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["dictionaryservice.get('resetpswdtext",{"_index":1825,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get('role",{"_index":296,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get('sal",{"_index":953,"title":{},"body":{"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["dictionaryservice.get('sapid",{"_index":948,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get('search",{"_index":271,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["dictionaryservice.get('secset",{"_index":1944,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get('sname",{"_index":963,"title":{},"body":{"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('sndconfemail",{"_index":1869,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["dictionaryservice.get('sndcus",{"_index":1867,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["dictionaryservice.get('snddir",{"_index":1868,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["dictionaryservice.get('tel",{"_index":292,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get('title",{"_index":959,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get('unblockusr",{"_index":305,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get('usr",{"_index":1703,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["dictionaryservice.get('usrname",{"_index":286,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'acc",{"_index":1680,"title":{},"body":{"components/MainComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'accset",{"_index":1952,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'adm",{"_index":1707,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["dictionaryservice.get(\\'adminarea",{"_index":354,"title":{},"body":{"components/AdminComponent.html":{},"components/MainComponent.html":{}}}],["dictionaryservice.get(\\'apply",{"_index":1956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'blocked",{"_index":360,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get(\\'blockusr",{"_index":369,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get(\\'can",{"_index":1020,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get(\\'chng",{"_index":1440,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["dictionaryservice.get(\\'chngacc",{"_index":367,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{}}}],["dictionaryservice.get(\\'collapse",{"_index":358,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'comcode",{"_index":363,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'compers",{"_index":976,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'cre",{"_index":1739,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'create",{"_index":1708,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["dictionaryservice.get(\\'cuss",{"_index":970,"title":{},"body":{"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["dictionaryservice.get(\\'custype",{"_index":972,"title":{},"body":{"components/CustomersComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'deb",{"_index":974,"title":{},"body":{"components/CustomersComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'debcre",{"_index":1738,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'delusr",{"_index":368,"title":{},"body":{"components/AdminComponent.html":{},"components/DeleteAccountDialog.html":{}}}],["dictionaryservice.get(\\'delusr1\\')}}{{data.username}}{{dictionaryservice.get(\\'delusr2",{"_index":1019,"title":{},"body":{"components/DeleteAccountDialog.html":{}}}],["dictionaryservice.get(\\'email",{"_index":362,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'expand",{"_index":357,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'fname",{"_index":979,"title":{},"body":{"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'hello\\')}}{{authservice.account.username",{"_index":1678,"title":{},"body":{"components/MainComponent.html":{}}}],["dictionaryservice.get(\\'id",{"_index":1619,"title":{},"body":{"components/LoginComponent.html":{}}}],["dictionaryservice.get(\\'lang",{"_index":1679,"title":{},"body":{"components/MainComponent.html":{}}}],["dictionaryservice.get(\\'legfrm",{"_index":977,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'login",{"_index":1618,"title":{},"body":{"components/LoginComponent.html":{}}}],["dictionaryservice.get(\\'logout",{"_index":1681,"title":{},"body":{"components/MainComponent.html":{}}}],["dictionaryservice.get(\\'mob",{"_index":365,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'name",{"_index":359,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get(\\'newacc",{"_index":356,"title":{},"body":{"components/AdminComponent.html":{},"components/NewAccountDialog.html":{}}}],["dictionaryservice.get(\\'newcus",{"_index":1682,"title":{},"body":{"components/MainComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'nxt",{"_index":1624,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dictionaryservice.get(\\'org",{"_index":973,"title":{},"body":{"components/CustomersComponent.html":{},"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'per",{"_index":1737,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'perorg",{"_index":1736,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["dictionaryservice.get(\\'pswd",{"_index":1621,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'pswdconf",{"_index":1804,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'pswdfog",{"_index":1623,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get(\\'pswdnmatch",{"_index":1806,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'pswdold",{"_index":1954,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'resetpswd",{"_index":371,"title":{},"body":{"components/AdminComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get(\\'resetpswd1\\')}}{{data.username}}{{dictionaryservice.get(\\'resetpswd2",{"_index":1759,"title":{},"body":{"components/ResetPasswordAdminDialog.html":{}}}],["dictionaryservice.get(\\'resetpswdtext",{"_index":1826,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["dictionaryservice.get(\\'role",{"_index":366,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get(\\'sal",{"_index":975,"title":{},"body":{"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["dictionaryservice.get(\\'sapid",{"_index":971,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'search",{"_index":355,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'secset",{"_index":1953,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'sname",{"_index":980,"title":{},"body":{"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'sndconfemail",{"_index":1872,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["dictionaryservice.get(\\'sndcus",{"_index":1870,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["dictionaryservice.get(\\'snddir",{"_index":1871,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["dictionaryservice.get(\\'tel",{"_index":364,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["dictionaryservice.get(\\'title",{"_index":978,"title":{},"body":{"components/CustomersComponent.html":{}}}],["dictionaryservice.get(\\'unblockusr",{"_index":370,"title":{},"body":{"components/AdminComponent.html":{}}}],["dictionaryservice.get(\\'usr",{"_index":1706,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["dictionaryservice.get(\\'usrname",{"_index":361,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["die",{"_index":1148,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["diese",{"_index":1154,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["direct",{"_index":1343,"title":{},"body":{"injectables/DictionaryService.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["directive",{"_index":352,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":397,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2112,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1352,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["directory",{"_index":2117,"title":{},"body":{"index.html":{}}}],["direkt",{"_index":1291,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["disabled",{"_index":1392,"title":{},"body":{"components/EditAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["display",{"_index":341,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{},"miscellaneous/variables.html":{}}}],["displayformat",{"_index":515,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["dist",{"_index":2116,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1920,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dom",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["done",{"_index":304,"title":{},"body":{"components/AdminComponent.html":{},"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["dropdown",{"_index":1671,"title":{},"body":{"components/MainComponent.html":{}}}],["drücken",{"_index":1107,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["dynamic",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"components/ResetPasswordComponent.html":{}}}],["e2e",{"_index":2128,"title":{},"body":{"index.html":{}}}],["edit",{"_index":298,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["editaccount",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{}}}],["editaccount(accounttoedit",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["editaccountdialog",{"_index":189,"title":{"components/EditAccountDialog.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editaccountdialog.afterclosed().topromise",{"_index":255,"title":{},"body":{"components/AdminComponent.html":{}}}],["editedaccount",{"_index":1404,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["editedaccount.companycode",{"_index":1407,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["editedaccount.firstname",{"_index":1409,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["editedaccount.mobile",{"_index":1415,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["editedaccount.phone",{"_index":1413,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["editedaccount.salutationcode",{"_index":1405,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["editedaccount.secondname",{"_index":1411,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["ein",{"_index":1105,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["eine",{"_index":1065,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["einem",{"_index":1110,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["einreichen",{"_index":1288,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["el.email",{"_index":259,"title":{},"body":{"components/AdminComponent.html":{}}}],["element",{"_index":324,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["emailform",{"_index":1810,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["emailformcontrol",{"_index":1811,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["en",{"_index":1051,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"components/MainComponent.html":{}}}],["enables",{"_index":1828,"title":{},"body":{"injectables/SearchService.html":{}}}],["enabling",{"_index":1332,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["end",{"_index":2127,"title":{},"body":{"index.html":{}}}],["english",{"_index":1029,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["entemail",{"_index":1286,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["enter",{"_index":1322,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["entry",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["entsperren",{"_index":1117,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["entsperrt",{"_index":1164,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["environment",{"_index":71,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.recaptchasitekey",{"_index":1863,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["environments/environment",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["erfolg",{"_index":1307,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["erforderlich",{"_index":1458,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["err",{"_index":1308,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["error",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["error.datapath",{"_index":1580,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["error.keyword",{"_index":1575,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["error.message",{"_index":1576,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["error.params[\"missingproperty",{"_index":1574,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["error.status",{"_index":1549,"title":{},"body":{"injectables/HttpService.html":{}}}],["errorabbreviation",{"_index":1537,"title":{},"body":{"injectables/HttpService.html":{}}}],["errormessageservice",{"_index":117,"title":{"injectables/ErrorMessageService.html":{}},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["errormessageservice.geterror('comcode",{"_index":1424,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror('email",{"_index":1422,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror('fname",{"_index":1427,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror('id",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{}}}],["errormessageservice.geterror('mob",{"_index":1430,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror('pswd",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror('pswdconf",{"_index":1802,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror('pswdold",{"_index":1946,"title":{},"body":{"components/SettingsComponent.html":{}}}],["errormessageservice.geterror('sal",{"_index":1426,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror('sname",{"_index":1428,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror('tel",{"_index":1429,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror('usrname",{"_index":1420,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror(\\'comcode",{"_index":1434,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror(\\'email",{"_index":1433,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror(\\'fname",{"_index":1436,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror(\\'id",{"_index":1620,"title":{},"body":{"components/LoginComponent.html":{}}}],["errormessageservice.geterror(\\'mob",{"_index":1439,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror(\\'pswd",{"_index":1622,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror(\\'pswdconf",{"_index":1805,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["errormessageservice.geterror(\\'pswdold",{"_index":1955,"title":{},"body":{"components/SettingsComponent.html":{}}}],["errormessageservice.geterror(\\'sal",{"_index":1435,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror(\\'sname",{"_index":1437,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror(\\'tel",{"_index":1438,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["errormessageservice.geterror(\\'usrname",{"_index":1432,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["errors",{"_index":1359,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/JSONValidationService.html":{}}}],["errors.push",{"_index":1573,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["errorsde",{"_index":1445,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorsen",{"_index":1446,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errortype",{"_index":1450,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errortype.key",{"_index":1421,"title":{},"body":{"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["erteilen",{"_index":1259,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["es",{"_index":1099,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["event",{"_index":1688,"title":{},"body":{"components/NewAccountDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["event.value",{"_index":1702,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["events",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["execute",{"_index":2124,"title":{},"body":{"index.html":{}}}],["exp",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["exp.diff(now",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["expand",{"_index":1121,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["expiration",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresat",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["exports",{"_index":492,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":512,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["externalmodules",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":1507,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["falsch",{"_index":1146,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["false",{"_index":625,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/DeleteAccountDialog.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["fax",{"_index":802,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["fehler",{"_index":1309,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["fetchaccounts",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["fetchcustomers",{"_index":907,"title":{},"body":{"components/CustomersComponent.html":{}}}],["field",{"_index":312,"title":{},"body":{"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["field.details",{"_index":1423,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["field.details.tolowercase().indexof(search",{"_index":1847,"title":{},"body":{"injectables/SearchService.html":{}}}],["field.mat",{"_index":321,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["fieldname",{"_index":1453,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["fields",{"_index":1496,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["fileds",{"_index":729,"title":{},"body":{"interfaces/CodeDetails.html":{}}}],["files",{"_index":826,"title":{},"body":{"injectables/CustomerService.html":{},"index.html":{}}}],["filter",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"injectables/SearchService.html":{}}}],["filter(ctrl",{"_index":1832,"title":{},"body":{"injectables/SearchService.html":{}}}],["filtered",{"_index":1840,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredaccounts",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["filteredcustomers",{"_index":906,"title":{},"body":{"components/CustomersComponent.html":{}}}],["filteredvalues",{"_index":1833,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredvalues.next",{"_index":1845,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredvalues.next(list.slice",{"_index":1843,"title":{},"body":{"injectables/SearchService.html":{}}}],["filtering",{"_index":1830,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterquery",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["filterquery(val",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["filters",{"_index":1836,"title":{},"body":{"injectables/SearchService.html":{}}}],["find",{"_index":1839,"title":{},"body":{"injectables/SearchService.html":{}}}],["firma",{"_index":1280,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["firstname",{"_index":831,"title":{},"body":{"injectables/CustomerService.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["flag",{"_index":2062,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["flat",{"_index":330,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["flex",{"_index":342,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["fname",{"_index":1282,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["focused",{"_index":315,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["font",{"_index":335,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["forget",{"_index":1327,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["forgot",{"_index":1312,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["forgotpassword",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":311,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["format",{"_index":511,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["format(date",{"_index":514,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["formatdate",{"_index":985,"title":{},"body":{"injectables/DateService.html":{}}}],["formatdate(date",{"_index":987,"title":{},"body":{"injectables/DateService.html":{}}}],["formats",{"_index":989,"title":{},"body":{"injectables/DateService.html":{}}}],["formatted",{"_index":991,"title":{},"body":{"injectables/DateService.html":{}}}],["formbuilder",{"_index":1373,"title":{},"body":{"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["formcontrol",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/FormValidationService.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["formgroup",{"_index":1380,"title":{},"body":{"components/EditAccountDialog.html":{},"injectables/FormValidationService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["formgroup.controls[controlname",{"_index":1498,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["formgroup.controls[matchingcontrolname",{"_index":1500,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["forms",{"_index":777,"title":{},"body":{"injectables/CustomerService.html":{}}}],["formsmodule",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formvalidationservice",{"_index":539,"title":{"injectables/FormValidationService.html":{}},"body":{"modules/AppModule.html":{},"components/EditAccountDialog.html":{},"injectables/FormValidationService.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":1504,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["free",{"_index":1829,"title":{},"body":{"injectables/SearchService.html":{}}}],["func",{"_index":1528,"title":{},"body":{"injectables/HttpService.html":{}}}],["func.pipe(map(this.handleresponsemessages",{"_index":1545,"title":{},"body":{"injectables/HttpService.html":{}}}],["function",{"_index":1578,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["further",{"_index":1313,"title":{},"body":{"injectables/DictionaryService.html":{},"index.html":{}}}],["geben",{"_index":1102,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["geburtsdatum",{"_index":1229,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["gelöscht",{"_index":1166,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["general",{"_index":778,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["generalinformation",{"_index":749,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get(\"additionalname\")?.value",{"_index":784,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get(\"birthdate\")?.value",{"_index":836,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('firstname')?.value",{"_index":832,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('interfacenumber')?.value",{"_index":781,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('legalform')?.value?.code",{"_index":780,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('orgapersons')?.value",{"_index":846,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('salutation')?.value?.code",{"_index":782,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('secondname')?.value",{"_index":834,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generalinformation?.get('title')?.value?.code",{"_index":830,"title":{},"body":{"injectables/CustomerService.html":{}}}],["generate",{"_index":2110,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2097,"title":{},"body":{"index.html":{}}}],["geninf",{"_index":1214,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["german",{"_index":1030,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["gesendet",{"_index":1073,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["gesperrt",{"_index":1120,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["get(abbreviation",{"_index":1037,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["getaccount",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccountformcontrol",{"_index":1898,"title":{},"body":{"components/SettingsComponent.html":{}}}],["getaccounts",{"_index":38,"title":{},"body":{"injectables/AccountService.html":{}}}],["getcustomers",{"_index":738,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getcustomers(email",{"_index":755,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getcustomertype",{"_index":1964,"title":{},"body":{"injectables/StorageService.html":{}}}],["getdebitcredittype",{"_index":1968,"title":{},"body":{"injectables/StorageService.html":{}}}],["getemailformcontrol",{"_index":1818,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["geterror",{"_index":1447,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["geterror(fieldname",{"_index":1449,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getexpiration",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["getloginformcontrol",{"_index":1595,"title":{},"body":{"components/LoginComponent.html":{}}}],["getpasswordformcontrol",{"_index":1782,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["getregisterformcontrol",{"_index":1382,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["getting",{"_index":2093,"title":{"index.html":{}},"body":{}}],["geändert",{"_index":1304,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["go",{"_index":2132,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1344,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["graph",{"_index":2134,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1662,"title":{},"body":{"components/MainComponent.html":{}}}],["gsepa",{"_index":1258,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["guard",{"_index":594,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":581,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":597,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:11",{"_index":606,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:15",{"_index":611,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:7",{"_index":601,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":595,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["haben",{"_index":1097,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["hallo",{"_index":1056,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["handleerror",{"_index":1520,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror(result",{"_index":1523,"title":{},"body":{"injectables/HttpService.html":{}}}],["handler",{"_index":1525,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleresponsemessages",{"_index":1519,"title":{},"body":{"injectables/HttpService.html":{}}}],["hash",{"_index":1178,"title":{},"body":{"injectables/DictionaryService.html":{},"components/ResetPasswordComponent.html":{}}}],["hat",{"_index":1256,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["header",{"_index":1627,"title":{},"body":{"components/MainComponent.html":{}}}],["headers",{"_index":84,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{}}}],["height",{"_index":1666,"title":{},"body":{"components/MainComponent.html":{}}}],["hello",{"_index":1055,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["help",{"_index":2130,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":937,"title":{},"body":{"components/CustomersComponent.html":{}}}],["hide",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{}}}],["hide0",{"_index":1877,"title":{},"body":{"components/SettingsComponent.html":{}}}],["hide1",{"_index":1764,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["hide2",{"_index":1765,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["hier",{"_index":1100,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["hinzufügen",{"_index":1194,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["hno",{"_index":1232,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["hnr",{"_index":1233,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["hostlistener",{"_index":1644,"title":{},"body":{"components/MainComponent.html":{}}}],["house",{"_index":1340,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["housenumber",{"_index":788,"title":{},"body":{"injectables/CustomerService.html":{}}}],["hsepa",{"_index":1254,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["html",{"_index":351,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":51,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{}}}],["http.service",{"_index":73,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{}}}],["http://127.0.0.1:3000/api",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2106,"title":{},"body":{"index.html":{}}}],["http://localhost:4301",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":45,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{}}}],["httpclientmodule",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpevent",{"_index":640,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":635,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":68,"title":{},"body":{"injectables/AccountService.html":{}}}],["httpinterceptor",{"_index":639,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpoptions",{"_index":83,"title":{},"body":{"injectables/AccountService.html":{}}}],["httprequest",{"_index":633,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpservice",{"_index":46,"title":{"injectables/HttpService.html":{}},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/HttpService.html":{},"injectables/RecaptchaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["iba",{"_index":1262,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["iban",{"_index":815,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["icon",{"_index":328,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["id",{"_index":1057,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["identifier",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["idinc",{"_index":1157,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["idtoken",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"interceptors/AuthInterceptor.html":{}}}],["idused",{"_index":1153,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["ihnen",{"_index":1109,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["ihr",{"_index":1096,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["ihre",{"_index":1071,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["implements",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["import",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["important",{"_index":320,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["imports",{"_index":491,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":1365,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["indexaccounts",{"_index":257,"title":{},"body":{"components/AdminComponent.html":{}}}],["indexfilteredaccounts",{"_index":261,"title":{},"body":{"components/AdminComponent.html":{}}}],["indfi",{"_index":1250,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["indficode",{"_index":1252,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["indirect",{"_index":1850,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["industry",{"_index":1341,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["industryfield",{"_index":813,"title":{},"body":{"injectables/CustomerService.html":{}}}],["industryfieldcode",{"_index":811,"title":{},"body":{"injectables/CustomerService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["information",{"_index":779,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["informationen",{"_index":1216,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["initaccountsearch",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["initcustomersearch",{"_index":908,"title":{},"body":{"components/CustomersComponent.html":{}}}],["inject",{"_index":1012,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["inject(mat_dialog_data",{"_index":1009,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["injectable",{"_index":31,"title":{"injectables/AccountService.html":{},"injectables/AppDateAdapter.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"injectables/StorageService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AppDateAdapter.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"injectables/StorageService.html":{},"overview.html":{}}}],["input",{"_index":323,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["instructions",{"_index":1314,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["intercept",{"_index":631,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":632,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":627,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":630,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:8",{"_index":636,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptors",{"_index":629,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"interfaces/CodeDetails.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"interfaces/CodeDetails.html":{},"injectables/DictionaryService.html":{},"coverage.html":{}}}],["interfacenumber",{"_index":751,"title":{},"body":{"injectables/CustomerService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"interfaces/CodeDetails.html":{},"overview.html":{}}}],["interfaces/list",{"_index":1841,"title":{},"body":{"injectables/SearchService.html":{}}}],["interfnum",{"_index":1210,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["isloggedin",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedout",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["iso",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainComponent.html":{}}}],["iso'},{'name",{"_index":383,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["iso.component",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["iso.component.ts",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["iso/new",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["issuccessful",{"_index":1601,"title":{},"body":{"components/LoginComponent.html":{}}}],["ist",{"_index":1145,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{}}}],["items",{"_index":343,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["items:center",{"_index":1948,"title":{},"body":{"components/SettingsComponent.html":{}}}],["iterate",{"_index":239,"title":{},"body":{"components/AdminComponent.html":{}}}],["ja",{"_index":1183,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["javascript",{"_index":990,"title":{},"body":{"injectables/DateService.html":{}}}],["js",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":761,"title":{},"body":{"injectables/CustomerService.html":{}}}],["json.parse(expiration",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem(\"account",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(account",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(expiresat.valueof",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonvalidationservice",{"_index":540,"title":{"injectables/JSONValidationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/JSONValidationService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["jtddatatype",{"_index":1562,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["jwt",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":2126,"title":{},"body":{"index.html":{}}}],["key",{"_index":1042,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/JSONValidationService.html":{}}}],["keyboard_arrow_right",{"_index":1943,"title":{},"body":{"components/SettingsComponent.html":{}}}],["keywords",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["kontaktdaten",{"_index":1213,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kontaktinformationen",{"_index":1218,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["konto",{"_index":1079,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kontoeinstellungen",{"_index":1129,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kreditlimit",{"_index":1266,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kreditor",{"_index":1204,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kunde",{"_index":1076,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kunden",{"_index":1078,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["kundentyp",{"_index":1196,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["können",{"_index":1098,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["label",{"_index":322,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["labels",{"_index":1023,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["land",{"_index":1240,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["lang",{"_index":1080,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["language",{"_index":1046,"title":{},"body":{"injectables/DictionaryService.html":{},"components/MainComponent.html":{}}}],["language.length",{"_index":1648,"title":{},"body":{"components/MainComponent.html":{}}}],["lastschrift",{"_index":1257,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["layout",{"_index":2039,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":348,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"components/MainComponent.html":{}}}],["legacy",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legal",{"_index":1337,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["legalform",{"_index":750,"title":{},"body":{"injectables/CustomerService.html":{}}}],["legend",{"_index":350,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["legfrm",{"_index":1208,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["letters",{"_index":1472,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["lieferant",{"_index":1255,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["limit",{"_index":1346,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["link",{"_index":1111,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["list",{"_index":472,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/MainComponent.html":{},"injectables/SearchService.html":{}}}],["list.filter(field",{"_index":1846,"title":{},"body":{"injectables/SearchService.html":{}}}],["listservice",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["listservice.legalformsorganization.getdetailsforcode(customer.customer.data.legalform",{"_index":958,"title":{},"body":{"components/CustomersComponent.html":{}}}],["listservice.legalformsperson.getdetailsforcode(customer.customer.data.legalform",{"_index":965,"title":{},"body":{"components/CustomersComponent.html":{}}}],["listservice.salutationsorganization.getdetailsforcode(customer.customer.data.salutation",{"_index":954,"title":{},"body":{"components/CustomersComponent.html":{}}}],["listservice.salutationsperson.getdetailsforcode(account.salutationcode",{"_index":281,"title":{},"body":{"components/AdminComponent.html":{}}}],["listservice.titles.getdetailsforcode(customer.customer.data.title",{"_index":960,"title":{},"body":{"components/CustomersComponent.html":{}}}],["literal",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.clear",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(\"customer_type",{"_index":1974,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.getitem(\"debit_credit_type",{"_index":1975,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.getitem(\"expires_at",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(\"id_token",{"_index":642,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["localstorage.setitem(\"account",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"expires_at",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('customer_type",{"_index":1972,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.setitem('debit_credit_type",{"_index":1973,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.setitem('id_token",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["lodash",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DictionaryService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":379,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["login(identifier",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":378,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformcontrol",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DictionaryService.html":{},"components/MainComponent.html":{}}}],["long",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["löschen",{"_index":1119,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["mail",{"_index":1058,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["mailbox",{"_index":790,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["mailbx",{"_index":1234,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["mailbxzip",{"_index":1236,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["main",{"_index":1629,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":381,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["main.component.html",{"_index":1631,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":1630,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":380,"title":{"components/MainComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mandat",{"_index":902,"title":{},"body":{"injectables/CustomerService.html":{}}}],["map",{"_index":1022,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{}}}],["mapping",{"_index":1043,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["mappings",{"_index":1027,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["margin",{"_index":347,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["mat",{"_index":310,"title":{},"body":{"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["mat_date_formats",{"_index":431,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mat_dialog_data",{"_index":1013,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["mataccordion",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["matautocompletemodule",{"_index":416,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":468,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":418,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":420,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":422,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1361,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/FormValidationService.html":{}}}],["matcheckboxmodule",{"_index":424,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1499,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchingcontrol.errors",{"_index":1501,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchingcontrol.errors.mustmatch",{"_index":1502,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchingcontrol.seterrors",{"_index":1510,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchingcontrol.seterrors(null",{"_index":1511,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchingcontrol.value",{"_index":1509,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchingcontrolname",{"_index":1483,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["matchipsmodule",{"_index":426,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdateformats",{"_index":518,"title":{},"body":{"injectables/AppDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":475,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{}}}],["matdialogref",{"_index":998,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["matdividermodule",{"_index":433,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":406,"title":{},"body":{"modules/AngularMaterialModule.html":{},"injectables/AppDateAdapter.html":{}}}],["material.module.ts",{"_index":403,"title":{},"body":{"modules/AngularMaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["materialmodules",{"_index":490,"title":{},"body":{"modules/AngularMaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":435,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":436,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":470,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":438,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":440,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":442,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":444,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":429,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginatormodule",{"_index":446,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":448,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":473,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matripplemodule",{"_index":430,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":451,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":453,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":481,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarmodule",{"_index":455,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsortmodule",{"_index":458,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsteppermodule",{"_index":479,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":460,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":462,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":464,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":477,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattreemodule",{"_index":466,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":1655,"title":{},"body":{"components/MainComponent.html":{}}}],["message",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{}}}],["message.service",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["message.service.ts",{"_index":1441,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:10",{"_index":1448,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:14",{"_index":1469,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:21",{"_index":1475,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:28",{"_index":1456,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:38",{"_index":1451,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["messageabbreviation",{"_index":1533,"title":{},"body":{"injectables/HttpService.html":{}}}],["messages",{"_index":1355,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["metadata",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["method",{"_index":1005,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["methods",{"_index":35,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["middle",{"_index":334,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["milliseconds",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["minimum",{"_index":1579,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["minutes",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["miscellaneous",{"_index":2144,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":1067,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["mm",{"_index":509,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["mob",{"_index":1244,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["mobile",{"_index":804,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["mobiltelefonnummer",{"_index":1245,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["model",{"_index":1560,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["module",{"_index":399,"title":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":401,"title":{"modules.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"dependencies.html":{}}}],["moment().add(result.expiresin",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment().isbefore(this.getexpiration",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment(a.datetime).unix",{"_index":944,"title":{},"body":{"components/CustomersComponent.html":{}}}],["moment(b.datetime).unix",{"_index":946,"title":{},"body":{"components/CustomersComponent.html":{}}}],["moment(customer.datetime",{"_index":932,"title":{},"body":{"components/CustomersComponent.html":{}}}],["moment(customer.datetime).format('dd/mm/yyyy",{"_index":936,"title":{},"body":{"components/CustomersComponent.html":{}}}],["moment(customer.datetime).fromnow",{"_index":935,"title":{},"body":{"components/CustomersComponent.html":{}}}],["moment(expiresat",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["month",{"_index":521,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{},"miscellaneous/variables.html":{}}}],["month.length",{"_index":525,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["monthyeara11ylabel",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monthyearlabel",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":2131,"title":{},"body":{"index.html":{}}}],["multi",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustmatch",{"_index":1476,"title":{},"body":{"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{}}}],["mustmatch(controlname",{"_index":1482,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["nachname",{"_index":1285,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["name",{"_index":50,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["namea",{"_index":222,"title":{},"body":{"components/AdminComponent.html":{}}}],["nameb",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{}}}],["namensangaben",{"_index":1227,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["nativedateadapter",{"_index":513,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["navigate",{"_index":2105,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":1635,"title":{},"body":{"components/MainComponent.html":{},"components/PreselectionComponent.html":{}}}],["nbsp",{"_index":280,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["ndern",{"_index":1134,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["nein",{"_index":1184,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["neuer",{"_index":1075,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["new",{"_index":85,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newacc",{"_index":1132,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["newaccount",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/NewAccountDialog.html":{}}}],["newaccountdialog",{"_index":177,"title":{"components/NewAccountDialog.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newaccountdialog.afterclosed().topromise",{"_index":229,"title":{},"body":{"components/AdminComponent.html":{}}}],["newcus",{"_index":1074,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["newisocomponent",{"_index":382,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":634,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DictionaryService.html":{}}}],["next.handle(cloned",{"_index":647,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":648,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":308,"title":{},"body":{"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":409,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["ngx",{"_index":484,"title":{},"body":{"modules/AngularMaterialModule.html":{},"injectables/HttpService.html":{},"components/MainComponent.html":{},"dependencies.html":{}}}],["ngxmatselectsearchmodule",{"_index":483,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1151,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["node",{"_index":2077,"title":{},"body":{"dependencies.html":{}}}],["notallowed",{"_index":1169,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["notes",{"_index":823,"title":{},"body":{"injectables/CustomerService.html":{}}}],["now",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":2080,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/FormValidationService.html":{},"components/ResetPasswordComponent.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["number",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DictionaryService.html":{},"components/SettingsComponent.html":{}}}],["numbers",{"_index":1473,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["numeric",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nur",{"_index":1462,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["nxt",{"_index":1188,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["object",{"_index":516,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/CustomerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":638,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomerService.html":{},"injectables/HttpService.html":{},"injectables/RecaptchaService.html":{}}}],["oder",{"_index":1059,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["of(result",{"_index":1551,"title":{},"body":{"injectables/HttpService.html":{}}}],["old",{"_index":1324,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["one",{"_index":1028,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["oninit",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["onnewcustomer",{"_index":1717,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["onnoclick",{"_index":995,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["onstructs",{"_index":1442,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["onyesclick",{"_index":996,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["operation",{"_index":1547,"title":{},"body":{"injectables/HttpService.html":{}}}],["operations",{"_index":984,"title":{},"body":{"injectables/DateService.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["optionalproperties",{"_index":1565,"title":{},"body":{"injectables/JSONValidationService.html":{},"miscellaneous/variables.html":{}}}],["org",{"_index":1198,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["organisation",{"_index":1199,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["organization",{"_index":844,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["orgapersons",{"_index":845,"title":{},"body":{"injectables/CustomerService.html":{}}}],["ort",{"_index":1238,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["out",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"injectables/DictionaryService.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":316,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["outline.mat",{"_index":314,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["over",{"_index":240,"title":{},"body":{"components/AdminComponent.html":{}}}],["overlaymodule",{"_index":410,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":2138,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2032,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":967,"title":{},"body":{"components/CustomersComponent.html":{},"components/MainComponent.html":{},"components/SettingsComponent.html":{}}}],["page",{"_index":1318,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["param",{"_index":771,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["parent",{"_index":1628,"title":{},"body":{"components/MainComponent.html":{}}}],["parse",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseerrors",{"_index":1553,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["parseerrors(validationerrors",{"_index":1556,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["part",{"_index":338,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["password",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":388,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["password.component",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":1763,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1762,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1761,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:18",{"_index":1778,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1781,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":1780,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1779,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1772,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":1776,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1777,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1775,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1774,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":1773,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":1783,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/reset",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password:this.passwordform.controls['password'].value}).topromise",{"_index":1796,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordform",{"_index":1766,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["passwordformcontrol",{"_index":1769,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["passwordold",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/JSONValidationService.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":1360,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["passwort",{"_index":1062,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["passwortbestätigung",{"_index":1139,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["passwörter",{"_index":1149,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["path",{"_index":582,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1512,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["pattern.test(c.value",{"_index":1516,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["payinf",{"_index":1219,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["payment",{"_index":745,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["payment?.get(\"bank\")?.value",{"_index":820,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"bic\")?.value",{"_index":818,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"iban\")?.value",{"_index":816,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"industryfield\")?.value?.code",{"_index":814,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"industryfieldcode\")?.value?.code",{"_index":812,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"notes\")?.value",{"_index":824,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"paymentterm\")?.value?.code",{"_index":822,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"sepa\")?.value",{"_index":900,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"taxid\")?.value",{"_index":808,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get(\"vatid\")?.value",{"_index":810,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get('agb')?.value",{"_index":841,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payment?.get('creditlimit')?.value",{"_index":843,"title":{},"body":{"injectables/CustomerService.html":{}}}],["paymentterm",{"_index":821,"title":{},"body":{"injectables/CustomerService.html":{}}}],["payterms",{"_index":1263,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["per",{"_index":1197,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["perorg",{"_index":1200,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["person",{"_index":828,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{},"components/PreselectionComponent.html":{},"injectables/StorageService.html":{}}}],["personen",{"_index":1281,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["persons",{"_index":1350,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["phone",{"_index":800,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["please",{"_index":1328,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["plz",{"_index":1237,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["point",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["pointer",{"_index":1950,"title":{},"body":{"components/SettingsComponent.html":{}}}],["portalmodule",{"_index":414,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["postfach",{"_index":1235,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["preselection",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PreselectionComponent.html":{},"injectables/StorageService.html":{}}}],["preselection'},{'name",{"_index":385,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["preselection.component.html",{"_index":1714,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["preselection.component.scss",{"_index":1713,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["preselectioncomponent",{"_index":384,"title":{"components/PreselectionComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["press",{"_index":1330,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["private",{"_index":78,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["prod",{"_index":2118,"title":{},"body":{"index.html":{}}}],["production",{"_index":2119,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2096,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":1577,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["protractor",{"_index":2129,"title":{},"body":{"index.html":{}}}],["provide",{"_index":494,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":74,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"injectables/StorageService.html":{}}}],["providers",{"_index":493,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["pswd",{"_index":1086,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdconf",{"_index":1138,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdfog",{"_index":1061,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdisres",{"_index":1167,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdnmatch",{"_index":1147,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdold",{"_index":1140,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdoldnmatch",{"_index":1142,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["pswdwillres",{"_index":1064,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["public",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["raised",{"_index":329,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["reactiveformsmodule",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readme",{"_index":2133,"title":{},"body":{"index.html":{}}}],["recaptcha",{"_index":1748,"title":{},"body":{"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{},"dependencies.html":{}}}],["recaptchaformsmodule",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recaptchamodule",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recaptchaservice",{"_index":541,"title":{"injectables/RecaptchaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["recaptchasitekey",{"_index":1854,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{},"miscellaneous/variables.html":{}}}],["rechtsform",{"_index":1209,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["redirected",{"_index":1321,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["refreshtoken",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["register",{"_index":1371,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["registered",{"_index":1329,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["registerform",{"_index":1369,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["registerformcontrol",{"_index":1372,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["registrierte",{"_index":1104,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["relativelinkresolution",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":2108,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":1267,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["replay",{"_index":306,"title":{},"body":{"components/AdminComponent.html":{}}}],["replaysubject",{"_index":1834,"title":{},"body":{"injectables/SearchService.html":{}}}],["req",{"_index":637,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":644,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set(\"authorization",{"_index":645,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":768,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{},"injectables/HttpService.html":{}}}],["request(func",{"_index":1526,"title":{},"body":{"injectables/HttpService.html":{}}}],["requestpasswordreset",{"_index":39,"title":{},"body":{"injectables/AccountService.html":{}}}],["requestpasswordreset(account",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{}}}],["require",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1457,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["reset",{"_index":386,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":40,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{}}}],["resetpassword(account",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{}}}],["resetpassword(accounttoreset",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["resetpasswordadmindialog",{"_index":184,"title":{"components/ResetPasswordAdminDialog.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpasswordcomponent",{"_index":387,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddialog",{"_index":265,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{}}}],["resetpassworddialog.afterclosed().topromise",{"_index":268,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{}}}],["resetpasswordform",{"_index":1879,"title":{},"body":{"components/SettingsComponent.html":{}}}],["resetpassworduserdialog",{"_index":389,"title":{"components/ResetPasswordUserDialog.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpswd",{"_index":1113,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["resetpswd1",{"_index":1296,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["resetpswd2",{"_index":1298,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["resetpswdtext",{"_index":1093,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["resets",{"_index":1963,"title":{},"body":{"injectables/StorageService.html":{}}}],["resetvalues",{"_index":1960,"title":{},"body":{"injectables/StorageService.html":{}}}],["resolved",{"_index":1855,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["resolved(captcha",{"_index":1859,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["resolving",{"_index":1861,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["response",{"_index":764,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/HttpService.html":{}}}],["response.error",{"_index":1538,"title":{},"body":{"injectables/HttpService.html":{}}}],["response.message",{"_index":1534,"title":{},"body":{"injectables/HttpService.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.idtoken",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["result?.istrue",{"_index":1792,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["results",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result}).topromise",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{}}}],["return",{"_index":79,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["right",{"_index":968,"title":{},"body":{"components/CustomersComponent.html":{}}}],["role",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/DictionaryService.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rolle",{"_index":1127,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["root",{"_index":75,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"injectables/StorageService.html":{}}}],["root'},{'name",{"_index":374,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":607,"title":{},"body":{"guards/AuthGuardService.html":{},"components/ResetPasswordComponent.html":{}}}],["route.data.roles",{"_index":621,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["route.data.roles.indexof(accountrole",{"_index":622,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["router",{"_index":600,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routermodule",{"_index":577,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":605,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["routes",{"_index":576,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module.ts",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1668,"title":{},"body":{"components/MainComponent.html":{}}}],["rsepa",{"_index":1260,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["run",{"_index":2102,"title":{},"body":{"index.html":{}}}],["running",{"_index":2120,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":641,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpService.html":{},"injectables/RecaptchaService.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1531,"title":{},"body":{"injectables/HttpService.html":{}}}],["s",{"_index":754,"title":{},"body":{"injectables/CustomerService.html":{}}}],["sal",{"_index":1277,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sal.details",{"_index":1425,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["salutation",{"_index":752,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["salutationcode",{"_index":1696,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["sap",{"_index":732,"title":{},"body":{"interfaces/CodeDetails.html":{},"injectables/DictionaryService.html":{}}}],["sapcustomer",{"_index":762,"title":{},"body":{"injectables/CustomerService.html":{}}}],["sapid",{"_index":1177,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sax",{"_index":2084,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2109,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":2078,"title":{},"body":{"dependencies.html":{}}}],["schemas",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["schnittstellennummer",{"_index":1211,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["search",{"_index":272,"title":{},"body":{"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/CustomersComponent.html":{},"injectables/DictionaryService.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["search.tolowercase",{"_index":1844,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchservice",{"_index":542,"title":{"injectables/SearchService.html":{}},"body":{"modules/AppModule.html":{},"injectables/SearchService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["secondname",{"_index":833,"title":{},"body":{"injectables/CustomerService.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{}}}],["secset",{"_index":1130,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["security",{"_index":1326,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["seite",{"_index":1172,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["select",{"_index":485,"title":{},"body":{"modules/AngularMaterialModule.html":{},"dependencies.html":{}}}],["selector",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["send",{"_index":392,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["sendcustomer",{"_index":739,"title":{},"body":{"injectables/CustomerService.html":{}}}],["sendcustomer(customer",{"_index":757,"title":{},"body":{"injectables/CustomerService.html":{}}}],["sendcustomerconfirmationdialog",{"_index":391,"title":{"components/SendCustomerConfirmationDialog.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sendcustomerrequest",{"_index":740,"title":{},"body":{"injectables/CustomerService.html":{}}}],["sendcustomerrequest(customer",{"_index":765,"title":{},"body":{"injectables/CustomerService.html":{}}}],["senden",{"_index":1191,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sending",{"_index":1851,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["sends",{"_index":759,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["sendtoken",{"_index":1741,"title":{},"body":{"injectables/RecaptchaService.html":{}}}],["sendtoken(token",{"_index":1743,"title":{},"body":{"injectables/RecaptchaService.html":{}}}],["sent",{"_index":1315,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sepa",{"_index":901,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["serve",{"_index":2103,"title":{},"body":{"index.html":{}}}],["server",{"_index":760,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{},"index.html":{}}}],["serverurl",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":983,"title":{},"body":{"injectables/DateService.html":{},"components/MainComponent.html":{},"dependencies.html":{}}}],["services",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/auth/auth",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["set",{"_index":1505,"title":{},"body":{"injectables/FormValidationService.html":{},"injectables/StorageService.html":{}}}],["setaccount",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["setaccount(account",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcustomertype(customertype",{"_index":1966,"title":{},"body":{"injectables/StorageService.html":{}}}],["setdebitcredittype(debitcredittype",{"_index":1970,"title":{},"body":{"injectables/StorageService.html":{}}}],["setinterval(this.checktokenexpiration.bind(this",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession(result",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["setting",{"_index":1878,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":396,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1875,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1874,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":395,"title":{"components/SettingsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shared",{"_index":776,"title":{},"body":{"injectables/CustomerService.html":{}}}],["sharedcustomer",{"_index":763,"title":{},"body":{"injectables/CustomerService.html":{}}}],["short",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":507,"title":{},"body":{"injectables/AppDateAdapter.html":{}}}],["showed",{"_index":734,"title":{},"body":{"interfaces/CodeDetails.html":{}}}],["showresetform",{"_index":1767,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sicherheitseinstellungen",{"_index":1131,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sidenav",{"_index":1669,"title":{},"body":{"components/MainComponent.html":{}}}],["sie",{"_index":1095,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sign",{"_index":1311,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sind",{"_index":1159,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["size",{"_index":336,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["slow",{"_index":241,"title":{},"body":{"components/AdminComponent.html":{}}}],["sname",{"_index":1284,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["snd",{"_index":1190,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sndconfemail",{"_index":1292,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sndcus",{"_index":1289,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["snddir",{"_index":1290,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["sortbytimestamp",{"_index":909,"title":{},"body":{"components/CustomersComponent.html":{}}}],["sortbytimestamp(array",{"_index":915,"title":{},"body":{"components/CustomersComponent.html":{}}}],["sortbyusername",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{}}}],["sortbyusername(array",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["spec\\.ts",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sperren",{"_index":1115,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["spinner",{"_index":450,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["sprache",{"_index":1081,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/.../angular",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../format",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modules.ts",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/adapters/format",{"_index":503,"title":{},"body":{"injectables/AppDateAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:101",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:122",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:144",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:22",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:24",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:25",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:27",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:29",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:30",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:33",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:39",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:49",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:55",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:65",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:73",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:84",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/customers/customers.component.ts",{"_index":903,"title":{},"body":{"components/CustomersComponent.html":{},"coverage.html":{}}}],["src/app/components/customers/customers.component.ts:18",{"_index":918,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:19",{"_index":921,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:20",{"_index":917,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:21",{"_index":920,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:23",{"_index":910,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:25",{"_index":919,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:26",{"_index":922,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:29",{"_index":914,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:34",{"_index":911,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:53",{"_index":913,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:59",{"_index":912,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/customers/customers.component.ts:67",{"_index":916,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1592,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":1593,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":1591,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":1590,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:46",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:54",{"_index":1596,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/main/main.component.ts",{"_index":1625,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/components/main/main.component.ts:16",{"_index":1633,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:18",{"_index":1640,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:19",{"_index":1639,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:22",{"_index":1636,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:27",{"_index":1638,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:35",{"_index":1637,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:42",{"_index":1634,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/new",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["src/app/components/preselection/preselection.component.ts",{"_index":1709,"title":{},"body":{"components/PreselectionComponent.html":{},"coverage.html":{}}}],["src/app/components/preselection/preselection.component.ts:18",{"_index":1722,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["src/app/components/preselection/preselection.component.ts:19",{"_index":1719,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["src/app/components/preselection/preselection.component.ts:21",{"_index":1723,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["src/app/components/preselection/preselection.component.ts:22",{"_index":1724,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["src/app/components/preselection/preselection.component.ts:24",{"_index":1720,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["src/app/components/preselection/preselection.component.ts:31",{"_index":1721,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["src/app/components/reset",{"_index":1760,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/settings/settings.component.ts",{"_index":1873,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/components/settings/settings.component.ts:100",{"_index":1899,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:104",{"_index":1900,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:19",{"_index":1892,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:20",{"_index":1893,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:21",{"_index":1894,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:22",{"_index":1888,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:23",{"_index":1896,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:24",{"_index":1889,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:25",{"_index":1881,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:27",{"_index":1890,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:28",{"_index":1897,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:29",{"_index":1891,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:30",{"_index":1895,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:33",{"_index":1883,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:51",{"_index":1882,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:82",{"_index":1884,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/components/settings/settings.component.ts:91",{"_index":1886,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/dialogs/delete",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/DeleteAccountDialog.html":{},"coverage.html":{}}}],["src/app/dialogs/edit",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAccountDialog.html":{},"coverage.html":{}}}],["src/app/dialogs/new",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{},"components/NewAccountDialog.html":{},"coverage.html":{}}}],["src/app/dialogs/reset",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"coverage.html":{}}}],["src/app/dialogs/send",{"_index":1848,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{},"coverage.html":{}}}],["src/app/interfaces/account",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["src/app/interfaces/account.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"coverage.html":{}}}],["src/app/interfaces/list.ts",{"_index":726,"title":{},"body":{"interfaces/CodeDetails.html":{},"coverage.html":{}}}],["src/app/modules/angular",{"_index":402,"title":{},"body":{"modules/AngularMaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/app",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/modules/app.module.ts",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modules/modules.ts",{"_index":2012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/account/account.service",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["src/app/services/account/account.service.ts",{"_index":34,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/services/account/account.service.ts:10",{"_index":48,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:14",{"_index":53,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:18",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:22",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:29",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:33",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:37",{"_index":60,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account/account.service.ts:41",{"_index":58,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/auth/auth",{"_index":596,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service",{"_index":923,"title":{},"body":{"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:14",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:18",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:27",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:38",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:42",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:46",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:52",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:56",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:60",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:67",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:71",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:75",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:79",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/customer/customer.service",{"_index":924,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/services/customer/customer.service.ts",{"_index":736,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/app/services/customer/customer.service.ts:11",{"_index":742,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/services/customer/customer.service.ts:21",{"_index":758,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/services/customer/customer.service.ts:30",{"_index":766,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/services/customer/customer.service.ts:34",{"_index":756,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/services/customer/customer.service.ts:38",{"_index":748,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/services/date.service.ts",{"_index":981,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/services/date.service.ts:18",{"_index":988,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:9",{"_index":986,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/dictionary.service",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["src/app/services/dictionary.service.ts",{"_index":1021,"title":{},"body":{"injectables/DictionaryService.html":{},"coverage.html":{}}}],["src/app/services/dictionary.service.ts:12",{"_index":1049,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/dictionary.service.ts:14",{"_index":1310,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/dictionary.service.ts:163",{"_index":1366,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/dictionary.service.ts:317",{"_index":1053,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/dictionary.service.ts:320",{"_index":1036,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/dictionary.service.ts:327",{"_index":1044,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/dictionary.service.ts:336",{"_index":1038,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/app/services/error",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/services/form",{"_index":1385,"title":{},"body":{"components/EditAccountDialog.html":{},"injectables/FormValidationService.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts",{"_index":1518,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts:12",{"_index":1522,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:17",{"_index":1529,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:36",{"_index":1527,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:47",{"_index":1524,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/json",{"_index":1552,"title":{},"body":{"injectables/JSONValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/list.service",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/SettingsComponent.html":{}}}],["src/app/services/list.service.ts",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["src/app/services/recaptcha.service",{"_index":1865,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["src/app/services/recaptcha.service.ts",{"_index":1740,"title":{},"body":{"injectables/RecaptchaService.html":{},"coverage.html":{}}}],["src/app/services/recaptcha.service.ts:10",{"_index":1742,"title":{},"body":{"injectables/RecaptchaService.html":{}}}],["src/app/services/recaptcha.service.ts:18",{"_index":1744,"title":{},"body":{"injectables/RecaptchaService.html":{}}}],["src/app/services/search.service.ts",{"_index":1827,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts:12",{"_index":1831,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:22",{"_index":1835,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/storage.service",{"_index":1646,"title":{},"body":{"components/MainComponent.html":{},"components/PreselectionComponent.html":{},"components/SettingsComponent.html":{}}}],["src/app/services/storage.service.ts",{"_index":1957,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/services/storage.service.ts:16",{"_index":1962,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:21",{"_index":1965,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:25",{"_index":1969,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:29",{"_index":1967,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:33",{"_index":1971,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:9",{"_index":1961,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/environments/environment",{"_index":72,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CustomerService.html":{},"injectables/RecaptchaService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startchecking",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["startchecking(defaultinterval",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["started",{"_index":2094,"title":{"index.html":{}},"body":{}}],["state",{"_index":604,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["state.url",{"_index":617,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["statements",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["steuernummer",{"_index":1247,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["stimmen",{"_index":1150,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["stopchecking",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageservice",{"_index":543,"title":{"injectables/StorageService.html":{}},"body":{"modules/AppModule.html":{},"components/MainComponent.html":{},"components/PreselectionComponent.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2115,"title":{},"body":{"index.html":{}}}],["stores",{"_index":1959,"title":{},"body":{"injectables/StorageService.html":{}}}],["str",{"_index":1230,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["straße",{"_index":1231,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["stream",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["street",{"_index":786,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["string",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AppDateAdapter.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/DateService.html":{},"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendCustomerConfirmationDialog.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["stroked",{"_index":331,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["styles",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["submit",{"_index":1287,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["suc",{"_index":1306,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["success",{"_index":1354,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["suche",{"_index":1126,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["supplier",{"_index":1342,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["support",{"_index":2137,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1351,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["svg",{"_index":2048,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switches",{"_index":1045,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["switchlanguage",{"_index":1035,"title":{},"body":{"injectables/DictionaryService.html":{},"components/MainComponent.html":{}}}],["system",{"_index":733,"title":{},"body":{"interfaces/CodeDetails.html":{}}}],["t",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CustomerService.html":{},"injectables/HttpService.html":{}}}],["table",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1319,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["takes",{"_index":1039,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["tax",{"_index":1246,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["taxid",{"_index":807,"title":{},"body":{"injectables/CustomerService.html":{}}}],["td",{"_index":966,"title":{},"body":{"components/CustomersComponent.html":{}}}],["tel",{"_index":1241,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["telefax",{"_index":1243,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["telefonnummer",{"_index":1242,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["template",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["temporarily",{"_index":1958,"title":{},"body":{"injectables/StorageService.html":{}}}],["terms",{"_index":1347,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["test",{"_index":2123,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2122,"title":{},"body":{"index.html":{}}}],["text",{"_index":1478,"title":{},"body":{"injectables/ErrorMessageService.html":{},"injectables/SearchService.html":{}}}],["texts",{"_index":1024,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["thick",{"_index":317,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["this.account",{"_index":1387,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.account)).topromise",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.account.email",{"_index":1393,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.account.firstname",{"_index":1397,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.account.mobile",{"_index":1401,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.account.phone",{"_index":1400,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.account.secondname",{"_index":1399,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.account.username",{"_index":1391,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.accountform",{"_index":1901,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.controls",{"_index":1941,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.controls['companycode'].value",{"_index":1911,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.controls['firstname'].value",{"_index":1913,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.controls['mobile'].value",{"_index":1919,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.controls['phone'].value",{"_index":1917,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.controls['secondname'].value",{"_index":1915,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.markallastouched",{"_index":1930,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountform.valid",{"_index":1908,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accounts",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accounts.filter(account",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accounts.filter(u",{"_index":242,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accounts.findindex((el",{"_index":258,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accounts.foreach(u",{"_index":249,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accounts.push(result",{"_index":231,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accounts[indexaccounts",{"_index":260,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.createaccount(result).topromise",{"_index":230,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.deleteaccount(accounttosend).topromise",{"_index":237,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.getaccounts().topromise",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.requestpasswordreset(accounttoreset).topromise",{"_index":269,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.requestpasswordreset({email",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.accountservice.resetpassword({hash",{"_index":1795,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.accountservice.updateaccount(accounttoblock).topromise",{"_index":248,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.updateaccount(accounttochange).topromise",{"_index":1938,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.accountservice.updateaccount(accounttoedit).topromise",{"_index":264,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.updateaccount(accounttosend).topromise",{"_index":256,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.accountservice.validatepasswordresethash({hash",{"_index":1790,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.accounttype",{"_index":1700,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.authservice.account",{"_index":1909,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.account.companycode",{"_index":775,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.authservice.account.email",{"_index":927,"title":{},"body":{"components/CustomersComponent.html":{},"components/SettingsComponent.html":{}}}],["this.authservice.account.firstname",{"_index":1904,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.account.mobile",{"_index":1907,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.account.phone",{"_index":1906,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.account.role",{"_index":620,"title":{},"body":{"guards/AuthGuardService.html":{},"components/SettingsComponent.html":{}}}],["this.authservice.account.secondname",{"_index":1905,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.account.username",{"_index":1902,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.isloggedin",{"_index":618,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(this.loginform.controls['identifier'].value",{"_index":1602,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":1652,"title":{},"body":{"components/MainComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.authservice.setaccount(accountresponse.account",{"_index":1939,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.setsession(result",{"_index":1797,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.startchecking",{"_index":1598,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.stopchecking",{"_index":1653,"title":{},"body":{"components/MainComponent.html":{}}}],["this.checkaccountlogin(route",{"_index":616,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.checkhash",{"_index":1784,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.companycodedetails",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.companycodedetails[account.companycode].tolowercase().includes(val",{"_index":218,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.cookieservice.get('lang",{"_index":1647,"title":{},"body":{"components/MainComponent.html":{}}}],["this.cookieservice.set('lang",{"_index":1651,"title":{},"body":{"components/MainComponent.html":{}}}],["this.currentlanguage",{"_index":1367,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.customers",{"_index":928,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.customers.filter(customer",{"_index":940,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.customers.foreach(customer",{"_index":930,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.customerservice.getcustomers(email).topromise",{"_index":929,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.customertype",{"_index":1729,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["this.dateservice.formatdate(new",{"_index":837,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.debitcredittype",{"_index":1727,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["this.dialog.open(deleteaccountdialog",{"_index":233,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.dialog.open(editaccountdialog",{"_index":254,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.dialog.open(newaccountdialog",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.dialog.open(resetpasswordadmindialog",{"_index":266,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.dialog.open(resetpassworduserdialog",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.dialogref.close",{"_index":1402,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.dialogref.close(editedaccount",{"_index":1417,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.dialogref.close(false",{"_index":1015,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["this.dialogref.close(newaccount",{"_index":1701,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.dialogref.close(this.emailform.controls['email'].value",{"_index":1823,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["this.dialogref.close(true",{"_index":1014,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["this.dictionary.get(this.currentlanguage).get(abbreviation",{"_index":1368,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionaryde",{"_index":1050,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionaryen",{"_index":1052,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionaryservice.currentlanguage",{"_index":1649,"title":{},"body":{"components/MainComponent.html":{}}}],["this.dictionaryservice.get('err",{"_index":1543,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.dictionaryservice.get('suc",{"_index":1536,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.dictionaryservice.get(errorabbreviation",{"_index":1540,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.dictionaryservice.get(fieldname",{"_index":1477,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.dictionaryservice.switchlanguage",{"_index":1650,"title":{},"body":{"components/MainComponent.html":{}}}],["this.emailform",{"_index":1820,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["this.emailform.controls",{"_index":1821,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["this.emailform.markallastouched",{"_index":1824,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["this.emailform.valid",{"_index":1822,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["this.errors.get(this.dictionaryservice.currentlanguage).get(errortype",{"_index":1479,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.errorsde",{"_index":1454,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.errorsen",{"_index":1455,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.fetchaccounts",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.fetchcustomers",{"_index":925,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.filter.valuechanges.subscribe(val",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["this.filteredaccounts",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filteredaccounts.filter(u",{"_index":245,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filteredaccounts.findindex((el",{"_index":262,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filteredaccounts.foreach(u",{"_index":253,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filteredaccounts[indexfilteredaccounts",{"_index":263,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filteredcustomers",{"_index":939,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.filterquery(this.filter.value",{"_index":232,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filterquery(val",{"_index":212,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["this.formbuilder.group",{"_index":1390,"title":{},"body":{"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["this.formvalidationservice.mustmatch('password",{"_index":1787,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["this.formvalidationservice.validatename",{"_index":1398,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.formvalidationservice.validateusername",{"_index":1693,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.getexpiration",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hash",{"_index":1788,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.hash}).topromise",{"_index":1791,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.httpservice.request(this.http.delete(`${environment.serverurl}/accounts",{"_index":89,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.get(`${environment.serverurl}/accounts",{"_index":93,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.get(`${environment.serverurl}/customers?email=${email",{"_index":774,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/accounts",{"_index":80,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/accounts/reset",{"_index":90,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/accounts/reset/request",{"_index":92,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/accounts/reset/validation",{"_index":91,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/customers",{"_index":772,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/customers/recaptcha",{"_index":1747,"title":{},"body":{"injectables/RecaptchaService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/customers/request",{"_index":773,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.httpservice.request(this.http.post(`${environment.serverurl}/login",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpservice.request(this.http.put(`${environment.serverurl}/accounts",{"_index":81,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpservice.request(this.http.put(`${environment.serverurl}/login",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initaccountsearch",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.initcustomersearch",{"_index":926,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.isloggedin",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.listservice.companycodes.getobjectforcode(this.account.companycode",{"_index":1396,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.listservice.companycodes.getobjectforcode(this.authservice.account.companycode",{"_index":1903,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.listservice.companycodes.reduce((acc",{"_index":197,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.listservice.salutationsperson.getobjectforcode(this.account.salutationcode",{"_index":1394,"title":{},"body":{"components/EditAccountDialog.html":{}}}],["this.listservice.salutationsperson[0",{"_index":1695,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.loginform",{"_index":1597,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls['password'].value",{"_index":1603,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1600,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.parseerrors(validate.errors",{"_index":1569,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["this.passwordform",{"_index":1785,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["this.passwordform.controls",{"_index":1800,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["this.passwordform.controls['confirmpassword'].markasuntouched",{"_index":1936,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['confirmpassword'].setvalue",{"_index":1935,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['confirmpassword'].value",{"_index":1924,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['password'].markasuntouched",{"_index":1934,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['password'].setvalue",{"_index":1933,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['password'].value",{"_index":1923,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['passwordold'].markasuntouched",{"_index":1932,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['passwordold'].setvalue",{"_index":1931,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.controls['passwordold'].value",{"_index":1922,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.passwordform.markallastouched",{"_index":1799,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["this.passwordform.valid",{"_index":1794,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["this.recaptchaservice.sendtoken(captcha).subscribe(res",{"_index":1866,"title":{},"body":{"components/SendCustomerConfirmationDialog.html":{}}}],["this.registerform",{"_index":1389,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls",{"_index":1419,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['companycode'].value.code",{"_index":1408,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['email'].value",{"_index":1699,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.registerform.controls['firstname'].value",{"_index":1410,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['mobile'].value",{"_index":1416,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['phone'].value",{"_index":1414,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['salutation'].value",{"_index":1697,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.registerform.controls['salutation'].value.code",{"_index":1406,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['secondname'].value",{"_index":1412,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.controls['username'].value",{"_index":1698,"title":{},"body":{"components/NewAccountDialog.html":{}}}],["this.registerform.markallastouched",{"_index":1418,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.registerform.valid",{"_index":1403,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{}}}],["this.reset",{"_index":1654,"title":{},"body":{"components/MainComponent.html":{}}}],["this.resetpasswordform",{"_index":1940,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.route.snapshot.queryparammap.get('hash",{"_index":1789,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/iso",{"_index":1730,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["this.router.navigate(['/login",{"_index":624,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/MainComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/preselection",{"_index":1599,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.url",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setaccount(result.account",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setsession(result",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.showresetform",{"_index":1793,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.sortbytimestamp(this.customers",{"_index":938,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.sortbyusername(this.accounts",{"_index":206,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.storageservice.customertype",{"_index":1728,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["this.storageservice.debitcredittype",{"_index":1726,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["this.storageservice.resetvalues",{"_index":1725,"title":{},"body":{"components/PreselectionComponent.html":{}}}],["this.timer",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.toastrservice.error(errorabbreviation",{"_index":1542,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.toastrservice.error(this.dictionaryservice.get(errorabbreviation",{"_index":1544,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.toastrservice.success(this.dictionaryservice.get(messageabbreviation",{"_index":1535,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.updateaccount(accounttochange",{"_index":1925,"title":{},"body":{"components/SettingsComponent.html":{}}}],["throw",{"_index":1571,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["timer",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["timestampa",{"_index":943,"title":{},"body":{"components/CustomersComponent.html":{}}}],["timestampb",{"_index":945,"title":{},"body":{"components/CustomersComponent.html":{}}}],["titel",{"_index":1276,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["title",{"_index":829,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["toastr",{"_index":1532,"title":{},"body":{"injectables/HttpService.html":{},"dependencies.html":{}}}],["toastrmodule.forroot",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toastrservice",{"_index":1521,"title":{},"body":{"injectables/HttpService.html":{}}}],["todo",{"_index":238,"title":{},"body":{"components/AdminComponent.html":{}}}],["toggle",{"_index":421,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["token",{"_index":1746,"title":{},"body":{"injectables/RecaptchaService.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["toolbar",{"_index":1665,"title":{},"body":{"components/MainComponent.html":{}}}],["top",{"_index":1672,"title":{},"body":{"components/MainComponent.html":{}}}],["topromise",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["transform",{"_index":1675,"title":{},"body":{"components/MainComponent.html":{}}}],["translatex",{"_index":1676,"title":{},"body":{"components/MainComponent.html":{}}}],["tree",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["trigger",{"_index":1929,"title":{},"body":{"components/SettingsComponent.html":{}}}],["triggers",{"_index":1004,"title":{},"body":{"components/DeleteAccountDialog.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["true",{"_index":626,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"injectables/FormValidationService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":202,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tslib",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1025,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/FormValidationService.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"injectables/AccountService.html":{},"components/AdminComponent.html":{},"injectables/AppDateAdapter.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/CodeDetails.html":{},"injectables/CustomerService.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"injectables/RecaptchaService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1539,"title":{},"body":{"injectables/HttpService.html":{}}}],["types",{"_index":1444,"title":{},"body":{"injectables/ErrorMessageService.html":{},"injectables/StorageService.html":{}}}],["u.blocked",{"_index":251,"title":{},"body":{"components/AdminComponent.html":{}}}],["u.email",{"_index":243,"title":{},"body":{"components/AdminComponent.html":{}}}],["umsatzsteuer",{"_index":1249,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["unblock",{"_index":1333,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["unblocked",{"_index":1357,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["unblockusr",{"_index":1116,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["und",{"_index":1106,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/ErrorMessageService.html":{}}}],["undefined",{"_index":1541,"title":{},"body":{"injectables/HttpService.html":{},"injectables/JSONValidationService.html":{}}}],["underscores",{"_index":1474,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["unfold_less",{"_index":278,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["unfold_more",{"_index":276,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["ungültig",{"_index":1459,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["unique",{"_index":730,"title":{},"body":{"interfaces/CodeDetails.html":{}}}],["unit",{"_index":2121,"title":{},"body":{"index.html":{}}}],["unterstrichen",{"_index":1466,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["update",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"components/SettingsComponent.html":{}}}],["updateaccount",{"_index":41,"title":{},"body":{"injectables/AccountService.html":{},"components/SettingsComponent.html":{}}}],["updateaccount(account",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{}}}],["updateaccount(accounttochange",{"_index":1885,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updated",{"_index":1353,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["upload",{"_index":747,"title":{},"body":{"injectables/CustomerService.html":{}}}],["upload?.get(\"files\")?.value",{"_index":827,"title":{},"body":{"injectables/CustomerService.html":{}}}],["uploaded",{"_index":825,"title":{},"body":{"injectables/CustomerService.html":{}}}],["url",{"_index":610,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["urltree",{"_index":608,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["use",{"_index":2111,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":495,"title":{},"body":{"modules/AngularMaterialModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":731,"title":{},"body":{"interfaces/CodeDetails.html":{},"injectables/DictionaryService.html":{}}}],["user",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["user'},{'name",{"_index":390,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["user.dialog",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["user.dialog.html",{"_index":1809,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.scss",{"_index":1808,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts",{"_index":1807,"title":{},"body":{"components/ResetPasswordUserDialog.html":{},"coverage.html":{}}}],["user.dialog.ts:14",{"_index":1812,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts:17",{"_index":1816,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts:18",{"_index":1817,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts:21",{"_index":1813,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts:27",{"_index":1819,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts:34",{"_index":1815,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user.dialog.ts:45",{"_index":1814,"title":{},"body":{"components/ResetPasswordUserDialog.html":{}}}],["user/reset",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ResetPasswordUserDialog.html":{},"coverage.html":{}}}],["username",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountDTO.html":{},"interfaces/AccountJWT.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/JSONValidationService.html":{},"components/NewAccountDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["username/email",{"_index":1364,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["userschema",{"_index":1564,"title":{},"body":{"injectables/JSONValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":496,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["usr",{"_index":1087,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usrisbl",{"_index":1160,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usriscr",{"_index":1301,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usrisdel",{"_index":1165,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usrisnupd",{"_index":1305,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usrisun",{"_index":1163,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usrisupd",{"_index":1303,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["usrname",{"_index":1085,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["uuid",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["val.tolowercase",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["valid",{"_index":1470,"title":{},"body":{"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{},"components/SettingsComponent.html":{}}}],["validate",{"_index":1566,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validate(model",{"_index":1568,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validateaccountwithoutpassword",{"_index":1554,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validateaccountwithoutpassword(model",{"_index":1558,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validatename",{"_index":1468,"title":{},"body":{"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{}}}],["validatename(c",{"_index":1487,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validatepasswordresethash",{"_index":42,"title":{},"body":{"injectables/AccountService.html":{}}}],["validatepasswordresethash(account",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{}}}],["validateusername",{"_index":1460,"title":{},"body":{"injectables/ErrorMessageService.html":{},"injectables/FormValidationService.html":{}}}],["validateusername(c",{"_index":1490,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validation",{"_index":1506,"title":{},"body":{"injectables/FormValidationService.html":{},"components/SettingsComponent.html":{}}}],["validation.service",{"_index":1386,"title":{},"body":{"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["validation.service.ts",{"_index":1480,"title":{},"body":{"injectables/FormValidationService.html":{},"injectables/JSONValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.service.ts:12",{"_index":1484,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validation.service.ts:23",{"_index":1555,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validation.service.ts:27",{"_index":1559,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validation.service.ts:31",{"_index":1491,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validation.service.ts:39",{"_index":1557,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validation.service.ts:40",{"_index":1488,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validation.service.ts:7",{"_index":1481,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validationerrors",{"_index":1492,"title":{},"body":{"injectables/FormValidationService.html":{},"injectables/JSONValidationService.html":{}}}],["validationerrors.foreach(error",{"_index":1572,"title":{},"body":{"injectables/JSONValidationService.html":{}}}],["validator",{"_index":1494,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validatorfn",{"_index":1486,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["validators",{"_index":1384,"title":{},"body":{"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["validators.email",{"_index":1694,"title":{},"body":{"components/NewAccountDialog.html":{},"components/ResetPasswordUserDialog.html":{}}}],["validators.required",{"_index":1395,"title":{},"body":{"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["value",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1837,"title":{},"body":{"injectables/SearchService.html":{}}}],["var",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AppDateAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DateService.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2145,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vat",{"_index":1248,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["vatid",{"_index":809,"title":{},"body":{"injectables/CustomerService.html":{}}}],["verbleibend",{"_index":1271,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["vergessen",{"_index":1063,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["version",{"_index":2099,"title":{},"body":{"index.html":{}}}],["versions",{"_index":1026,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["vertical",{"_index":332,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"components/EditAccountDialog.html":{},"components/NewAccountDialog.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SettingsComponent.html":{}}}],["verwendet",{"_index":1156,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["via",{"_index":2125,"title":{},"body":{"index.html":{}}}],["view",{"_index":1317,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["viewchild",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["viewchild('accordion",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{}}}],["visibility",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["visibility_off",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SettingsComponent.html":{}}}],["void",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CustomersComponent.html":{},"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"components/EditAccountDialog.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewAccountDialog.html":{},"components/PreselectionComponent.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordComponent.html":{},"components/ResetPasswordUserDialog.html":{},"injectables/SearchService.html":{},"components/SendCustomerConfirmationDialog.html":{},"components/SettingsComponent.html":{},"injectables/StorageService.html":{}}}],["von",{"_index":1297,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["vorname",{"_index":1283,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["web",{"_index":1656,"title":{},"body":{"components/MainComponent.html":{}}}],["weiter",{"_index":1189,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["weiteren",{"_index":1068,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["weitergeleitet",{"_index":1176,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["wenn",{"_index":1094,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["werden",{"_index":1174,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["width",{"_index":339,"title":{},"body":{"components/AdminComponent.html":{},"components/CustomersComponent.html":{},"components/MainComponent.html":{}}}],["window",{"_index":1951,"title":{},"body":{"components/SettingsComponent.html":{}}}],["wird",{"_index":1070,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["without",{"_index":1921,"title":{},"body":{"components/SettingsComponent.html":{}}}],["wurde",{"_index":1162,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["x",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{}}}],["x.code",{"_index":200,"title":{},"body":{"components/AdminComponent.html":{}}}],["x.details",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{}}}],["year",{"_index":523,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1008,"title":{},"body":{"components/DeleteAccountDialog.html":{},"injectables/DictionaryService.html":{},"injectables/HttpService.html":{},"components/ResetPasswordAdminDialog.html":{},"components/ResetPasswordUserDialog.html":{},"components/SendCustomerConfirmationDialog.html":{}}}],["yyyy",{"_index":510,"title":{},"body":{"injectables/AppDateAdapter.html":{},"injectables/DateService.html":{}}}],["z",{"_index":1517,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["z0",{"_index":1514,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["za",{"_index":1513,"title":{},"body":{"injectables/FormValidationService.html":{}}}],["zahlungsbedingung",{"_index":1264,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zahlungsinformationen",{"_index":1220,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zeichen",{"_index":1270,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["ziffern",{"_index":1465,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["zip",{"_index":794,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DictionaryService.html":{}}}],["zipmailbox",{"_index":792,"title":{},"body":{"injectables/CustomerService.html":{}}}],["zone.js",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zugesandt",{"_index":1112,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zuklappen",{"_index":1125,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zur",{"_index":1175,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zurück",{"_index":1187,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zurückgesetzt",{"_index":1168,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zurücksetzen",{"_index":1101,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zus",{"_index":1226,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["zuzugreifen",{"_index":1173,"title":{},"body":{"injectables/DictionaryService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blocked\n                                \n                                \n                                        companyCode\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        passwordOld\n                                \n                                \n                                        role\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyCode\n                                    \n                                \n                                \n                                    \n                                        companyCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordOld\n                                    \n                                \n                                \n                                    \n                                        passwordOld:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n    email: string,\n    username: string,\n    companyCode: string,\n    role: string,\n    blocked?: boolean,\n    password?: string\n    passwordOld?: string\n}\n\nexport interface AccountJWT {\n    idToken: string,\n    expiresIn: string,\n    account: Account\n}\n\nexport interface AccountDTO {\n    account?: Account,\n    message?: string,\n    error?: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountDTO.html":{"url":"interfaces/AccountDTO.html","title":"interface - AccountDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         Account\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Account\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n    email: string,\n    username: string,\n    companyCode: string,\n    role: string,\n    blocked?: boolean,\n    password?: string\n    passwordOld?: string\n}\n\nexport interface AccountJWT {\n    idToken: string,\n    expiresIn: string,\n    account: Account\n}\n\nexport interface AccountDTO {\n    account?: Account,\n    message?: string,\n    error?: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountJWT.html":{"url":"interfaces/AccountJWT.html","title":"interface - AccountJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccountJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        account\n                                \n                                \n                                        expiresIn\n                                \n                                \n                                        idToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         Account\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Account\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                    \n                                \n                                \n                                    \n                                        expiresIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n    email: string,\n    username: string,\n    companyCode: string,\n    role: string,\n    blocked?: boolean,\n    password?: string\n    passwordOld?: string\n}\n\nexport interface AccountJWT {\n    idToken: string,\n    expiresIn: string,\n    account: Account\n}\n\nexport interface AccountDTO {\n    account?: Account,\n    message?: string,\n    error?: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/account/account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAccount\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                getAccounts\n                            \n                            \n                                requestPasswordReset\n                            \n                            \n                                resetPassword\n                            \n                            \n                                updateAccount\n                            \n                            \n                                validatePasswordResetHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/account/account.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAccount\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAccount(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:14\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAccounts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \nrequestPasswordReset(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:37\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAccount(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePasswordResetHash\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePasswordResetHash(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account/account.service.ts:33\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpService } from '../http.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient, private httpService: HttpService) { }\n\n  createAccount(account) {\n    return this.httpService.request(this.http.post(`${environment.serverURL}/accounts`, { account }));\n  }\n\n  updateAccount(account) {\n    return this.httpService.request(this.http.put(`${environment.serverURL}/accounts`, { account }));\n  }\n\n  deleteAccount(account) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }), body: { account }\n    };\n    return this.httpService.request(this.http.delete(`${environment.serverURL}/accounts`, httpOptions));\n  }\n\n  resetPassword(account) {\n    return this.httpService.request(this.http.post(`${environment.serverURL}/accounts/reset`, { account }));\n  }\n\n  validatePasswordResetHash(account) {\n    return this.httpService.request(this.http.post(`${environment.serverURL}/accounts/reset/validation`, { account }));\n  }\n\n  requestPasswordReset(account) {\n    return this.httpService.request(this.http.post(`${environment.serverURL}/accounts/reset/request`, { account }));\n  }\n\n  getAccounts(){\n    return this.httpService.request(this.http.get(`${environment.serverURL}/accounts`));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordion\n                            \n                            \n                                accounts\n                            \n                            \n                                companyCodeDetails\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                filter\n                            \n                            \n                                filteredAccounts\n                            \n                            \n                                    Public\n                                listService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                blockAccount\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                editAccount\n                            \n                            \n                                    Async\n                                fetchAccounts\n                            \n                            \n                                filterQuery\n                            \n                            \n                                initAccountSearch\n                            \n                            \n                                    Async\n                                newAccount\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                sortByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionaryService: DictionaryService, errorMessageService: ErrorMessageService, accountService: AccountService, listService: ListService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listService\n                                                  \n                                                        \n                                                                        ListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            blockAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    blockAccount(accountToBlock)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountToBlock\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(accountToSend)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountToSend\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editAccount(accountToEdit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountToEdit\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchAccounts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterQuery\n                        \n                        \n                    \n                \n            \n            \n                \nfilterQuery(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initAccountSearch\n                        \n                        \n                    \n                \n            \n            \n                \ninitAccountSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(accountToReset)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountToReset\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortByUsername\n                        \n                        \n                    \n                \n            \n            \n                \nsortByUsername(array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accordion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAccordion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('accordion')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accounts\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyCodeDetails\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredAccounts\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { DeleteAccountDialog } from 'src/app/dialogs/delete-account-dialog/delete-account.dialog';\nimport { NewAccountDialog } from 'src/app/dialogs/new-account-dialog/new-account.dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { ListService } from 'src/app/services/list.service';\nimport { ResetPasswordAdminDialog } from 'src/app/dialogs/reset-password-admin/reset-password-admin.dialog';\nimport { AccountDTO } from 'src/app/interfaces/account';\nimport { EditAccountDialog } from 'src/app/dialogs/edit-account-dialog/edit-account.dialog';\nimport { AccountService } from 'src/app/services/account/account.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  accounts;\n  filteredAccounts;\n  companyCodeDetails;\n  filter: FormControl = new FormControl('');\n\n  @ViewChild('accordion') accordion: MatAccordion;\n\n  constructor(public dictionaryService: DictionaryService, public errorMessageService: ErrorMessageService,\n    private accountService: AccountService, public listService: ListService, private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.fetchAccounts();\n    this.initAccountSearch();\n    this.companyCodeDetails = this.listService.companyCodes.reduce((acc, x) => ({ ...acc, [x.code]: x.details }), {})\n  }\n\n  async fetchAccounts() {\n    try {\n      this.accounts = await this.accountService.getAccounts().toPromise();\n      this.sortByUsername(this.accounts);\n      this.filteredAccounts = [...this.accounts];\n    } catch (e) {\n      console.error(e.stack);\n    }\n  }\n\n  initAccountSearch() {\n    this.filter.valueChanges.subscribe(val => {\n      this.filterQuery(val);\n    });\n  }\n\n  filterQuery(val) {\n    var val = val.toLowerCase();\n    this.filteredAccounts = this.accounts.filter(account =>\n      account.username.toLowerCase().includes(val)\n      || account.email.toLowerCase().includes(val)\n      || this.companyCodeDetails[account.companyCode].toLowerCase().includes(val)\n      || account.role.toLowerCase().includes(val)\n    );\n  }\n\n  sortByUsername(array) {\n    array.sort(function (a, b) {\n      var nameA = a.username.toLowerCase();\n      var nameB = b.username.toLowerCase();\n      return nameA > nameB ? 1 : nameB > nameA ? -1 : 0;\n    });\n  }\n\n  async newAccount() {\n    const newAccountDialog = this.dialog.open(NewAccountDialog);\n    const result = await newAccountDialog.afterClosed().toPromise();\n    if (result) {\n      await this.accountService.createAccount(result).toPromise();\n      this.accounts.push(result);\n      this.sortByUsername(this.accounts);\n      this.filterQuery(this.filter.value);\n    }\n  }\n\n  async deleteAccount(accountToSend) {\n    const deleteAccountDialog = this.dialog.open(DeleteAccountDialog, {\n      data: {\n        username: accountToSend.username\n      }\n    });\n    const result = await deleteAccountDialog.afterClosed().toPromise();\n    if (result) {\n      try {\n        await this.accountService.deleteAccount(accountToSend).toPromise();\n        //TODO iterate over array may be to slow\n        this.accounts = this.accounts.filter(u => u.email != accountToSend.email);\n        this.filteredAccounts = this.filteredAccounts.filter(u => u.email != accountToSend.email);\n      } catch (e) { }\n    }\n  }\n\n  async blockAccount(accountToBlock) {\n    try {\n      accountToBlock.blocked = !accountToBlock.blocked;\n      const accountResponse = await this.accountService.updateAccount(accountToBlock).toPromise();\n\n      if ('account' in accountResponse) {\n        //TODO iterate over array may be to slow\n        this.accounts.forEach(u => {\n          if (u.email === accountResponse.account.email) {\n            u.blocked = accountResponse.account.blocked;\n          }\n        });\n        this.filteredAccounts.forEach(u => {\n          if (u.email === accountResponse.account.email) {\n            u.blocked = accountResponse.account.blocked;\n          }\n        });\n      }\n    } catch (e) { }\n  }\n\n  async editAccount(accountToEdit) {\n    try {\n      const editAccountDialog = this.dialog.open(EditAccountDialog, {\n        data: {\n          accountToEdit\n        }\n      });\n      const accountToSend = await editAccountDialog.afterClosed().toPromise();\n      if (accountToSend) {\n        try {\n          await this.accountService.updateAccount(accountToSend).toPromise();\n          let indexAccounts = this.accounts.findIndex((el) => el.email === accountToSend.email);\n          if (indexAccounts != -1) this.accounts[indexAccounts] = accountToSend\n          let indexFilteredAccounts = this.filteredAccounts.findIndex((el) => el.email === accountToSend.email);\n          if (indexFilteredAccounts != -1) this.filteredAccounts[indexFilteredAccounts] = accountToSend\n        } catch (e) { }\n      }\n\n      await this.accountService.updateAccount(accountToEdit).toPromise();\n    } catch (e) { }\n  }\n\n  async resetPassword(accountToReset) {\n    const resetPasswordDialog = this.dialog.open(ResetPasswordAdminDialog, {\n      data: {\n        username: accountToReset.username\n      }\n    });\n    const result = await resetPasswordDialog.afterClosed().toPromise();\n    if (result) {\n      await this.accountService.requestPasswordReset(accountToReset).toPromise();\n    }\n  }\n}\n\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{dictionaryService.get('ADMINAREA')}}\n                \n                \n                    \n                        {{dictionaryService.get('SEARCH')}}\n                        \n                        search\n                    \n                    \n                        {{dictionaryService.get('NEWACC')}}\n                        add\n                    \n                    \n                        {{dictionaryService.get('EXPAND')}}\n                        unfold_more\n                    \n                    \n                        {{dictionaryService.get('COLLAPSE')}}\n                        unfold_less\n                    \n                \n\n                \n                    \n                        \n                            \n                                \n                                    {{dictionaryService.get('NAME')}}: &nbsp;\n                                    {{listService.salutationsPerson.getDetailsForCode(account.salutationCode)}} {{account.firstName}} {{account.secondName}}\n                                \n                                \n                                    \n                                        {{dictionaryService.get('BLOCKED')}}\n                                    \n                                    account_circle\n                                \n                            \n\n                            \n                                {{dictionaryService.get('USRNAME')}}:\n                                        {{account.username}}\n                                {{dictionaryService.get('EMAIL')}}: {{account.email}}\n                                {{dictionaryService.get('COMCODE')}}:\n                                        {{companyCodeDetails[account.companyCode]}}\n                                {{dictionaryService.get('TEL')}}: {{account.phone}}\n                                {{dictionaryService.get('MOB')}}: {{account.mobile}}\n                                {{dictionaryService.get('ROLE')}}: {{account.role}}\n                            \n\n                            \n                                \n                                    edit\n                                    {{dictionaryService.get('CHNGACC')}}\n                                \n                                \n                                    delete\n                                    {{dictionaryService.get('DELUSR')}}\n                                \n                                \n                                    block\n                                    \n                                    {{dictionaryService.get('BLOCKUSR')}}\n                                    done\n                                    \n                                    {{dictionaryService.get('UNBLOCKUSR')}}\n                                \n                                \n                                    replay\n                                    {{dictionaryService.get('RESETPSWD')}}\n                                \n                            \n                        \n\n                    \n\n                \n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./admin.component.scss\n                \n                ::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: black !important;\n}\n\n::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\n  color: black !important;\n}\n\n.mat-input-element {\n  caret-color: black !important;\n}\n\nbutton.mat-button .mat-icon,\n.mat-button .mat-icon,\n.mat-raised-button .mat-icon,\n.mat-flat-button .mat-icon,\n.mat-stroked-button .mat-icon {\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n .search-part {\n  width: 800px;\n  display: flex;\n  align-items: baseline;\n}\n\nmat-form-field.mat-form-field {\n  font-size: 12px;\n  width: 300px;\n}\n\nbutton.mat-stroked-button {\n  margin-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{dictionaryService.get(\\'ADMINAREA\\')}}                                                                            {{dictionaryService.get(\\'SEARCH\\')}}                                                search                                                                {{dictionaryService.get(\\'NEWACC\\')}}                        add                                                                {{dictionaryService.get(\\'EXPAND\\')}}                        unfold_more                                                                {{dictionaryService.get(\\'COLLAPSE\\')}}                        unfold_less                                                                                                                                                                                                {{dictionaryService.get(\\'NAME\\')}}:                                      {{listService.salutationsPerson.getDetailsForCode(account.salutationCode)}} {{account.firstName}} {{account.secondName}}                                                                                                                                            {{dictionaryService.get(\\'BLOCKED\\')}}                                                                        account_circle                                                                                                                        {{dictionaryService.get(\\'USRNAME\\')}}:                                        {{account.username}}                                {{dictionaryService.get(\\'EMAIL\\')}}: {{account.email}}                                {{dictionaryService.get(\\'COMCODE\\')}}:                                        {{companyCodeDetails[account.companyCode]}}                                {{dictionaryService.get(\\'TEL\\')}}: {{account.phone}}                                {{dictionaryService.get(\\'MOB\\')}}: {{account.mobile}}                                {{dictionaryService.get(\\'ROLE\\')}}: {{account.role}}                                                                                                                            edit                                    {{dictionaryService.get(\\'CHNGACC\\')}}                                                                                                    delete                                    {{dictionaryService.get(\\'DELUSR\\')}}                                                                                                    block                                                                        {{dictionaryService.get(\\'BLOCKUSR\\')}}                                    done                                                                        {{dictionaryService.get(\\'UNBLOCKUSR\\')}}                                                                                                    replay                                    {{dictionaryService.get(\\'RESETPSWD\\')}}                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularMaterialModule.html":{"url":"modules/AngularMaterialModule.html","title":"module - AngularMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/angular-material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Ng module to import Angular Material \n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { DateAdapter, MatNativeDateModule, MatRippleModule, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../adapters/format-datepicker';\n\nconst materialModules = [\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatButtonToggleModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  MatBadgeModule,\n  MatGridListModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatSlideToggleModule,\n  NgxMatSelectSearchModule,\n];\n\n/**\n * Ng module to import Angular Material \n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ...materialModules\n  ],\n  exports: [\n    ...materialModules\n  ],\n  providers: [\n    {provide: DateAdapter, useClass: AppDateAdapter},\n    {provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS}\n  ]\n})\n\nexport class AngularMaterialModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The entry point of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The entry point of the application.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppDateAdapter.html":{"url":"injectables/AppDateAdapter.html","title":"injectable - AppDateAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppDateAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adapters/format-datepicker.ts\n        \n\n            \n                Description\n            \n            \n                Date adapter for Material Datepicker to show the date in DD-MM-YYYY format.\n\n            \n\n            \n                Extends\n            \n            \n                    NativeDateAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(date: Date, displayFormat: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adapters/format-datepicker.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    displayFormat\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDateFormats, NativeDateAdapter } from '@angular/material/core';\n\n/**\n * Date adapter for Material Datepicker to show the date in DD-MM-YYYY format.\n */\n @Injectable()\nexport class AppDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    if (displayFormat === 'input') {\n      var day = '' + date.getDate()\n      var month = '' + (date.getMonth() + 1)\n      var year = date.getFullYear();\n      if (month.length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomersComponent\n\nCustomersComponent\n\nAppModule -->\n\nCustomersComponent->AppModule\n\n\n\n\n\nDeleteAccountDialog\n\nDeleteAccountDialog\n\nAppModule -->\n\nDeleteAccountDialog->AppModule\n\n\n\n\n\nEditAccountDialog\n\nEditAccountDialog\n\nAppModule -->\n\nEditAccountDialog->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNewAccountDialog\n\nNewAccountDialog\n\nAppModule -->\n\nNewAccountDialog->AppModule\n\n\n\n\n\nNewISOComponent\n\nNewISOComponent\n\nAppModule -->\n\nNewISOComponent->AppModule\n\n\n\n\n\nPreselectionComponent\n\nPreselectionComponent\n\nAppModule -->\n\nPreselectionComponent->AppModule\n\n\n\n\n\nResetPasswordAdminDialog\n\nResetPasswordAdminDialog\n\nAppModule -->\n\nResetPasswordAdminDialog->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nResetPasswordUserDialog\n\nResetPasswordUserDialog\n\nAppModule -->\n\nResetPasswordUserDialog->AppModule\n\n\n\n\n\nSendCustomerConfirmationDialog\n\nSendCustomerConfirmationDialog\n\nAppModule -->\n\nSendCustomerConfirmationDialog->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAppModule -->\n\nAccountService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nAppModule -->\n\nCustomerService->AppModule\n\n\n\n\n\nDateService\n\nDateService\n\nAppModule -->\n\nDateService->AppModule\n\n\n\n\n\nDictionaryService\n\nDictionaryService\n\nAppModule -->\n\nDictionaryService->AppModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nAppModule -->\n\nErrorMessageService->AppModule\n\n\n\n\n\nFormValidationService\n\nFormValidationService\n\nAppModule -->\n\nFormValidationService->AppModule\n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nJSONValidationService\n\nJSONValidationService\n\nAppModule -->\n\nJSONValidationService->AppModule\n\n\n\n\n\nListService\n\nListService\n\nAppModule -->\n\nListService->AppModule\n\n\n\n\n\nRecaptchaService\n\nRecaptchaService\n\nAppModule -->\n\nRecaptchaService->AppModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nAppModule -->\n\nSearchService->AppModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nAppModule -->\n\nStorageService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CustomersComponent\n                        \n                        \n                            DeleteAccountDialog\n                        \n                        \n                            EditAccountDialog\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MainComponent\n                        \n                        \n                            NewAccountDialog\n                        \n                        \n                            NewISOComponent\n                        \n                        \n                            PreselectionComponent\n                        \n                        \n                            ResetPasswordAdminDialog\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ResetPasswordUserDialog\n                        \n                        \n                            SendCustomerConfirmationDialog\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            AuthService\n                        \n                        \n                            CustomerService\n                        \n                        \n                            DateService\n                        \n                        \n                            DictionaryService\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            FormValidationService\n                        \n                        \n                            HttpService\n                        \n                        \n                            JSONValidationService\n                        \n                        \n                            ListService\n                        \n                        \n                            RecaptchaService\n                        \n                        \n                            SearchService\n                        \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AngularMaterialModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { AppComponent } from \"../app.component\";\nimport { AdminComponent } from \"../components/admin/admin.component\";\nimport { LoginComponent } from \"../components/login/login.component\";\nimport { MainComponent } from \"../components/main/main.component\";\nimport { NewISOComponent } from \"../components/new-iso/new-iso.component\";\nimport { PreselectionComponent } from \"../components/preselection/preselection.component\";\nimport { ResetPasswordComponent } from \"../components/reset-password/reset-password.component\";\nimport { SettingsComponent } from \"../components/settings/settings.component\";\nimport { DeleteAccountDialog } from \"../dialogs/delete-account-dialog/delete-account.dialog\";\nimport { NewAccountDialog } from \"../dialogs/new-account-dialog/new-account.dialog\";\nimport { ResetPasswordAdminDialog } from \"../dialogs/reset-password-admin/reset-password-admin.dialog\";\nimport { ResetPasswordUserDialog } from \"../dialogs/reset-password-user/reset-password-user.dialog\";\nimport { SendCustomerConfirmationDialog } from \"../dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog\";\nimport { externalModules, services } from \"./modules\";\nimport { CustomersComponent } from '../components/customers/customers.component';\nimport { EditAccountDialog } from \"../dialogs/edit-account-dialog/edit-account.dialog\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    NewISOComponent,\n    SendCustomerConfirmationDialog,\n    PreselectionComponent,\n    LoginComponent,\n    SettingsComponent,\n    AdminComponent,\n    DeleteAccountDialog,\n    ResetPasswordUserDialog,\n    ResetPasswordAdminDialog,\n    NewAccountDialog,\n    EditAccountDialog,\n    ResetPasswordComponent,\n    CustomersComponent,\n  ],\n  imports: [\n    ...externalModules,\n  ],\n  providers: [\n    ...services\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CustomersComponent } from '../components/customers/customers.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { NewISOComponent } from '../components/new-iso/new-iso.component';\nimport { PreselectionComponent } from '../components/preselection/preselection.component';\nimport { ResetPasswordComponent } from '../components/reset-password/reset-password.component';\nimport { SettingsComponent } from '../components/settings/settings.component';\nimport { AuthGuardService } from '../services/auth/auth-guard.service';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'iso', component: NewISOComponent, canActivate: [AuthGuardService], data: { roles: ['USER', 'ADMIN'] } },\n  { path: 'preselection', component: PreselectionComponent, canActivate: [AuthGuardService], data: { roles: ['USER', 'ADMIN'] } },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuardService], data: { roles: ['USER', 'ADMIN'] } },\n  { path: 'customers', component: CustomersComponent, canActivate: [AuthGuardService], data: { roles: ['USER', 'ADMIN'] } },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuardService], data: { roles: ['ADMIN'] } },\n  { path: 'resetpassword', component: ResetPasswordComponent }\n];\n\n/**\n * Ng module to define routes\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkAccountLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, dictionaryService: DictionaryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-guard.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAccountLogin\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAccountLogin(route: ActivatedRouteSnapshot, url: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-guard.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot,RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { DictionaryService } from '../dictionary.service';\nimport { AuthService } from './auth.service';\n \n@Injectable()\nexport class AuthGuardService implements CanActivate {\n \n    constructor(private router: Router, private authService: AuthService, private dictionaryService: DictionaryService) {}\n \n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean|UrlTree {\n        return this.checkAccountLogin(route, state.url);\n    }\n\n    checkAccountLogin(route: ActivatedRouteSnapshot, url: any): boolean {\n        if (this.authService.isLoggedIn()) {\n          const accountRole = this.authService.account.role;\n          if (route.data.roles && route.data.roles.indexOf(accountRole) === -1) {\n            alert(this.dictionaryService.get('NOTALLOWED'));\n            this.router.navigate(['/login']);\n            return false;\n          }\n          return true;\n        }\n        alert(this.dictionaryService.get('NOTALLOWED'));\n        this.router.navigate(['/login']);\n        return false;\n      }\n \n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-interceptor.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest,\n              next: HttpHandler): Observable> {\n\n        const idToken = localStorage.getItem(\"id_token\");\n        if (idToken) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + idToken)\n            });\n            return next.handle(cloned);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkTokenExpiration\n                            \n                            \n                                getExpiration\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                setAccount\n                            \n                            \n                                    Public\n                                setSession\n                            \n                            \n                                startChecking\n                            \n                            \n                                stopChecking\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    account\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, httpService: HttpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkTokenExpiration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkTokenExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpiration\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedOut\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(identifier: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refreshToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAccount\n                        \n                        \n                    \n                \n            \n            \n                \nsetAccount(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSession(result: AccountJWT)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                AccountJWT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startChecking\n                        \n                        \n                    \n                \n            \n            \n                \nstartChecking(defaultInterval: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    defaultInterval\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopChecking\n                        \n                        \n                    \n                \n            \n            \n                \nstopChecking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n\n                \n                    \n                        getaccount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { environment } from '../../../environments/environment';\nimport { HttpService } from '../http.service';\nimport { AccountJWT } from 'src/app/interfaces/account';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  timer = null;\n\n  constructor(private http: HttpClient, private httpService: HttpService, private router: Router) { }\n\n  async login(identifier: string, password: string) {\n    let result = await this.httpService.request(this.http.post(`${environment.serverURL}/login`,\n      { account: { email: identifier, username: identifier, password: password } })).toPromise();\n    if (result) {\n      this.setSession(result)\n    }\n    return result;\n  }\n\n  public setSession(result: AccountJWT) {\n    if (result) {\n      const expiresAt = moment().add(result.expiresIn, 'milliseconds');\n      localStorage.setItem('id_token', result.idToken);\n      localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()));\n      this.setAccount(result.account);\n      return true;\n    }\n    return false;\n  }\n\n  logout() {\n    localStorage.clear();\n  }\n\n  public isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    const isLoggedOut = !this.isLoggedIn()\n    if (isLoggedOut && this.router.url !== '/login') this.router.navigate(['/login']);\n    return isLoggedOut;\n  }\n\n  setAccount(account) {\n    localStorage.setItem(\"account\", JSON.stringify(account));\n  }\n\n  get account() {\n    return JSON.parse(localStorage.getItem(\"account\"))\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem(\"expires_at\");\n    const expiresAt = JSON.parse(expiration);\n    return moment(expiresAt);\n  }\n\n  //Call refreshToken every 10 minutes\n  startChecking(defaultInterval = 10) {\n    this.timer = setInterval(this.checkTokenExpiration.bind(this), defaultInterval * 60 * 1000);\n  }\n\n  stopChecking() {\n    clearInterval(this.timer);\n  }\n\n  async refreshToken() {\n    return await this.httpService.request(this.http.put(`${environment.serverURL}/login`, this.account)).toPromise();\n  }\n\n  async checkTokenExpiration() {\n    const exp = this.getExpiration();\n    const now = moment();\n    //If JWT expires in  update it\n    if (exp.diff(now, 'minutes') > 0 && exp.diff(now, 'minutes') \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CodeDetails.html":{"url":"interfaces/CodeDetails.html","title":"interface - CodeDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CodeDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/list.ts\n        \n\n            \n                Description\n            \n            \n                Code details fileds:\ncode: unique identifier also used in SAP system\ndetails: details showed in browser\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        details\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CodeDetails{\n    code: string, \n    details: string,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/customer/customer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructObject\n                            \n                            \n                                getCustomers\n                            \n                            \n                                sendCustomer\n                            \n                            \n                                sendCustomerRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, http: HttpClient, authService: AuthService, dateService: DateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/customer/customer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            constructObject\n                        \n                        \n                    \n                \n            \n            \n                \nconstructObject(generalInformation, contactInformation, payment, applicant, upload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/customer/customer.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generalInformation\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactInformation\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    applicant\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    upload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { companyCode: any; legalForm: any; interfaceNumber: any; salutation: any; additionalName: any; s...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCustomers\n                        \n                        \n                    \n                \n            \n            \n                \ngetCustomers(email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/customer/customer.service.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendCustomer\n                        \n                        \n                    \n                \n            \n            \n                \nsendCustomer(customer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/customer/customer.service.ts:21\n                \n            \n\n\n            \n                \n                    Sends customer to the server as JSON.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object sapCustomer: SharedCustomer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Response observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendCustomerRequest\n                        \n                        \n                    \n                \n            \n            \n                \nsendCustomerRequest(customer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/customer/customer.service.ts:30\n                \n            \n\n\n            \n                \n                    Sends customer creation request to the server as JSON.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object sapCustomer: SharedCustomer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Response observable.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth/auth.service';\nimport { DateService } from '../date.service';\nimport { HttpService } from '../http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private httpService: HttpService, private http: HttpClient, private authService: AuthService,\n    private dateService: DateService) { }\n\n  /**\n   * Sends customer to the server as JSON.\n   * @param customer Object sapCustomer: SharedCustomer\n   * @returns Response observable.\n   */\n  sendCustomer(customer) {\n    return this.httpService.request(this.http.post(`${environment.serverURL}/customers`, { customer }))\n  }\n\n  /**\n   * Sends customer creation request to the server as JSON.\n   * @param customer Object sapCustomer: SharedCustomer\n   * @returns Response observable.\n   */\n  sendCustomerRequest(customer) {\n    return this.httpService.request(this.http.post(`${environment.serverURL}/customers/request`, { customer }))\n  }\n\n  getCustomers(email) {\n    return this.httpService.request(this.http.get(`${environment.serverURL}/customers?email=${email}`));\n  }\n\n  constructObject(generalInformation, contactInformation, payment, applicant, upload) {\n    const data = {\n      companyCode: this.authService.account.companyCode ?? '',\n\n      //Shared forms\n\n      //General information\n      legalForm: generalInformation?.get('legalForm')?.value?.code ?? '',\n      interfaceNumber: generalInformation?.get('interfaceNumber')?.value ?? '',\n      salutation: generalInformation?.get('salutation')?.value?.code ?? '0000',\n      additionalName: generalInformation?.get(\"additionalName\")?.value ?? '',\n\n      //Address information\n      street: contactInformation?.get(\"street\")?.value ?? '',\n      houseNumber: contactInformation?.get(\"houseNumber\")?.value ?? '',\n      mailbox: contactInformation?.get(\"mailbox\")?.value ?? '',\n      zipMailbox: contactInformation?.get(\"zipMailbox\")?.value ?? '',\n      zip: contactInformation?.get(\"zip\")?.value ?? '',\n      city: contactInformation?.get(\"city\")?.value ?? '',\n      country: contactInformation?.get(\"country\")?.value?.code ?? '',\n      phone: contactInformation?.get(\"phone\")?.value ?? '',\n      fax: contactInformation?.get(\"fax\")?.value ?? '',\n      mobile: contactInformation?.get(\"mobile\")?.value ?? '',\n      email: contactInformation?.get(\"email\")?.value ?? '',\n\n      //Payment\n      taxId: payment?.get(\"taxId\")?.value ?? '',\n      vatId: payment?.get(\"vatId\")?.value ?? '',\n      industryFieldCode: payment?.get(\"industryFieldCode\")?.value?.code ?? '',\n      industryField: payment?.get(\"industryField\")?.value?.code ?? '',\n      iban: payment?.get(\"iban\")?.value ?? '',\n      bic: payment?.get(\"bic\")?.value ?? '',\n      bank: payment?.get(\"bank\")?.value ?? '',\n      paymentTerm: payment?.get(\"paymentTerm\")?.value?.code ?? '',\n      notes: payment?.get(\"notes\")?.value ?? '',\n      //Uploaded files\n      files: upload?.get(\"files\")?.value,\n\n      //Person forms\n      title: generalInformation?.get('title')?.value?.code ?? '',\n      firstName: generalInformation?.get('firstName')?.value ?? '',\n      secondName: generalInformation?.get('secondName')?.value ?? '',\n      birthDate: generalInformation?.get(\"birthDate\")?.value == null ? '' :\n        this.dateService.formatDate(new Date(generalInformation?.get(\"birthDate\").value)),\n\n      //Person debit forms\n      agb: payment?.get('agb')?.value ?? '',\n      creditLimit: payment?.get('creditLimit')?.value ?? '',\n\n      //Organization forms\n      orgaPersons: generalInformation?.get('orgaPersons')?.value ?? '',\n\n      //Organization debit forms\n\n      //Applicant 0\n      applicantSalutation0: applicant?.get('salutation')?.value?.code ?? '0000',\n      applicantTitle0: applicant?.get('title')?.value?.code ?? '',\n      applicantFirstName0: applicant?.get('firstName')?.value ?? '',\n      applicantSecondName0: applicant?.get('secondName')?.value ?? '',\n      applicantBirthDate0: applicant?.get('birthDate')?.value == null ? '' :\n        this.dateService.formatDate(new Date(applicant?.get(\"birthDate\").value)),\n      applicantPhone0: applicant?.get('phone')?.value ?? '',\n      applicantMobile0: applicant?.get('mobile')?.value ?? '',\n      applicantEmail0: applicant?.get('email')?.value ?? '',\n\n      //Applicant 1\n      applicantSalutation1: applicant?.get('salutation1')?.value?.code ?? '0000',\n      applicantTitle1: applicant?.get('title1')?.value?.code ?? '',\n      applicantFirstName1: applicant?.get('firstName1')?.value ?? '',\n      applicantSecondName1: applicant?.get('secondName1')?.value ?? '',\n      applicantBirthDate1: applicant?.get('birthDate1')?.value == null ? '' :\n        this.dateService.formatDate(new Date(applicant?.get(\"birthDate1\").value)),\n      applicantPhone1: applicant?.get('phone1')?.value ?? '',\n      applicantMobile1: applicant?.get('mobile1')?.value ?? '',\n      applicantEmail1: applicant?.get('email1')?.value ?? '',\n\n      //Applicant 2\n      applicantSalutation2: applicant?.get('salutation2')?.value?.code ?? '0000',\n      applicantTitle2: applicant?.get('title2')?.value?.code ?? '',\n      applicantFirstName2: applicant?.get('firstName2')?.value ?? '',\n      applicantSecondName2: applicant?.get('secondName2')?.value ?? '',\n      applicantBirthDate2: applicant?.get('birthDate2')?.value == null ? '' :\n        this.dateService.formatDate(new Date(applicant?.get(\"birthDate2\").value)),\n      applicantPhone2: applicant?.get('phone2')?.value ?? '',\n      applicantMobile2: applicant?.get('mobile2')?.value ?? '',\n      applicantEmail2: applicant?.get('email2')?.value ?? '',\n\n    };\n    data.notes += payment?.get(\"sepa\")?.value ? ' *SEPA-Mandat*' : ''\n    return data;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomersComponent.html":{"url":"components/CustomersComponent.html","title":"component - CustomersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/customers/customers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-customers\n            \n\n            \n                styleUrls\n                ./customers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./customers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordion\n                            \n                            \n                                companyCodeDetails\n                            \n                            \n                                customers\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                filter\n                            \n                            \n                                filteredCustomers\n                            \n                            \n                                    Public\n                                listService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchCustomers\n                            \n                            \n                                filterQuery\n                            \n                            \n                                initCustomerSearch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sortByTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionaryService: DictionaryService, errorMessageService: ErrorMessageService, customerService: CustomerService, listService: ListService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/customers/customers.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listService\n                                                  \n                                                        \n                                                                        ListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchCustomers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchCustomers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/customers/customers.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterQuery\n                        \n                        \n                    \n                \n            \n            \n                \nfilterQuery(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/customers/customers.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initCustomerSearch\n                        \n                        \n                    \n                \n            \n            \n                \ninitCustomerSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/customers/customers.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/customers/customers.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortByTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \nsortByTimestamp(array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/customers/customers.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accordion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAccordion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('accordion')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyCodeDetails\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customers\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredCustomers\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/customers/customers.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { CustomerService } from 'src/app/services/customer/customer.service';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { ListService } from 'src/app/services/list.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers;\n  filteredCustomers;\n  companyCodeDetails;\n  filter: FormControl = new FormControl('');\n\n  @ViewChild('accordion') accordion: MatAccordion;\n\n  constructor(public dictionaryService: DictionaryService, public errorMessageService: ErrorMessageService,\n    private customerService: CustomerService, public listService: ListService, private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.fetchCustomers();\n    this.initCustomerSearch();\n  }\n\n  async fetchCustomers() {\n    try {\n      const email = this.authService.account.email;\n      this.customers = await this.customerService.getCustomers(email).toPromise();\n      this.customers.forEach(customer => {\n        let datetime = moment(customer.datetime);\n        if (datetime.isSame(new Date(), \"day\")){\n          customer.datetime = moment(customer.datetime).fromNow();\n        } else {\n          customer.datetime = moment(customer.datetime).format('DD/MM/YYYY, hh:mm')\n        }\n      });\n      this.sortByTimestamp(this.customers);\n      this.filteredCustomers = [...this.customers];\n    } catch (e) {\n      console.error(e.stack);\n    }\n  }\n\n  initCustomerSearch() {\n    this.filter.valueChanges.subscribe(val => {\n      this.filterQuery(val);\n    });\n  }\n\n  filterQuery(val) {\n    var val = val.toLowerCase();\n    this.filteredCustomers = this.customers.filter(customer =>\n      customer.datetime.toLowerCase().includes(val)\n      || customer.sapID.toLowerCase().includes(val)\n    );\n  }\n\n  sortByTimestamp(array) { \n    array.sort(function (a, b) {\n      var timestampA = moment(a.datetime).unix();\n      var timestampB = moment(b.datetime).unix();\n      return timestampA > timestampB ? 1 : timestampB > timestampA ? -1 : 0;\n    });\n    \n  }\n\n}\n\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{dictionaryService.get('CUSS')}}\n                \n                \n                    \n                        {{dictionaryService.get('SEARCH')}}\n                        \n                        search\n                    \n                    \n                        {{dictionaryService.get('EXPAND')}}\n                        unfold_more\n                    \n                    \n                        {{dictionaryService.get('COLLAPSE')}}\n                        unfold_less\n                    \n                \n\n                \n                    \n                        \n                            \n                                \n                                    {{dictionaryService.get('SAPID')}}: &nbsp;\n                                    {{customer.sapID}}\n                                \n                                \n                                    \n                                    {{customer.datetime}}\n                                \n                            \n                            \n                            \n                                \n                                    {{dictionaryService.get('CUSTYPE')}}:\n                                    \n                                    \n                                        {{dictionaryService.get('ORG')}} -\n                                        {{dictionaryService.get('DEB')}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('SAL')}}:\n                                    \n                                    \n                                        {{listService.salutationsOrganization.getDetailsForCode(customer.customer.data.salutation)}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('COMPERS')}}:\n                                    \n                                    \n                                        {{customer.customer.data.orgaPersons}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('LEGFRM')}}:\n                                    \n                                    \n                                        {{listService.legalFormsOrganization.getDetailsForCode(customer.customer.data.legalForm)}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('CUSTYPE')}}:\n                                    \n                                    \n                                        {{dictionaryService.get('ORG')}} -\n                                        {{dictionaryService.get('DEB')}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('SAL')}}:\n                                    \n                                    \n                                        {{listService.salutationsOrganization.getDetailsForCode(customer.customer.data.salutation)}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('TITLE')}}:\n                                    \n                                    \n                                        {{listService.titles.getDetailsForCode(customer.customer.data.title)}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('FNAME')}}:\n                                    \n                                    \n                                        {{customer.customer.data.firstName}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('SNAME')}}:\n                                    \n                                    \n                                        {{customer.customer.data.secondName}}\n                                    \n                                \n                                \n                                    {{dictionaryService.get('LEGFRM')}}:\n                                    \n                                    \n                                        {{listService.legalFormsPerson.getDetailsForCode(customer.customer.data.legalForm)}}\n\n                                    \n                                \n                            \n                        \n                        \n\n                    \n\n                \n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./customers.component.scss\n                \n                ::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n    color: black !important;\n  }\n  \n  ::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\n    color: black !important;\n  }\n  \n  .mat-input-element {\n    caret-color: black !important;\n  }\n  \n  button.mat-button .mat-icon,\n  .mat-button .mat-icon,\n  .mat-raised-button .mat-icon,\n  .mat-flat-button .mat-icon,\n  .mat-stroked-button .mat-icon {\n    vertical-align: middle;\n    font-size: 1.5em;\n  }\n  \n   .search-part {\n    width: 800px;\n    display: flex;\n    align-items: baseline;\n  }\n  \n  mat-form-field.mat-form-field {\n    font-size: 12px;\n    width: 300px;\n  }\n  \n  button.mat-stroked-button {\n    margin-left: 10px;\n  }\n\n  td {\n    padding-right: 20px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{dictionaryService.get(\\'CUSS\\')}}                                                                            {{dictionaryService.get(\\'SEARCH\\')}}                                                search                                                                {{dictionaryService.get(\\'EXPAND\\')}}                        unfold_more                                                                {{dictionaryService.get(\\'COLLAPSE\\')}}                        unfold_less                                                                                                                                                                                                {{dictionaryService.get(\\'SAPID\\')}}:                                      {{customer.sapID}}                                                                                                                                        {{customer.datetime}}                                                                                                                                                                                        {{dictionaryService.get(\\'CUSTYPE\\')}}:                                                                                                                {{dictionaryService.get(\\'ORG\\')}} -                                        {{dictionaryService.get(\\'DEB\\')}}                                                                                                                                        {{dictionaryService.get(\\'SAL\\')}}:                                                                                                                {{listService.salutationsOrganization.getDetailsForCode(customer.customer.data.salutation)}}                                                                                                                                        {{dictionaryService.get(\\'COMPERS\\')}}:                                                                                                                {{customer.customer.data.orgaPersons}}                                                                                                                                        {{dictionaryService.get(\\'LEGFRM\\')}}:                                                                                                                {{listService.legalFormsOrganization.getDetailsForCode(customer.customer.data.legalForm)}}                                                                                                                                                                                                {{dictionaryService.get(\\'CUSTYPE\\')}}:                                                                                                                {{dictionaryService.get(\\'ORG\\')}} -                                        {{dictionaryService.get(\\'DEB\\')}}                                                                                                                                        {{dictionaryService.get(\\'SAL\\')}}:                                                                                                                {{listService.salutationsOrganization.getDetailsForCode(customer.customer.data.salutation)}}                                                                                                                                        {{dictionaryService.get(\\'TITLE\\')}}:                                                                                                                {{listService.titles.getDetailsForCode(customer.customer.data.title)}}                                                                                                                                        {{dictionaryService.get(\\'FNAME\\')}}:                                                                                                                {{customer.customer.data.firstName}}                                                                                                                                        {{dictionaryService.get(\\'SNAME\\')}}:                                                                                                                {{customer.customer.data.secondName}}                                                                                                                                        {{dictionaryService.get(\\'LEGFRM\\')}}:                                                                                                                {{listService.legalFormsPerson.getDetailsForCode(customer.customer.data.legalForm)}}                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/date.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines a service for Date operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/date.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/date.service.ts:18\n                \n            \n\n\n            \n                \n                    Formats date to YYYY-MM-DD format.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JavaScript Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Formatted date.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Defines a service for Date operations.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor() { }\n\n  /**\n   * Formats date to YYYY-MM-DD format.\n   * @param date JavaScript Date\n   * @returns Formatted date.\n   */\n  formatDate(date: Date) {\n    var month = '' + (date.getMonth() + 1)\n    var day = '' + date.getDate()\n    var year = date.getFullYear();\n    if (month.length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountDialog.html":{"url":"components/DeleteAccountDialog.html","title":"component - DeleteAccountDialog","body":"\n                   \n\n\n\n\n\n  Components\n  DeleteAccountDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/delete-account-dialog/delete-account.dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account\n            \n\n            \n                styleUrls\n                ./delete-account.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-account.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onYesClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data, dictionaryService: DictionaryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/delete-account-dialog/delete-account.dialog.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/delete-account-dialog/delete-account.dialog.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/delete-account-dialog/delete-account.dialog.ts:28\n                \n            \n\n\n            \n                \n                    Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \nonYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/delete-account-dialog/delete-account.dialog.ts:21\n                \n            \n\n\n            \n                \n                    Click on the \"yes\" button triggers this method. The method closes the dialog and returns \"true\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/delete-account-dialog/delete-account.dialog.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/delete-account-dialog/delete-account.dialog.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\n\n@Component({\n  selector: 'app-delete-account',\n  templateUrl: './delete-account.dialog.html',\n  styleUrls: ['./delete-account.dialog.scss']\n})\nexport class DeleteAccountDialog implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data, \n  public dictionaryService: DictionaryService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Click on the \"yes\" button triggers this method. The method closes the dialog and returns \"true\" value. \n   */\n  onYesClick() {\n    this.dialogRef.close(true);\n  }\n\n  /**\n   * Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n   */\n  onNoClick() {\n    this.dialogRef.close(false);\n  }\n\n}\n\n    \n\n    \n        \n    {{dictionaryService.get('DELUSR1')}}{{data.username}}{{dictionaryService.get('DELUSR2')}}\n\n    \n        \n            \n                done\n                {{dictionaryService.get('DELUSR')}}\n            \n        \n        \n            \n                cancel\n                {{dictionaryService.get('CAN')}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./delete-account.dialog.scss\n                \n                button.mat-button .mat-icon,\n.mat-button .mat-icon,\n.mat-raised-button .mat-icon,\n.mat-flat-button .mat-icon,\n.mat-stroked-button .mat-icon {\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{dictionaryService.get(\\'DELUSR1\\')}}{{data.username}}{{dictionaryService.get(\\'DELUSR2\\')}}                                        done                {{dictionaryService.get(\\'DELUSR\\')}}                                                        cancel                {{dictionaryService.get(\\'CAN\\')}}                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DictionaryService.html":{"url":"injectables/DictionaryService.html","title":"injectable - DictionaryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DictionaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dictionary.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines a map of labels and texts used in HTML.\nThere are two versions of mappings: one for English and one for German.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLanguage\n                            \n                            \n                                dictionary\n                            \n                            \n                                dictionaryDE\n                            \n                            \n                                dictionaryEN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                switchLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dictionary.service.ts:320\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(abbreviation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dictionary.service.ts:336\n                \n            \n\n\n            \n                \n                    Takes an abbreviation and returns the corresponding value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abbreviation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Map key \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Mapping. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchLanguage\n                        \n                        \n                    \n                \n            \n            \n                \nswitchLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dictionary.service.ts:327\n                \n            \n\n\n            \n                \n                    Switches language between English and German.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DE'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/dictionary.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    ['DE', this.dictionaryDE],\n    ['EN', this.dictionaryEN]\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/dictionary.service.ts:317\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionaryDE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    ['LOGIN', 'Anmeldung'],\n    ['HELLO', 'Hallo, '],\n    ['ID', 'E-Mail oder Benutzername'],\n    ['PSWDFOG', 'Passwort vergessen?'],\n    ['PSWDWILLRES', 'Eine Bestätigungsmail mit weiteren Anweisungen wird an Ihre E-Mail-Adresse gesendet.'],\n    \n    ['NEWCUS', 'Neuer Kunde'],\n    ['CUSS', 'Kunden'],\n    ['ACC', 'Konto'],\n    ['LANG', 'Sprache'],\n    ['LOGOUT', 'Abmelden'],\n    ['ADMINAREA', 'Admin-Bereich'],\n    \n    ['USRNAME', 'Benutzername'],\n    ['PSWD', 'Passwort'],\n    ['USR', 'Benutzer'],\n    ['ADM', 'Administrator'],\n    ['CREATE', 'Anlegen'],\n\n    ['RESETPSWDTEXT', `Wenn Sie Ihr Passwort vergessen haben, können Sie es hier zurücksetzen. \n    Geben Sie bitte Ihre registrierte E-Mail Adresse ein und drücken Sie “Passwort zurücksetzen”. \n    Danach wird Ihnen eine E-Mail mit einem Link zugesandt.`],\n\n    ['RESETPSWD', 'Passwort zurücksetzen'],\n    ['BLOCKUSR', 'Sperren'],\n    ['UNBLOCKUSR', 'Entsperren'],\n    ['DELUSR', 'Löschen'],\n    ['BLOCKED', 'Gesperrt'],\n    ['EXPAND', 'Alle ausklappen'],\n    ['COLLAPSE', 'Alle zuklappen'],\n    ['SEARCH', 'Suche'],\n    ['ROLE', 'Rolle'],\n\n    ['ACCSET', 'Kontoeinstellungen'],\n    ['SECSET', 'Sicherheitseinstellungen'],\n\n    ['NEWACC', 'Konto anlegen'],\n    ['CHNGACC', 'Konto ändern'],\n    ['CHNG', 'Ändern'],\n    ['CONFIRM', 'Bestätigen'],\n    ['PSWDCONF', 'Passwortbestätigung'],\n    ['PSWDOLD', 'Altes Passwort'],\n    ['PSWDOLDNMATCH', 'Das alte Passwort ist falsch.'],\n    ['PSWDNMATCH', 'Die Passwörter stimmen nicht überein.'],\n    ['IDUSED', 'Diese E-Mail-Adresse oder Benutzername wird bereits verwendet.'],\n    ['IDINC', 'Ihr Benutzername/E-Mail-Adresse oder Ihr Passwort sind falsch.'],\n    ['USRISBL', 'Der Benutzer wurde gesperrt.'],\n    ['USRISUN', 'Der Benutzer wurde entsperrt.'],\n    ['USRISDEL', 'Der Benutzer wurde gelöscht.'],\n    ['PSWDISRES', 'Das Passwort wurde zurückgesetzt.'],\n    \n    ['NOTALLOWED', 'Sie sind nicht berechtigt auf diese Seite zuzugreifen. Sie werden zur Login-Seite weitergeleitet.'],\n\n    ['SAPID', 'SAP ID'],\n    ['HASH', 'Hash'],\n    ['DATE', 'Datum'],\n\n    ['APPLY', 'Übernehmen'],\n    ['CHNGPSWD', 'Passwort ändern'],\n\n    ['YES', 'Ja'],\n    ['NO', 'Nein'],\n    ['CAN', 'Abbrechen'],\n    \n    ['BCK', 'Zurück'],\n    ['NXT', 'Weiter'],\n    ['SND', 'Senden'],\n    ['ADDFILE', 'Datei hinzufügen'],\n\n    ['CUSTYPE', 'Kundentyp'],\n    ['PER', 'Person'],\n    ['ORG', 'Organisation'],\n    ['PERORG', 'Person / Organization'],\n    ['DEB', 'Debitor'],\n    ['CRE', 'Kreditor'],\n    ['DEBCRE', 'Debitor / Kreditor'],\n    ['COMCODE', 'Buchungskreis'],\n\n    ['LEGFRM', 'Rechtsform'],\n    ['INTERFNUM', 'Schnittstellennummer'],\n\n    ['CONTACT', 'Kontaktdaten'],\n    ['GENINF', 'Allgemeine Informationen'],\n    ['CONTINF', 'Kontaktinformationen'],\n    ['PAYINF', 'Zahlungsinformationen'],\n    ['ATTACH', 'Datei anhängen'],\n\n    ['NAME', 'Name'],\n    ['ADDR', 'Anschrift'],\n    //['ADNAME', 'Zus. Namensangaben (Name 2)'],\n    ['ADNAME', 'Name 2'],\n    ['BRTH', 'Geburtsdatum'],\n    ['STR', 'Straße'],\n    ['HNO', 'Hnr.'],\n    ['MAILBX', 'Postfach'],\n    ['MAILBXZIP', 'Postfach PLZ'],\n    ['ZIP', 'PLZ'],\n    ['CITY', 'Ort'],\n    ['COU', 'Land'],\n    ['TEL', 'Telefonnummer'],\n    ['FAX', 'Telefax'],\n    ['MOB', 'Mobiltelefonnummer'],\n    ['EMAIL', 'E-Mail-Adresse'],\n\n    ['TAX', 'Steuernummer'],\n    ['VAT', 'Umsatzsteuer-ID'],\n    ['INDFI', 'Branche'],\n    ['INDFICODE', 'Branchencode'],\n    ['HSEPA', 'Lieferant hat SEPA-Lastschrift'],\n    ['GSEPA', 'SEPA-Lastschrift erteilen'],\n    ['RSEPA', 'SEPA-Lastschrift anfordern'],\n    ['IBA', 'IBAN'],\n    ['PAYTERMS', 'Zahlungsbedingung'],\n    ['CRELMT', 'Kreditlimit'],\n    ['REMARKS', 'Bemerkungsfeld'],\n    ['CHLEFT', ' Zeichen verbleibend'],\n\n    ['APP', 'Antragstellerinformationen'],\n    ['APP1', '1. Antragsteller'],\n    ['APP2', '2. Antragsteller'],\n   \n    ['TITLE', 'Titel'],\n    ['SAL', 'Anrede'],\n    ['COMPERS', 'Firma / Personen (Name 1)'],\n\n    ['FNAME', 'Vorname'],\n    ['SNAME', 'Nachname'],\n    \n    ['ENTEMAIL', 'Bitte geben Sie Ihre E-Mail-Adresse ein.'],\n    ['SUBMIT', 'Einreichen'],\n    ['SNDCUS', 'Kunde senden'],\n    ['SNDDIR', 'Direkt senden'],\n    ['SNDCONFEMAIL', 'Bestätigungs-E-Mail senden'],\n\n    ['DELUSR1', \"\"],\n    ['DELUSR2', \" löschen?\"],\n    ['RESETPSWD1', \"Passwort von \"],\n    ['RESETPSWD2', \" zurücksetzen?\"],\n    ['CUSISSND', 'Der Kunde wurde gesendet.'],\n    ['CUSCONFISSND', 'Die Bestätigungs-E-Mail wurde an Ihre E-Mail-Adresse gesendet.'],\n    ['USRISCR', 'Der Benutzer wurde angelegt.'],\n    ['USRISUPD', 'Der Benutzer wurde geändert.'],\n    ['USRISNUPD', 'Der Benutzer wurde nicht geändert.'],\n\n    ['SUC', 'Erfolg!'],\n    ['ERR', 'Fehler!'],\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/dictionary.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionaryEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n\n    ['LOGIN', 'Sign in'],\n    ['USRNAME', 'Username'],\n    ['PSWD', 'Password'],\n    ['ID', 'Email or username'],\n    ['PSWDFOG', 'Forgot password?'],\n    ['PSWDWILLRES', 'A confirmation e-mail with further instructions will be sent to your e-mail address.'],\n    \n    ['NOTALLOWED', 'You are not allowed to view this page or take an action. You are redirected to enter the login page.'],\n    \n    ['SAPID', 'SAP ID'],\n    ['HASH', 'Hash'],\n    ['DATE', 'Date'],\n\n    ['APPLY', 'Apply'],\n    ['CHNGPSWD', 'Change password'],\n    ['NEWACC', 'Create account'],\n    ['CHNGACC', 'Change account'],\n    ['CHNG', 'Change'],\n    ['CONFIRM', 'Confirm'],\n    ['PSWDCONF', 'Password confirmation'],\n    ['PSWDOLD', 'Old password'],\n    \n    ['CREATE', 'Create'],\n    ['USR', 'Account'],\n    ['ADM', 'Administrator'],\n\n    ['HELLO', 'Hello, '],\n    ['NEWCUS', 'New customer'],\n    ['CUSS', 'Customer'],\n    ['LOGOUT', 'Sign out'],\n    ['ACC', 'Account'],\n    ['LANG', 'Language'],\n    ['ADMINAREA', 'Admin area'],\n    ['ROLE', 'Role'],\n\n    ['ACCSET', 'Account settings'],\n    ['SECSET', 'Security settings'],\n    \n    ['RESETPSWDTEXT', `If you forget your password, you can request to reset your password. \n    Please enter your registered email address and press “Reset password”. \n    We will send you an email containing a link enabling you to create a new password.`],\n\n    ['RESETPSWD', 'Reset password'],\n    ['BLOCKUSR', 'Block'],\n    ['UNBLOCKUSR', 'Unblock'],\n    ['DELUSR', 'Delete'],\n    ['BLOCKED', 'Blocked'],\n    ['EXPAND', 'Expand all'],\n    ['COLLAPSE', 'Collapse all'],\n    ['SEARCH', 'Search'],\n\n    ['YES', 'Yes'],\n    ['NO', 'No'],\n    ['CAN', 'Cancel'],\n\n    ['BCK', 'Back'],\n    ['NXT', 'Next'],\n    ['SND', 'Send'],\n    ['ADDFILE', 'Add file'],\n    \n    ['CUSTYPE', 'Customer type'],\n    ['PER', 'Person'],\n    ['ORG', 'Organization'],\n    ['PERORG', 'Person / Organization'],\n    ['DEB', 'Debitor'],\n    ['CRE', 'Creditor'],\n    ['DEBCRE', 'Debitor / Creditor'],\n    ['COMCODE', 'Comapany code'],\n    \n    ['LEGFRM', 'Legal form'],\n    \n    ['INTERFNUM', 'Interface number'],\n    \n    ['CONTACT', 'Contact'],\n    ['GENINF', 'General information'],\n    ['CONTINF', 'Contact information'],\n    ['PAYINF', 'Payment information'],\n    ['ATTACH', 'Attach file'],\n\n    ['NAME', 'Name'],\n    ['ADDR', 'Address'],\n    //['ADNAME', 'Additional name (Name 2)'],\n    ['ADNAME', 'Name 2'],\n    ['BRTH', 'Birth date'],\n    ['STR', 'Street'],\n    ['HNO', 'House no.'],\n    ['MAILBX', 'Mailbox'],\n    ['MAILBXZIP', 'Mailbox ZIP'],\n    ['ZIP', 'ZIP'],\n    ['CITY', 'City'],\n    ['COU', 'Country'],\n    ['TEL', 'Phone'],\n    ['FAX', 'Fax'],\n    ['MOB', 'Mobile phone'],\n    ['EMAIL', 'Email address'],\n\n    ['TAX', 'Tax ID'],\n    ['VAT', 'VAT ID'],\n    ['INDFI', 'Industry field'],\n    ['INDFICODE', 'Industry field code'],\n    ['HSEPA', 'Supplier has SEPA direct debit'],\n    ['GSEPA', 'Grant SEPA direct debit'],\n    ['RSEPA', 'Request SEPA direct debit'],\n    ['IBA', 'IBAN'],\n    ['CRELMT', 'Credit limit'],\n    ['PAYTERMS', 'Terms of payment'],\n    ['REMARKS', 'Remarks field'],\n    ['CHLEFT', ' characters left'],\n\n    ['APP', 'Applicant information'],\n    ['APP1', 'Applicant 1'],\n    ['APP2', 'Applicant 2'],\n\n    ['TITLE', 'Title'],\n    ['SAL', 'Salutation'],\n    ['COMPERS', 'Company / Persons (Name 1)'],\n    ['FNAME', 'Name'],\n    ['SNAME', 'Surname'],\n    \n    ['ENTEMAIL', 'Please enter your email address.'],\n    ['SUBMIT', 'Submit'],\n    ['SNDCUS', 'Send customer'],\n    ['SNDDIR', 'Send directly'],\n    ['SNDCONFEMAIL', 'Send confirmation email'],\n    ['DELUSR1', \"Delete \"],\n    ['DELUSR2', \"?\"],\n    ['RESETPSWD1', \"Reset password for \"],\n    ['RESETPSWD2', \"?\"],\n\n    ['USRISNUPD', 'The account was not updated.'],\n\n    ['SUC', 'Success!'],\n    ['ERR', 'Error!'],\n\n    //Messages\n    ['USRISCR', 'The account was created.'],\n    ['USRISUPD', 'The account was updated.'],\n    ['CUSISSND', 'The customer was sent.'],\n    ['CUSCONFISSND', 'The confirmation email was sent to your email address.'],\n    ['USRISBL', 'The account was blocked.'],\n    ['USRISUN', 'The account was unblocked.'],\n    ['USRISDEL', 'The account was deleted.'],\n    ['PSWDISRES', 'The password was reset.'],\n\n    //Errors\n    ['PSWDNMATCH', 'The passwords do not match.'],\n    ['PSWDOLDNMATCH', 'The old password does not match.'],\n    ['IDUSED', 'This email address or username is already being used.'],\n    ['IDINC', 'Your username/email or password are incorrect.'],\n\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/dictionary.service.ts:163\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Defines a map of labels and texts used in HTML.\n * There are two versions of mappings: one for English and one for German.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictionaryService {\n\n  currentLanguage: string = 'DE';\n\n  dictionaryDE = new Map([\n    ['LOGIN', 'Anmeldung'],\n    ['HELLO', 'Hallo, '],\n    ['ID', 'E-Mail oder Benutzername'],\n    ['PSWDFOG', 'Passwort vergessen?'],\n    ['PSWDWILLRES', 'Eine Bestätigungsmail mit weiteren Anweisungen wird an Ihre E-Mail-Adresse gesendet.'],\n    \n    ['NEWCUS', 'Neuer Kunde'],\n    ['CUSS', 'Kunden'],\n    ['ACC', 'Konto'],\n    ['LANG', 'Sprache'],\n    ['LOGOUT', 'Abmelden'],\n    ['ADMINAREA', 'Admin-Bereich'],\n    \n    ['USRNAME', 'Benutzername'],\n    ['PSWD', 'Passwort'],\n    ['USR', 'Benutzer'],\n    ['ADM', 'Administrator'],\n    ['CREATE', 'Anlegen'],\n\n    ['RESETPSWDTEXT', `Wenn Sie Ihr Passwort vergessen haben, können Sie es hier zurücksetzen. \n    Geben Sie bitte Ihre registrierte E-Mail Adresse ein und drücken Sie “Passwort zurücksetzen”. \n    Danach wird Ihnen eine E-Mail mit einem Link zugesandt.`],\n\n    ['RESETPSWD', 'Passwort zurücksetzen'],\n    ['BLOCKUSR', 'Sperren'],\n    ['UNBLOCKUSR', 'Entsperren'],\n    ['DELUSR', 'Löschen'],\n    ['BLOCKED', 'Gesperrt'],\n    ['EXPAND', 'Alle ausklappen'],\n    ['COLLAPSE', 'Alle zuklappen'],\n    ['SEARCH', 'Suche'],\n    ['ROLE', 'Rolle'],\n\n    ['ACCSET', 'Kontoeinstellungen'],\n    ['SECSET', 'Sicherheitseinstellungen'],\n\n    ['NEWACC', 'Konto anlegen'],\n    ['CHNGACC', 'Konto ändern'],\n    ['CHNG', 'Ändern'],\n    ['CONFIRM', 'Bestätigen'],\n    ['PSWDCONF', 'Passwortbestätigung'],\n    ['PSWDOLD', 'Altes Passwort'],\n    ['PSWDOLDNMATCH', 'Das alte Passwort ist falsch.'],\n    ['PSWDNMATCH', 'Die Passwörter stimmen nicht überein.'],\n    ['IDUSED', 'Diese E-Mail-Adresse oder Benutzername wird bereits verwendet.'],\n    ['IDINC', 'Ihr Benutzername/E-Mail-Adresse oder Ihr Passwort sind falsch.'],\n    ['USRISBL', 'Der Benutzer wurde gesperrt.'],\n    ['USRISUN', 'Der Benutzer wurde entsperrt.'],\n    ['USRISDEL', 'Der Benutzer wurde gelöscht.'],\n    ['PSWDISRES', 'Das Passwort wurde zurückgesetzt.'],\n    \n    ['NOTALLOWED', 'Sie sind nicht berechtigt auf diese Seite zuzugreifen. Sie werden zur Login-Seite weitergeleitet.'],\n\n    ['SAPID', 'SAP ID'],\n    ['HASH', 'Hash'],\n    ['DATE', 'Datum'],\n\n    ['APPLY', 'Übernehmen'],\n    ['CHNGPSWD', 'Passwort ändern'],\n\n    ['YES', 'Ja'],\n    ['NO', 'Nein'],\n    ['CAN', 'Abbrechen'],\n    \n    ['BCK', 'Zurück'],\n    ['NXT', 'Weiter'],\n    ['SND', 'Senden'],\n    ['ADDFILE', 'Datei hinzufügen'],\n\n    ['CUSTYPE', 'Kundentyp'],\n    ['PER', 'Person'],\n    ['ORG', 'Organisation'],\n    ['PERORG', 'Person / Organization'],\n    ['DEB', 'Debitor'],\n    ['CRE', 'Kreditor'],\n    ['DEBCRE', 'Debitor / Kreditor'],\n    ['COMCODE', 'Buchungskreis'],\n\n    ['LEGFRM', 'Rechtsform'],\n    ['INTERFNUM', 'Schnittstellennummer'],\n\n    ['CONTACT', 'Kontaktdaten'],\n    ['GENINF', 'Allgemeine Informationen'],\n    ['CONTINF', 'Kontaktinformationen'],\n    ['PAYINF', 'Zahlungsinformationen'],\n    ['ATTACH', 'Datei anhängen'],\n\n    ['NAME', 'Name'],\n    ['ADDR', 'Anschrift'],\n    //['ADNAME', 'Zus. Namensangaben (Name 2)'],\n    ['ADNAME', 'Name 2'],\n    ['BRTH', 'Geburtsdatum'],\n    ['STR', 'Straße'],\n    ['HNO', 'Hnr.'],\n    ['MAILBX', 'Postfach'],\n    ['MAILBXZIP', 'Postfach PLZ'],\n    ['ZIP', 'PLZ'],\n    ['CITY', 'Ort'],\n    ['COU', 'Land'],\n    ['TEL', 'Telefonnummer'],\n    ['FAX', 'Telefax'],\n    ['MOB', 'Mobiltelefonnummer'],\n    ['EMAIL', 'E-Mail-Adresse'],\n\n    ['TAX', 'Steuernummer'],\n    ['VAT', 'Umsatzsteuer-ID'],\n    ['INDFI', 'Branche'],\n    ['INDFICODE', 'Branchencode'],\n    ['HSEPA', 'Lieferant hat SEPA-Lastschrift'],\n    ['GSEPA', 'SEPA-Lastschrift erteilen'],\n    ['RSEPA', 'SEPA-Lastschrift anfordern'],\n    ['IBA', 'IBAN'],\n    ['PAYTERMS', 'Zahlungsbedingung'],\n    ['CRELMT', 'Kreditlimit'],\n    ['REMARKS', 'Bemerkungsfeld'],\n    ['CHLEFT', ' Zeichen verbleibend'],\n\n    ['APP', 'Antragstellerinformationen'],\n    ['APP1', '1. Antragsteller'],\n    ['APP2', '2. Antragsteller'],\n   \n    ['TITLE', 'Titel'],\n    ['SAL', 'Anrede'],\n    ['COMPERS', 'Firma / Personen (Name 1)'],\n\n    ['FNAME', 'Vorname'],\n    ['SNAME', 'Nachname'],\n    \n    ['ENTEMAIL', 'Bitte geben Sie Ihre E-Mail-Adresse ein.'],\n    ['SUBMIT', 'Einreichen'],\n    ['SNDCUS', 'Kunde senden'],\n    ['SNDDIR', 'Direkt senden'],\n    ['SNDCONFEMAIL', 'Bestätigungs-E-Mail senden'],\n\n    ['DELUSR1', \"\"],\n    ['DELUSR2', \" löschen?\"],\n    ['RESETPSWD1', \"Passwort von \"],\n    ['RESETPSWD2', \" zurücksetzen?\"],\n    ['CUSISSND', 'Der Kunde wurde gesendet.'],\n    ['CUSCONFISSND', 'Die Bestätigungs-E-Mail wurde an Ihre E-Mail-Adresse gesendet.'],\n    ['USRISCR', 'Der Benutzer wurde angelegt.'],\n    ['USRISUPD', 'Der Benutzer wurde geändert.'],\n    ['USRISNUPD', 'Der Benutzer wurde nicht geändert.'],\n\n    ['SUC', 'Erfolg!'],\n    ['ERR', 'Fehler!'],\n  ])\n\n  dictionaryEN = new Map([\n\n    ['LOGIN', 'Sign in'],\n    ['USRNAME', 'Username'],\n    ['PSWD', 'Password'],\n    ['ID', 'Email or username'],\n    ['PSWDFOG', 'Forgot password?'],\n    ['PSWDWILLRES', 'A confirmation e-mail with further instructions will be sent to your e-mail address.'],\n    \n    ['NOTALLOWED', 'You are not allowed to view this page or take an action. You are redirected to enter the login page.'],\n    \n    ['SAPID', 'SAP ID'],\n    ['HASH', 'Hash'],\n    ['DATE', 'Date'],\n\n    ['APPLY', 'Apply'],\n    ['CHNGPSWD', 'Change password'],\n    ['NEWACC', 'Create account'],\n    ['CHNGACC', 'Change account'],\n    ['CHNG', 'Change'],\n    ['CONFIRM', 'Confirm'],\n    ['PSWDCONF', 'Password confirmation'],\n    ['PSWDOLD', 'Old password'],\n    \n    ['CREATE', 'Create'],\n    ['USR', 'Account'],\n    ['ADM', 'Administrator'],\n\n    ['HELLO', 'Hello, '],\n    ['NEWCUS', 'New customer'],\n    ['CUSS', 'Customer'],\n    ['LOGOUT', 'Sign out'],\n    ['ACC', 'Account'],\n    ['LANG', 'Language'],\n    ['ADMINAREA', 'Admin area'],\n    ['ROLE', 'Role'],\n\n    ['ACCSET', 'Account settings'],\n    ['SECSET', 'Security settings'],\n    \n    ['RESETPSWDTEXT', `If you forget your password, you can request to reset your password. \n    Please enter your registered email address and press “Reset password”. \n    We will send you an email containing a link enabling you to create a new password.`],\n\n    ['RESETPSWD', 'Reset password'],\n    ['BLOCKUSR', 'Block'],\n    ['UNBLOCKUSR', 'Unblock'],\n    ['DELUSR', 'Delete'],\n    ['BLOCKED', 'Blocked'],\n    ['EXPAND', 'Expand all'],\n    ['COLLAPSE', 'Collapse all'],\n    ['SEARCH', 'Search'],\n\n    ['YES', 'Yes'],\n    ['NO', 'No'],\n    ['CAN', 'Cancel'],\n\n    ['BCK', 'Back'],\n    ['NXT', 'Next'],\n    ['SND', 'Send'],\n    ['ADDFILE', 'Add file'],\n    \n    ['CUSTYPE', 'Customer type'],\n    ['PER', 'Person'],\n    ['ORG', 'Organization'],\n    ['PERORG', 'Person / Organization'],\n    ['DEB', 'Debitor'],\n    ['CRE', 'Creditor'],\n    ['DEBCRE', 'Debitor / Creditor'],\n    ['COMCODE', 'Comapany code'],\n    \n    ['LEGFRM', 'Legal form'],\n    \n    ['INTERFNUM', 'Interface number'],\n    \n    ['CONTACT', 'Contact'],\n    ['GENINF', 'General information'],\n    ['CONTINF', 'Contact information'],\n    ['PAYINF', 'Payment information'],\n    ['ATTACH', 'Attach file'],\n\n    ['NAME', 'Name'],\n    ['ADDR', 'Address'],\n    //['ADNAME', 'Additional name (Name 2)'],\n    ['ADNAME', 'Name 2'],\n    ['BRTH', 'Birth date'],\n    ['STR', 'Street'],\n    ['HNO', 'House no.'],\n    ['MAILBX', 'Mailbox'],\n    ['MAILBXZIP', 'Mailbox ZIP'],\n    ['ZIP', 'ZIP'],\n    ['CITY', 'City'],\n    ['COU', 'Country'],\n    ['TEL', 'Phone'],\n    ['FAX', 'Fax'],\n    ['MOB', 'Mobile phone'],\n    ['EMAIL', 'Email address'],\n\n    ['TAX', 'Tax ID'],\n    ['VAT', 'VAT ID'],\n    ['INDFI', 'Industry field'],\n    ['INDFICODE', 'Industry field code'],\n    ['HSEPA', 'Supplier has SEPA direct debit'],\n    ['GSEPA', 'Grant SEPA direct debit'],\n    ['RSEPA', 'Request SEPA direct debit'],\n    ['IBA', 'IBAN'],\n    ['CRELMT', 'Credit limit'],\n    ['PAYTERMS', 'Terms of payment'],\n    ['REMARKS', 'Remarks field'],\n    ['CHLEFT', ' characters left'],\n\n    ['APP', 'Applicant information'],\n    ['APP1', 'Applicant 1'],\n    ['APP2', 'Applicant 2'],\n\n    ['TITLE', 'Title'],\n    ['SAL', 'Salutation'],\n    ['COMPERS', 'Company / Persons (Name 1)'],\n    ['FNAME', 'Name'],\n    ['SNAME', 'Surname'],\n    \n    ['ENTEMAIL', 'Please enter your email address.'],\n    ['SUBMIT', 'Submit'],\n    ['SNDCUS', 'Send customer'],\n    ['SNDDIR', 'Send directly'],\n    ['SNDCONFEMAIL', 'Send confirmation email'],\n    ['DELUSR1', \"Delete \"],\n    ['DELUSR2', \"?\"],\n    ['RESETPSWD1', \"Reset password for \"],\n    ['RESETPSWD2', \"?\"],\n\n    ['USRISNUPD', 'The account was not updated.'],\n\n    ['SUC', 'Success!'],\n    ['ERR', 'Error!'],\n\n    //Messages\n    ['USRISCR', 'The account was created.'],\n    ['USRISUPD', 'The account was updated.'],\n    ['CUSISSND', 'The customer was sent.'],\n    ['CUSCONFISSND', 'The confirmation email was sent to your email address.'],\n    ['USRISBL', 'The account was blocked.'],\n    ['USRISUN', 'The account was unblocked.'],\n    ['USRISDEL', 'The account was deleted.'],\n    ['PSWDISRES', 'The password was reset.'],\n\n    //Errors\n    ['PSWDNMATCH', 'The passwords do not match.'],\n    ['PSWDOLDNMATCH', 'The old password does not match.'],\n    ['IDUSED', 'This email address or username is already being used.'],\n    ['IDINC', 'Your username/email or password are incorrect.'],\n\n  ])\n\n  dictionary = new Map([\n    ['DE', this.dictionaryDE],\n    ['EN', this.dictionaryEN]\n  ])\n\n  constructor() { }\n\n  /**\n   * Switches language between English and German.\n   */\n  switchLanguage() {\n    this.currentLanguage = (this.currentLanguage == 'DE' ? 'EN' : 'DE')\n  }\n\n  /**\n   * Takes an abbreviation and returns the corresponding value.\n   * @param abbreviation Map key \n   * @returns Mapping. \n   */\n  get(abbreviation: string): string {\n    return this.dictionary.get(this.currentLanguage).get(abbreviation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditAccountDialog.html":{"url":"components/EditAccountDialog.html","title":"component - EditAccountDialog","body":"\n                   \n\n\n\n\n\n  Components\n  EditAccountDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/edit-account-dialog/edit-account.dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-account\n            \n\n            \n                styleUrls\n                ./edit-account.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-account.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                    Public\n                                listService\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    registerFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionaryService: DictionaryService, formBuilder: FormBuilder, formValidationService: FormValidationService, errorMessageService: ErrorMessageService, listService: ListService, dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formValidationService\n                                                  \n                                                        \n                                                                        FormValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listService\n                                                  \n                                                        \n                                                                        ListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        registerFormControl\n                    \n                \n\n                \n                    \n                        getregisterFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dialogs/edit-account-dialog/edit-account.dialog.ts:58\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component,  Inject,  OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { FormValidationService } from 'src/app/services/form-validation.service';\nimport { ListService } from 'src/app/services/list.service';\n\n@Component({\n  selector: 'app-edit-account',\n  templateUrl: './edit-account.dialog.html',\n  styleUrls: ['./edit-account.dialog.scss']\n})\nexport class EditAccountDialog implements OnInit {\n\n  registerForm: FormGroup;\n  account;\n\n  constructor(public dictionaryService: DictionaryService, private formBuilder: FormBuilder, private formValidationService: FormValidationService,\n    public errorMessageService: ErrorMessageService, public listService: ListService, private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) {\n      this.account = data.accountToEdit;\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      username: new FormControl({ value: this.account.username, disabled: true }),\n      email: new FormControl({ value: this.account.email, disabled: true }),\n\n      salutation: [this.listService.salutationsPerson.getObjectForCode(this.account.salutationCode), Validators.required],\n      companyCode: [this.listService.companyCodes.getObjectForCode(this.account.companyCode), [Validators.required]],\n      firstName: [this.account.firstName, [Validators.required, this.formValidationService.validateName]],\n      secondName: [this.account.secondName, [Validators.required, this.formValidationService.validateName]],\n      phone: [this.account.phone, Validators.required],\n      mobile: [this.account.mobile, Validators.required],\n    });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n  async register() {\n    if (this.registerForm.valid) {\n\n      let editedAccount = { ... this.account};\n      editedAccount.salutationCode = this.registerForm.controls['salutation'].value.code\n      editedAccount.companyCode = this.registerForm.controls['companyCode'].value.code,\n      editedAccount.firstName = this.registerForm.controls['firstName'].value,\n      editedAccount.secondName = this.registerForm.controls['secondName'].value,\n      editedAccount.phone = this.registerForm.controls['phone'].value,\n      editedAccount.mobile = this.registerForm.controls['mobile'].value,\n      this.dialogRef.close(editedAccount);\n    } else {\n      this.registerForm.markAllAsTouched();\n    }\n  }\n\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n\n\n}\n    \n\n    \n        \n    {{dictionaryService.get('CHNGACC')}}\n\n    \n        \n            \n                \n                    \n                        {{dictionaryService.get('USRNAME')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('USRNAME', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('EMAIL')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('EMAIL', errorType.key)}}\n                        \n                    \n                \n            \n            \n\n                \n                    \n                        {{dictionaryService.get('COMCODE')}}\n                        \n                            \n                                {{field.details}}\n                            \n                        \n                        \n                            error\n                            {{errorMessageService.getError('COMCODE', errorType.key)}}\n                        \n                    \n                \n\n                \n                    \n                        {{dictionaryService.get('SAL')}}\n                        \n                            \n                                {{sal.details}}\n                            \n                        \n                        \n                            error\n                            {{errorMessageService.getError('SAL', errorType.key)}}\n                        \n                    \n                \n            \n\n            \n                \n                    \n                        {{dictionaryService.get('FNAME')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('FNAME', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('SNAME')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('SNAME', errorType.key)}}\n                        \n                    \n                \n            \n            \n                \n                    \n                        {{dictionaryService.get('TEL')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('TEL', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('MOB')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('MOB', errorType.key)}}\n                        \n                    \n                \n            \n        \n    \n\n    \n        \n            \n            {{dictionaryService.get('CHNG')}}\n            {{dictionaryService.get('CAN')}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-account.dialog.scss\n                \n                button.mat-button .mat-icon,\n.mat-button .mat-icon,\n.mat-raised-button .mat-icon,\n.mat-flat-button .mat-icon,\n.mat-stroked-button .mat-icon {\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{dictionaryService.get(\\'CHNGACC\\')}}                                                                                    {{dictionaryService.get(\\'USRNAME\\')}}                                                                            error                            {{errorMessageService.getError(\\'USRNAME\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'EMAIL\\')}}                                                                            error                            {{errorMessageService.getError(\\'EMAIL\\', errorType.key)}}                                                                                                                                                {{dictionaryService.get(\\'COMCODE\\')}}                                                                                    {{field.details}}                                                                                                        error                            {{errorMessageService.getError(\\'COMCODE\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'SAL\\')}}                                                                                    {{sal.details}}                                                                                                        error                            {{errorMessageService.getError(\\'SAL\\', errorType.key)}}                                                                                                                                                {{dictionaryService.get(\\'FNAME\\')}}                                                                            error                            {{errorMessageService.getError(\\'FNAME\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'SNAME\\')}}                                                                            error                            {{errorMessageService.getError(\\'SNAME\\', errorType.key)}}                                                                                                                                                {{dictionaryService.get(\\'TEL\\')}}                                                                            error                            {{errorMessageService.getError(\\'TEL\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'MOB\\')}}                                                                            error                            {{errorMessageService.getError(\\'MOB\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'CHNG\\')}}            {{dictionaryService.get(\\'CAN\\')}}                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditAccountDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Сonstructs errors from abbreviations and error types.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                errorsDE\n                            \n                            \n                                errorsEN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionaryService: DictionaryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-message.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError(fieldName: string, errorType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/error-message.service.ts:38\n                \n            \n\n\n            \n                \n                    Constructs error from abbreviation and error type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Abbreviation defined in DictionaryService map\n\n                                    \n                                \n                                \n                                    errorType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    ['DE', this.errorsDE],\n    ['EN', this.errorsEN]\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/error-message.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorsDE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    ['required', ' ist erforderlich'],\n    ['email', ' ist ungültig'],\n    ['validateUsername', ' darf nur aus Buchstaben, Ziffern und Unterstrichen bestehen'],\n    ['validateName', ' darf nur aus Buchstaben bestehen'],\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/error-message.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorsEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    ['required', ' is required'],\n    ['email', ' is not valid'],\n    ['validateUsername', ' must contain only letters numbers and underscores'],\n    ['validateName', ' must contain only letters'],\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/error-message.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DictionaryService } from './dictionary.service';\n\n/**\n * Сonstructs errors from abbreviations and error types.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorMessageService {\n\n  constructor(private dictionaryService: DictionaryService) { }\n\n  errorsDE = new Map([\n    ['required', ' ist erforderlich'],\n    ['email', ' ist ungültig'],\n    ['validateUsername', ' darf nur aus Buchstaben, Ziffern und Unterstrichen bestehen'],\n    ['validateName', ' darf nur aus Buchstaben bestehen'],\n  ])\n\n  errorsEN = new Map([\n    ['required', ' is required'],\n    ['email', ' is not valid'],\n    ['validateUsername', ' must contain only letters numbers and underscores'],\n    ['validateName', ' must contain only letters'],\n  ])\n\n  errors = new Map([\n    ['DE', this.errorsDE],\n    ['EN', this.errorsEN]\n  ])\n\n  /**\n   * Constructs error from abbreviation and error type.\n   * @param fieldName Abbreviation defined in DictionaryService map\n   * @param errorType Error type\n   */\n  getError(fieldName: string, errorType: string){\n    if (errorType === 'mustMatch') return;\n    let name = this.dictionaryService.get(fieldName);\n    let text = this.errors.get(this.dictionaryService.currentLanguage).get(errorType);\n    return name + text;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormValidationService.html":{"url":"injectables/FormValidationService.html","title":"injectable - FormValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/form-validation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mustMatch\n                            \n                            \n                                validateName\n                            \n                            \n                                validateUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/form-validation.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nmustMatch(controlName: string, matchingControlName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/form-validation.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateName\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateName(c: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/form-validation.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { validateName: { valid: boolean; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateUsername\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateUsername(c: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/form-validation.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { validateUsername: { valid: boolean; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ValidatorFn, FormGroup, ValidationErrors, FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormValidationService {\n\n  constructor() { }\n\n  // custom validator to check that two fields match\n  mustMatch(controlName: string, matchingControlName: string): ValidatorFn {\n    return (formGroup: FormGroup): ValidationErrors => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    }\n  }\n\n  validateUsername(c: FormControl) {\n    const pattern = /^[a-zA-Z0-9_]*$/\n    return pattern.test(c.value) ? null : {\n      validateUsername: {\n        valid: false\n      }\n    };\n  }\n\n  validateName(c: FormControl) {\n    const pattern = /^[a-zA-Z\\']*$/\n    return pattern.test(c.value) ? null : {\n      validateName: {\n        valid: false\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                handleResponseMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dictionaryService: DictionaryService, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Error handler.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => any\n\n                    \n                    \n                        Error response observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            request\n                        \n                        \n                    \n                \n            \n            \n                \nrequest(func)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleResponseMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/http.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DictionaryService } from './dictionary.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private router: Router, private dictionaryService: DictionaryService, private toastrService: ToastrService) {\n  }\n\n  handleResponseMessages = (response) => {\n    if ('message' in response){\n      const messageAbbreviation = response.message;\n      this.toastrService.success(this.dictionaryService.get(messageAbbreviation), this.dictionaryService.get('SUC'));\n      delete response.message;\n    }\n    if ('error' in response){\n      const errorAbbreviation = response.error;\n      if (typeof this.dictionaryService.get(errorAbbreviation) === 'undefined') {\n        this.toastrService.error(errorAbbreviation, this.dictionaryService.get('ERR'))\n      } else {\n        this.toastrService.error(this.dictionaryService.get(errorAbbreviation), this.dictionaryService.get('ERR'))\n      }\n      delete response.error;\n      return false;\n    }\n    return response;\n  }\n\n  request(func): Observable{\n    return func.pipe(map(this.handleResponseMessages), catchError(this.handleError()));\n  }\n\n  /**\n   * Error handler.\n   * @template T \n   * @param [operation] \n   * @param [result] \n   * @returns Error response observable.\n   */\n  private handleError(result?: T) {\n    return (error: any): Observable => {\n      console.error(error);\n      if (error.status == 401) {\n        alert(this.dictionaryService.get('NOTALLOWED'));\n        this.router.navigate(['/login']);\n      }\n      return of(result as T);\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JSONValidationService.html":{"url":"injectables/JSONValidationService.html","title":"injectable - JSONValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JSONValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-validation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                parseErrors\n                            \n                            \n                                    Async\n                                validateAccountWithoutPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/json-validation.service.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parseErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseErrors(validationErrors)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/json-validation.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationErrors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateAccountWithoutPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAccountWithoutPassword(model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/json-validation.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n//import Ajv, { JTDDataType } from \"ajv/dist/jtd\"\n\nconst userSchema = {\n  properties: {\n    username: { type: \"string\" },\n    email: { type: \"string\" },\n    role: { type: \"string\" },\n    companyCode: { type: \"string\" },\n    blocked: { type: \"boolean\" },\n  },\n  optionalProperties: {\n    password: { type: \"string\" },\n    passwordOld: { type: \"string\" }\n  }\n} as const;\n\n//type UserSchema = JTDDataType\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JSONValidationService {\n\n  constructor() { }\n\n  async validateAccountWithoutPassword(model) {\n    /*const ajv = new Ajv();\n    const validate = ajv.compile(userSchema)\n    const result = await validate(model);\n    if (!result) {\n      const errors = await this.parseErrors(validate.errors);\n      console.error(errors)\n      throw errors;\n    }\n    return model;*/\n  }\n\n  async parseErrors(validationErrors) {\n    let errors = [];\n    validationErrors.forEach(error => {\n      errors.push({\n        param: error.params[\"missingProperty\"],\n        key: error.keyword,\n        message: error.message,\n        property: (function () {\n          return error.keyword === 'minimum' ? error.dataPath : undefined\n        })()\n      });\n    });\n\n    return errors;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                hide\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dictionaryService: DictionaryService, formBuilder: FormBuilder, authService: AuthService, errorMessageService: ErrorMessageService, dialog: MatDialog, accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loginFormControl\n                    \n                \n\n                \n                    \n                        getloginFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ResetPasswordUserDialog } from 'src/app/dialogs/reset-password-user/reset-password-user.dialog';\nimport { AccountService } from 'src/app/services/account/account.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  loginForm: FormGroup;\n\n  constructor(private router: Router, public dictionaryService: DictionaryService, \n    private formBuilder: FormBuilder, private authService: AuthService, \n    public errorMessageService: ErrorMessageService, private dialog: MatDialog,\n    private accountService: AccountService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      identifier: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n    if (this.authService.isLoggedIn()) {\n      this.authService.startChecking();\n      this.router.navigate(['/preselection']);\n    }\n  }\n\n  async login() {\n    if (this.loginForm.valid) {    \n      let isSuccessful = await this.authService.login(this.loginForm.controls['identifier'].value, this.loginForm.controls['password'].value);\n      if (isSuccessful) {\n        this.authService.startChecking();\n        this.router.navigate(['/preselection']);\n      }\n    }\n  }\n\n  async forgotPassword() {\n    const resetPasswordDialog = this.dialog.open(ResetPasswordUserDialog);\n    const result = await resetPasswordDialog.afterClosed().toPromise();\n    if (result) {\n      await this.accountService.requestPasswordReset({email: result}).toPromise();\n    }\n  }\n\n  get loginFormControl() {\n    return this.loginForm.controls;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        {{dictionaryService.get('LOGIN')}}\n        \n            \n                \n                    \n                        {{dictionaryService.get('ID')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('ID', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('PSWD')}}\n                        \n                        \n                            {{hide ? 'visibility_off' : 'visibility'}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('PSWD', errorType.key)}}\n                        \n                    \n                \n                \n                    {{dictionaryService.get('PSWDFOG')}}\n                    \n                    {{dictionaryService.get('NXT')}}\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                ::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n    color: black!important;\n  }\n  \n  ::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\n    color: black!important;\n  }\n  \n  .mat-input-element {\n    caret-color: black!important;\n  }\n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{dictionaryService.get(\\'LOGIN\\')}}                                                                                {{dictionaryService.get(\\'ID\\')}}                                                                            error                            {{errorMessageService.getError(\\'ID\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'PSWD\\')}}                                                                            {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                                                            error                            {{errorMessageService.getError(\\'PSWD\\', errorType.key)}}                                                                                                {{dictionaryService.get(\\'PSWDFOG\\')}}                                        {{dictionaryService.get(\\'NXT\\')}}                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main/main.component.ts\n\n\n    \n        Description\n    \n    \n        Contains application  header and is also the parent component of the NewISOComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n            \n                styleUrls\n                ./main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                storageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                switchLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dictionaryService: DictionaryService, storageService: StorageService, authService: AuthService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main/main.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/main/main.component.ts:42\n                \n            \n\n\n            \n                \n                    Click on the logout button triggers this method. The method navigates to the LoginComponent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/main/main.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/main/main.component.ts:35\n                \n            \n\n\n            \n                \n                    Click on the reset button triggers this method. The method navigates to the LoginComponent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchLanguage\n                        \n                        \n                    \n                \n            \n            \n                \nswitchLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/main/main.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main/main.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main/main.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main/main.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main/main.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterContentInit, AfterViewInit, ChangeDetectorRef, Component, HostListener, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { StorageService } from 'src/app/services/storage.service';\n\n/**\n * Contains application  header and is also the parent component of the NewISOComponent.\n */\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit {\n\n  constructor(public router: Router, public dictionaryService: DictionaryService,\n    public storageService: StorageService, public authService: AuthService, private cookieService: CookieService) {\n  }\n\n  ngOnInit(): void {\n    let language = this.cookieService.get('lang');\n    if (language && language.length) this.dictionaryService.currentLanguage = language\n  }\n\n  switchLanguage() {\n    this.dictionaryService.switchLanguage();\n    this.cookieService.set('lang', this.dictionaryService.currentLanguage);\n  }\n\n  /**\n   * Click on the reset button triggers this method. The method navigates to the LoginComponent.\n   */\n  reset() {\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Click on the logout button triggers this method. The method navigates to the LoginComponent.\n   */\n  logout() {\n    this.authService.logout();\n    this.authService.stopChecking();\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n    \n      WEB-ISO\n    \n    \n    \n    \n    \n      \n        \n          {{dictionaryService.get('HELLO')}}{{authService.account.username}}!\n        \n        \n          {{dictionaryService.get('LANG')}}\n        \n        \n      \n      \n        \n          \n            \n              language &nbsp;\n              {{ dictionaryService.get('LANG') }}\n            \n            \n              \n                EN\n                DE\n              \n            \n          \n\n          \n            \n\n            \n              settings &nbsp;\n              {{ dictionaryService.get('ACC') }}\n            \n            \n            \n              logout &nbsp;\n              {{ dictionaryService.get('LOGOUT') }}\n            \n          \n        \n      \n    \n\n  \n\n\n\n  \n    \n      \n        add &nbsp;\n        {{ dictionaryService.get('NEWCUS') }}\n      \n      \n      \n        group &nbsp;\n        {{ dictionaryService.get('CUSS') }}\n      \n      \n      \n        admin_panel_settings &nbsp;\n        {{ dictionaryService.get('ADMINAREA') }}\n      \n\n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./main.component.scss\n                \n                //like baywa.com\n.mat-toolbar {\n    height:  60px;\n}\n\nmat-toolbar-row {\n    display: flex;\n}\n\nmat-sidenav {\n    width: 250px !important;\n}\n\n.dropdown-menu {\n    margin-top: -1px;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n    padding: 0;\n  }\n\n.mat-list-base {\n    padding: 0;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu              WEB-ISO                                            {{dictionaryService.get(\\'HELLO\\')}}{{authService.account.username}}!                          {{dictionaryService.get(\\'LANG\\')}}                                                                        language                {{ dictionaryService.get(\\'LANG\\') }}                                                      EN                DE                                                                                    settings                {{ dictionaryService.get(\\'ACC\\') }}                                                  logout                {{ dictionaryService.get(\\'LOGOUT\\') }}                                                              add          {{ dictionaryService.get(\\'NEWCUS\\') }}                          group          {{ dictionaryService.get(\\'CUSS\\') }}                          admin_panel_settings          {{ dictionaryService.get(\\'ADMINAREA\\') }}                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewAccountDialog.html":{"url":"components/NewAccountDialog.html","title":"component - NewAccountDialog","body":"\n                   \n\n\n\n\n\n  Components\n  NewAccountDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/new-account-dialog/new-account.dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-account\n            \n\n            \n                styleUrls\n                ./new-account.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-account.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                    Public\n                                listService\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAccountType\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    registerFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionaryService: DictionaryService, formBuilder: FormBuilder, formValidationService: FormValidationService, errorMessageService: ErrorMessageService, listService: ListService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formValidationService\n                                                  \n                                                        \n                                                                        FormValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listService\n                                                  \n                                                        \n                                                                        ListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeAccountType\n                        \n                        \n                    \n                \n            \n            \n                \nchangeAccountType(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:69\n                \n            \n\n\n            \n                \n                    Change of admin/account type triggers this method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        registerFormControl\n                    \n                \n\n                \n                    \n                        getregisterFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dialogs/new-account-dialog/new-account.dialog.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component,  OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { FormValidationService } from 'src/app/services/form-validation.service';\nimport { ListService } from 'src/app/services/list.service';\n\n@Component({\n  selector: 'app-new-account',\n  templateUrl: './new-account.dialog.html',\n  styleUrls: ['./new-account.dialog.scss']\n})\nexport class NewAccountDialog implements OnInit {\n\n  registerForm: FormGroup;\n  accountType = 'USER';\n\n  constructor(public dictionaryService: DictionaryService, private formBuilder: FormBuilder, private formValidationService: FormValidationService,\n    public errorMessageService: ErrorMessageService, public listService: ListService, private dialogRef: MatDialogRef) {\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, this.formValidationService.validateUsername]],\n      email: ['', [Validators.required, Validators.email]],\n      salutation: [this.listService.salutationsPerson[0], Validators.required],\n      companyCode: ['', [Validators.required]],\n      firstName: ['', [Validators.required, this.formValidationService.validateName]],\n      secondName: ['', [Validators.required, this.formValidationService.validateName]],\n      phone: [''],\n      mobile: [''],\n    });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n  async register() {\n    if (this.registerForm.valid) {\n      const salutationCode = this.registerForm.controls['salutation'].value === '' ? '0000' : this.registerForm.controls['salutation'].value.code\n      var newAccount = {\n        username: this.registerForm.controls['username'].value,\n        email: this.registerForm.controls['email'].value,\n        firstName: this.registerForm.controls['firstName'].value,\n        secondName: this.registerForm.controls['secondName'].value,\n        phone: this.registerForm.controls['phone'].value,\n        mobile: this.registerForm.controls['mobile'].value,\n        companyCode: this.registerForm.controls['companyCode'].value.code,\n        salutationCode: salutationCode,\n        role: this.accountType,\n        blocked: false\n      }\n      this.dialogRef.close(newAccount);\n    } else {\n      this.registerForm.markAllAsTouched();\n    }\n  }\n\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n\n    /**\n   * Change of admin/account type triggers this method.\n   * @param event Change event\n   */\n     changeAccountType(event: any) {\n      if (event.value === 'USER') {\n        this.accountType = 'USER';\n      } else {\n        this.accountType = 'ADMIN';\n      }\n    }\n}\n    \n\n    \n        \n    {{dictionaryService.get('NEWACC')}}\n\n    \n        \n            \n                \n                    \n                        {{dictionaryService.get('USRNAME')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('USRNAME', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('EMAIL')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('EMAIL', errorType.key)}}\n                        \n                    \n                \n            \n            \n\n                \n                    \n                        {{dictionaryService.get('COMCODE')}}\n                        \n                            \n                                {{field.details}}\n                            \n                        \n                        \n                            error\n                            {{errorMessageService.getError('COMCODE', errorType.key)}}\n                        \n                    \n                \n\n                \n                    \n                        \n                            {{ dictionaryService.get('USR') }}\n                        \n                        \n                            {{ dictionaryService.get('ADM') }}\n                        \n                    \n                \n            \n            \n            \n                \n                    \n                        {{dictionaryService.get('SAL')}}\n                        \n                            \n                                {{sal.details}}\n                            \n                        \n                        \n                            error\n                            {{errorMessageService.getError('SAL', errorType.key)}}\n                        \n                    \n                \n            \n\n            \n                \n                    \n                        {{dictionaryService.get('FNAME')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('FNAME', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('SNAME')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('SNAME', errorType.key)}}\n                        \n                    \n                \n            \n            \n                \n                    \n                        {{dictionaryService.get('TEL')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('TEL', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('MOB')}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('MOB', errorType.key)}}\n                        \n                    \n                \n            \n        \n    \n\n    \n        \n            \n            {{dictionaryService.get('CREATE')}}\n            {{dictionaryService.get('CAN')}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./new-account.dialog.scss\n                \n                button.mat-button .mat-icon,\n.mat-button .mat-icon,\n.mat-raised-button .mat-icon,\n.mat-flat-button .mat-icon,\n.mat-stroked-button .mat-icon {\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{dictionaryService.get(\\'NEWACC\\')}}                                                                                    {{dictionaryService.get(\\'USRNAME\\')}}                                                                            error                            {{errorMessageService.getError(\\'USRNAME\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'EMAIL\\')}}                                                                            error                            {{errorMessageService.getError(\\'EMAIL\\', errorType.key)}}                                                                                                                                                {{dictionaryService.get(\\'COMCODE\\')}}                                                                                    {{field.details}}                                                                                                        error                            {{errorMessageService.getError(\\'COMCODE\\', errorType.key)}}                                                                                                                                                    {{ dictionaryService.get(\\'USR\\') }}                                                                            {{ dictionaryService.get(\\'ADM\\') }}                                                                                                                                                            {{dictionaryService.get(\\'SAL\\')}}                                                                                    {{sal.details}}                                                                                                        error                            {{errorMessageService.getError(\\'SAL\\', errorType.key)}}                                                                                                                                                {{dictionaryService.get(\\'FNAME\\')}}                                                                            error                            {{errorMessageService.getError(\\'FNAME\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'SNAME\\')}}                                                                            error                            {{errorMessageService.getError(\\'SNAME\\', errorType.key)}}                                                                                                                                                {{dictionaryService.get(\\'TEL\\')}}                                                                            error                            {{errorMessageService.getError(\\'TEL\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'MOB\\')}}                                                                            error                            {{errorMessageService.getError(\\'MOB\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'CREATE\\')}}            {{dictionaryService.get(\\'CAN\\')}}                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewAccountDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreselectionComponent.html":{"url":"components/PreselectionComponent.html","title":"component - PreselectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PreselectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/preselection/preselection.component.ts\n\n\n    \n        Description\n    \n    \n        Allows to choose the customer type, credit/debit type and company code.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preselection\n            \n\n            \n                styleUrls\n                ./preselection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preselection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customerType\n                            \n                            \n                                debitCreditType\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                    Public\n                                listService\n                            \n                            \n                                    Public\n                                storageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNewCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, router: Router, dictionaryService: DictionaryService, listService: ListService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preselection/preselection.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listService\n                                                  \n                                                        \n                                                                        ListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preselection/preselection.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewCustomer\n                        \n                        \n                    \n                \n            \n            \n                \nonNewCustomer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preselection/preselection.component.ts:31\n                \n            \n\n\n            \n                \n                    Click on the \"New customer\" button triggers this method. The method navigates to the NewISOComponent. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customerType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'person'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preselection/preselection.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debitCreditType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'debitor'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preselection/preselection.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preselection/preselection.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preselection/preselection.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preselection/preselection.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preselection/preselection.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { ListService } from 'src/app/services/list.service';\nimport { StorageService } from 'src/app/services/storage.service';\n\n/**\n * Allows to choose the customer type, credit/debit type and company code.\n */\n@Component({\n  selector: 'app-preselection',\n  templateUrl: './preselection.component.html',\n  styleUrls: ['./preselection.component.scss']\n})\nexport class PreselectionComponent implements OnInit {\n\n  debitCreditType = 'debitor';\n  customerType = 'person';\n\n  constructor(public storageService: StorageService, private router: Router, public dictionaryService: DictionaryService, \n    public listService: ListService, public errorMessageService: ErrorMessageService) { }\n\n  ngOnInit(): void {\n    this.storageService.resetValues();\n  }\n\n  /**\n   * Click on the \"New customer\" button triggers this method. The method navigates to the NewISOComponent. \n   */\n  onNewCustomer(){\n    this.storageService.debitCreditType = this.debitCreditType\n    this.storageService.customerType = this.customerType\n    this.router.navigate(['/iso']);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{dictionaryService.get('CUSTYPE')}}\n            \n        \n            \n            \n              {{dictionaryService.get('PERORG')}}\n              \n                \n                  {{dictionaryService.get('PER')}}\n                \n                \n                  {{dictionaryService.get('ORG')}}\n                \n              \n            \n            \n                {{dictionaryService.get('DEBCRE')}}\n                \n                  \n                    {{dictionaryService.get('DEB')}}\n                  \n                  \n                    {{dictionaryService.get('CRE')}}\n                  \n                \n              \n            \n            \n                \n                \n                    assignment\n                    {{dictionaryService.get('NEWCUS')}}\n                \n                \n            \n\n        \n    \n\n    \n\n    \n                \n                    ./preselection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{dictionaryService.get(\\'CUSTYPE\\')}}                                                          {{dictionaryService.get(\\'PERORG\\')}}                                                {{dictionaryService.get(\\'PER\\')}}                                                  {{dictionaryService.get(\\'ORG\\')}}                                                                      {{dictionaryService.get(\\'DEBCRE\\')}}                                                      {{dictionaryService.get(\\'DEB\\')}}                                                        {{dictionaryService.get(\\'CRE\\')}}                                                                                                                            assignment                    {{dictionaryService.get(\\'NEWCUS\\')}}                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreselectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecaptchaService.html":{"url":"injectables/RecaptchaService.html","title":"injectable - RecaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RecaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/recaptcha.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/recaptcha.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendToken\n                        \n                        \n                    \n                \n            \n            \n                \nsendToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/recaptcha.service.ts:18\n                \n            \n\n\n            \n                \n                    Sends captcha token to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecaptchaService {\n\n  constructor(private httpService: HttpService, private http: HttpClient) { }\n\n    /**\n   * Sends captcha token to the server.\n   * @param token \n   */\n     sendToken(token): Observable{\n      return this.httpService.request(this.http.post(`${environment.serverURL}/customers/recaptcha`, {recaptcha: token}))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordAdminDialog.html":{"url":"components/ResetPasswordAdminDialog.html","title":"component - ResetPasswordAdminDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordAdminDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password-admin\n            \n\n            \n                styleUrls\n                ./reset-password-admin.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password-admin.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onYesClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data, dictionaryService: DictionaryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts:27\n                \n            \n\n\n            \n                \n                    Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \nonYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts:20\n                \n            \n\n\n            \n                \n                    Click on the \"yes\" button triggers this method. The method closes the dialog and returns \"true\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\n\n@Component({\n  selector: 'app-reset-password-admin',\n  templateUrl: './reset-password-admin.dialog.html',\n  styleUrls: ['./reset-password-admin.dialog.scss']\n})\nexport class ResetPasswordAdminDialog implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data, \n  public dictionaryService: DictionaryService) { }\n  ngOnInit(): void {\n  }\n\n  /**\n   * Click on the \"yes\" button triggers this method. The method closes the dialog and returns \"true\" value. \n   */\n  onYesClick() {\n    this.dialogRef.close(true);\n  }\n\n  /**\n   * Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n   */\n  onNoClick() {\n    this.dialogRef.close(false);\n  }\n\n}\n\n    \n\n    \n        \n    {{dictionaryService.get('RESETPSWD1')}}{{data.username}}{{dictionaryService.get('RESETPSWD2')}}\n\n    \n        \n            \n                done\n                {{dictionaryService.get('RESETPSWD')}}\n            \n        \n        \n            \n                cancel\n                {{dictionaryService.get('CAN')}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./reset-password-admin.dialog.scss\n                \n                button.mat-button .mat-icon,\n.mat-button .mat-icon,\n.mat-raised-button .mat-icon,\n.mat-flat-button .mat-icon,\n.mat-stroked-button .mat-icon {\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{dictionaryService.get(\\'RESETPSWD1\\')}}{{data.username}}{{dictionaryService.get(\\'RESETPSWD2\\')}}                                        done                {{dictionaryService.get(\\'RESETPSWD\\')}}                                                        cancel                {{dictionaryService.get(\\'CAN\\')}}                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordAdminDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                hash\n                            \n                            \n                                hide1\n                            \n                            \n                                hide2\n                            \n                            \n                                passwordForm\n                            \n                            \n                                showResetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                change\n                            \n                            \n                                    Async\n                                checkHash\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    passwordFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, dictionaryService: DictionaryService, formBuilder: FormBuilder, errorMessageService: ErrorMessageService, authService: AuthService, accountService: AccountService, formValidationService: FormValidationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formValidationService\n                                                  \n                                                        \n                                                                        FormValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            change\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    change()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reset-password/reset-password.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHash()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reset-password/reset-password.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reset-password/reset-password.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide2\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showResetForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        passwordFormControl\n                    \n                \n\n                \n                    \n                        getpasswordFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/reset-password/reset-password.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountJWT } from 'src/app/interfaces/account';\nimport { AccountService } from 'src/app/services/account/account.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { FormValidationService } from 'src/app/services/form-validation.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  hash: string = null;\n  showResetForm = false;\n  passwordForm: FormGroup;\n  hide1 = true;\n  hide2 = true;\n\n  constructor(private route: ActivatedRoute, public dictionaryService: DictionaryService,\n    private formBuilder: FormBuilder, public errorMessageService: ErrorMessageService,\n    private authService: AuthService, private accountService: AccountService,\n    private formValidationService: FormValidationService, private router: Router) {\n    this.checkHash();\n  }\n\n  ngOnInit(): void {\n    this.authService.logout();\n    this.passwordForm = this.formBuilder.group({\n      password: ['', [Validators.required]],\n      confirmPassword: ['', [Validators.required]],\n    }, { validators: this.formValidationService.mustMatch('password', 'confirmPassword') });\n  }\n\n  async checkHash() {\n    try {\n      this.hash = this.route.snapshot.queryParamMap.get('hash');\n      if (this.hash) {\n        let result = await this.accountService.validatePasswordResetHash({hash: this.hash}).toPromise();\n        if (result?.isTrue) {\n          this.showResetForm = true;\n        }\n      }\n    } catch (e) {\n\n    }\n  }\n\n  async change() {\n    if (this.passwordForm.valid) {\n      try{\n        const result = await this.accountService.resetPassword({hash: this.hash, password:this.passwordForm.controls['password'].value}).toPromise();\n        if (result){\n          this.authService.setSession(result)\n        }\n        this.router.navigate(['/login']);\n      } catch (e){\n        console.error(e);\n      }\n    } else {\n      this.passwordForm.markAllAsTouched();\n    }\n  }\n\n  get passwordFormControl() {\n    return this.passwordForm.controls;\n  }\n}\n\n    \n\n    \n        \n    \n        {{dictionaryService.get('RESETPSWD')}}\n        \n            \n\n                \n                    \n                        {{dictionaryService.get('PSWD')}}\n                        \n                        \n                            {{hide1 ? 'visibility_off' : 'visibility'}}\n                        \n                        \n                            error\n                            {{errorMessageService.getError('PSWD', errorType.key)}}\n                        \n                    \n                \n                \n                    \n                        {{dictionaryService.get('PSWDCONF')}}\n                        \n                        \n                            {{hide2 ? 'visibility_off' : 'visibility'}}\n                        \n                        \n                            \n                                error\n                            \n                            {{errorMessageService.getError('PSWDCONF', errorType.key)}}\n                        \n                        \n                            error\n                            {{dictionaryService.get('PSWDNMATCH')}}\n                        \n                    \n                \n                \n                \n                    \n                    {{dictionaryService.get('NXT')}}\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{dictionaryService.get(\\'RESETPSWD\\')}}                                                                                {{dictionaryService.get(\\'PSWD\\')}}                                                                            {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                                                            error                            {{errorMessageService.getError(\\'PSWD\\', errorType.key)}}                                                                                                                        {{dictionaryService.get(\\'PSWDCONF\\')}}                                                                            {{hide2 ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                            error                                                        {{errorMessageService.getError(\\'PSWDCONF\\', errorType.key)}}                                                                            error                            {{dictionaryService.get(\\'PSWDNMATCH\\')}}                                                                                                                                    {{dictionaryService.get(\\'NXT\\')}}                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordUserDialog.html":{"url":"components/ResetPasswordUserDialog.html","title":"component - ResetPasswordUserDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordUserDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/reset-password-user/reset-password-user.dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password-user\n            \n\n            \n                styleUrls\n                ./reset-password-user.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password-user.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                emailForm\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                            \n                                    Async\n                                onYesClick\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emailFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data, dictionaryService: DictionaryService, formBuilder: FormBuilder, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:45\n                \n            \n\n\n            \n                \n                    Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:34\n                \n            \n\n\n            \n                \n                    Click on the \"yes\" button triggers this method. The method closes the dialog and returns email. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emailFormControl\n                    \n                \n\n                \n                    \n                        getemailFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dialogs/reset-password-user/reset-password-user.dialog.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\n\n@Component({\n  selector: 'app-reset-password-user',\n  templateUrl: './reset-password-user.dialog.html',\n  styleUrls: ['./reset-password-user.dialog.scss']\n})\nexport class ResetPasswordUserDialog implements OnInit {\n\n  emailForm: FormGroup;\n\n  constructor(private dialogRef: MatDialogRef, \n    @Inject(MAT_DIALOG_DATA) public data, public dictionaryService: DictionaryService, \n    private formBuilder: FormBuilder, public errorMessageService: ErrorMessageService\n  ) { }\n  \n  ngOnInit(): void {\n    this.emailForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  get emailFormControl() {\n    return this.emailForm.controls;\n  }\n\n  /**\n   * Click on the \"yes\" button triggers this method. The method closes the dialog and returns email. \n   */\n   async onYesClick() {\n      if (this.emailForm.valid) {\n        this.dialogRef.close(this.emailForm.controls['email'].value);\n      } else {\n        this.emailForm.markAllAsTouched();\n    }\n  }\n\n  /**\n   * Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n   */\n  onNoClick() {\n    this.dialogRef.close(false);\n  }\n\n}\n\n    \n\n    \n        \n    {{dictionaryService.get('PSWDFOG')}}\n    \n        {{dictionaryService.get('RESETPSWDTEXT')}}\n    \n    \n        \n            \n                \n                    {{dictionaryService.get('EMAIL')}}\n                    \n                    \n                        error\n                        {{errorMessageService.getError('EMAIL', errorType.key)}}\n                    \n                \n            \n        \n    \n\n    \n        \n            \n                done\n                {{dictionaryService.get('RESETPSWD')}}\n            \n        \n        \n            \n                cancel\n                {{dictionaryService.get('CAN')}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./reset-password-user.dialog.scss\n                \n                button.mat-button .mat-icon,\n.mat-button .mat-icon,\n.mat-raised-button .mat-icon,\n.mat-flat-button .mat-icon,\n.mat-stroked-button .mat-icon {\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{dictionaryService.get(\\'PSWDFOG\\')}}            {{dictionaryService.get(\\'RESETPSWDTEXT\\')}}                                                                {{dictionaryService.get(\\'EMAIL\\')}}                                                                error                        {{errorMessageService.getError(\\'EMAIL\\', errorType.key)}}                                                                                                    done                {{dictionaryService.get(\\'RESETPSWD\\')}}                                                        cancel                {{dictionaryService.get(\\'CAN\\')}}                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordUserDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables free text search filtering.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(ctrl: FormControl, list: CodeDetails[], filteredValues: ReplaySubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search.service.ts:22\n                \n            \n\n\n            \n                \n                    Filters list of values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctrl\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to find\n\n                                    \n                                \n                                \n                                    list\n                                    \n                                                CodeDetails[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List in which to search for\n\n                                    \n                                \n                                \n                                    filteredValues\n                                    \n                                                ReplaySubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Filtered values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport { CodeDetails } from '../interfaces/list';\n\n/**\n * Enables free text search filtering.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor() { }\n\n  /**\n   * Filters list of values.\n   * @param ctrl Value to find\n   * @param list List in which to search for\n   * @param filteredValues Filtered values\n   */\n  filter(ctrl: FormControl, list: CodeDetails[], filteredValues: ReplaySubject) {\n    if (!list) {\n      return;\n    }\n    let search = ctrl.value;\n    if (!search) {\n      filteredValues.next(list.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    filteredValues.next(\n      list.filter(field => field.details.toLowerCase().indexOf(search) > -1)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendCustomerConfirmationDialog.html":{"url":"components/SendCustomerConfirmationDialog.html","title":"component - SendCustomerConfirmationDialog","body":"\n                   \n\n\n\n\n\n  Components\n  SendCustomerConfirmationDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts\n\n\n    \n        Description\n    \n    \n        The dialog to choose the direct or indirect type of customer sending.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-customer-confirmation\n            \n\n            \n                styleUrls\n                ./send-customer-confirmation.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-customer-confirmation.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                recaptchaSitekey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onYesClick\n                            \n                            \n                                    Async\n                                resolved\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dictionaryService: DictionaryService, recaptchaService: RecaptchaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recaptchaService\n                                                  \n                                                        \n                                                                        RecaptchaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:47\n                \n            \n\n\n            \n                \n                    Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \nonYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:40\n                \n            \n\n\n            \n                \n                    Click on the \"yes\" button triggers this method. The method closes the dialog and returns \"true\" value. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolved(captcha)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:30\n                \n            \n\n\n            \n                \n                    Resolving captcha triggers this method. The methods sends captcha to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    captcha\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptchaSitekey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.recaptchaSitekey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { RecaptchaService } from 'src/app/services/recaptcha.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * The dialog to choose the direct or indirect type of customer sending.\n */\n@Component({\n  selector: 'app-send-customer-confirmation',\n  templateUrl: './send-customer-confirmation.dialog.html',\n  styleUrls: ['./send-customer-confirmation.dialog.scss']\n})\nexport class SendCustomerConfirmationDialog {\n\n  recaptchaSitekey = environment.recaptchaSitekey;\n\n  captcha: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(public dialogRef: MatDialogRef, public dictionaryService: DictionaryService, \n    private recaptchaService: RecaptchaService) { }\n\n  /**\n   * Resolving captcha triggers this method. The methods sends captcha to the server.\n   * @param event Recaptcha string token\n   */\n\n  async resolved(captcha) {\n    if (captcha != null) {\n      this.recaptchaService.sendToken(captcha).subscribe(res => {\n      });\n    }\n  }\n\n  /**\n   * Click on the \"yes\" button triggers this method. The method closes the dialog and returns \"true\" value. \n   */\n  onYesClick() {\n    this.dialogRef.close(true);\n  }\n\n  /**\n   * Click on the \"no\" button triggers this method. The method closes the dialog and returns \"false\" value. \n   */\n  onNoClick() {\n    this.dialogRef.close(false);\n  }\n\n}\n\n    \n\n    \n        \n  {{dictionaryService.get('SNDCUS')}}\n  \n    \n      \n      \n    \n  \n\n  \n    \n      \n        send\n        {{dictionaryService.get('SNDDIR')}}\n      \n    \n    \n      \n        email\n        {{dictionaryService.get('SNDCONFEMAIL')}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./send-customer-confirmation.dialog.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{dictionaryService.get(\\'SNDCUS\\')}}                                            send        {{dictionaryService.get(\\'SNDDIR\\')}}                            email        {{dictionaryService.get(\\'SNDCONFEMAIL\\')}}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendCustomerConfirmationDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountForm\n                            \n                            \n                                companyCode\n                            \n                            \n                                    Public\n                                dictionaryService\n                            \n                            \n                                    Public\n                                errorMessageService\n                            \n                            \n                                hide0\n                            \n                            \n                                hide1\n                            \n                            \n                                hide2\n                            \n                            \n                                    Public\n                                listService\n                            \n                            \n                                passwordForm\n                            \n                            \n                                setting\n                            \n                            \n                                    Public\n                                storageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Async\n                                updateAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accountFormControl\n                                \n                                \n                                    passwordFormControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionaryService: DictionaryService, formBuilder: FormBuilder, storageService: StorageService, accountService: AccountService, errorMessageService: ErrorMessageService, authService: AuthService, listService: ListService, formValidationService: FormValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/settings/settings.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionaryService\n                                                  \n                                                        \n                                                                        DictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listService\n                                                  \n                                                        \n                                                                        ListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formValidationService\n                                                  \n                                                        \n                                                                        FormValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \nchange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/settings/settings.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/settings/settings.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPasswordForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetPasswordForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/settings/settings.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAccount(accountToChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/settings/settings.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountToChange\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dictionaryService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DictionaryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide0\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide2\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/settings/settings.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accountFormControl\n                    \n                \n\n                \n                    \n                        getaccountFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/settings/settings.component.ts:100\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        passwordFormControl\n                    \n                \n\n                \n                    \n                        getpasswordFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/settings/settings.component.ts:104\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { DictionaryService } from 'src/app/services/dictionary.service';\nimport { ErrorMessageService } from 'src/app/services/error-message.service';\nimport { ListService } from 'src/app/services/list.service';\nimport { StorageService } from 'src/app/services/storage.service';\nimport { AccountDTO } from 'src/app/interfaces/account';\nimport { FormValidationService } from 'src/app/services/form-validation.service';\nimport { AccountService } from 'src/app/services/account/account.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  hide0 = true;\n  hide1 = true;\n  hide2 = true;\n  accountForm: FormGroup;\n  passwordForm: FormGroup;\n  companyCode: FormControl;\n  setting = 1;\n\n  constructor(public dictionaryService: DictionaryService, private formBuilder: FormBuilder,\n    public storageService: StorageService, private accountService: AccountService,\n    public errorMessageService: ErrorMessageService, private authService: AuthService,\n    public listService: ListService, private formValidationService: FormValidationService) {\n  }\n\n  ngOnInit(): void {\n    this.accountForm = this.formBuilder.group({\n      username: new FormControl({ value: this.authService.account.username, disabled: true }),\n      email: new FormControl({ value: this.authService.account.email, disabled: true }),\n      companyCode: [this.listService.companyCodes.getObjectForCode(this.authService.account.companyCode) , [Validators.required]],\n      firstName: [{ value: this.authService.account.firstName, disabled: this.authService.account.role !== 'ADMIN' ? true : false }],\n      secondName: [{ value: this.authService.account.secondName, disabled: this.authService.account.role !== 'ADMIN' ? true : false }],\n      phone: [{ value: this.authService.account.phone, disabled: this.authService.account.role !== 'ADMIN' ? true : false }],\n      mobile: [{ value: this.authService.account.mobile, disabled: this.authService.account.role !== 'ADMIN' ? true : false }],\n    });\n\n    this.passwordForm = this.formBuilder.group({\n      passwordOld: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      confirmPassword: ['', [Validators.required]],\n    }, { validators: this.formValidationService.mustMatch('password', 'confirmPassword') });\n  }\n\n  change() {\n    //If account form valid\n    if (this.accountForm.valid) {\n      var accountToChange = this.authService.account;\n      accountToChange.companyCode = this.accountForm.controls['companyCode'].value;\n      accountToChange.firstName = this.accountForm.controls['firstName'].value;\n      accountToChange.secondName = this.accountForm.controls['secondName'].value;\n      accountToChange.phone = this.accountForm.controls['phone'].value;\n      accountToChange.mobile = this.accountForm.controls['mobile'].value;\n\n      //If password doesn't update account without password\n      if (this.passwordForm.controls['passwordOld'].value +\n        this.passwordForm.controls['password'].value +\n        this.passwordForm.controls['confirmPassword'].value === '') {\n        this.updateAccount(accountToChange)\n      }\n      //If password is changing and password form is valid update with password\n      else if (this.passwordForm.valid) {\n        accountToChange.password = this.passwordForm.controls['password'].value;\n        accountToChange.passwordOld = this.passwordForm.controls['passwordOld'].value;\n        this.updateAccount(accountToChange)\n      } else {\n        //Trigger password form validation\n        this.passwordForm.markAllAsTouched();\n      }\n    } else {\n      //Trigger account form validation\n      this.accountForm.markAllAsTouched();\n    }\n  }\n\n  resetPasswordForm() {\n    this.passwordForm.controls['passwordOld'].setValue('');\n    this.passwordForm.controls['passwordOld'].markAsUntouched();\n    this.passwordForm.controls['password'].setValue('');\n    this.passwordForm.controls['password'].markAsUntouched();\n    this.passwordForm.controls['confirmPassword'].setValue('');\n    this.passwordForm.controls['confirmPassword'].markAsUntouched();\n  }\n\n  async updateAccount(accountToChange) {\n    accountToChange.blocked = false;\n    let accountResponse = await this.accountService.updateAccount(accountToChange).toPromise();\n    if ('account' in accountResponse) {\n      this.authService.setAccount(accountResponse.account);\n    }\n    this.resetPasswordForm();\n  }\n\n  get accountFormControl() {\n    return this.accountForm.controls;\n  }\n\n  get passwordFormControl() {\n    return this.passwordForm.controls;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{dictionaryService.get('ACC')}}\n            \n            \n                \n                    \n                        {{dictionaryService.get('ACCSET')}} \n                        \n                        keyboard_arrow_right\n                    \n                    \n                        {{dictionaryService.get('SECSET')}} \n                        \n                        keyboard_arrow_right\n                    \n                \n                \n                    \n                        \n                            \n                                \n                                    {{dictionaryService.get('USRNAME')}}\n                                    \n                                    \n                                        error\n                                        {{errorMessageService.getError('USRNAME', errorType.key)}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('EMAIL')}}\n                                    \n                                    \n                                        error\n                                        {{errorMessageService.getError('EMAIL', errorType.key)}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('COMCODE')}}\n                                    \n                                        \n                                            {{field.details}}\n                                        \n                                    \n                                    \n                                        error\n                                        {{errorMessageService.getError('COMCODE', errorType.key)}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('FNAME')}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('SNAME')}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('TEL')}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('MOB')}}\n                                    \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    {{dictionaryService.get('PSWDOLD')}}\n                                    \n                                    \n                                        {{hide1 ? 'visibility_off' : 'visibility'}}\n                                    \n                                    \n                                        error\n                                        {{errorMessageService.getError('PSWDOLD', errorType.key)}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('PSWD')}}\n                                    \n                                    \n                                        {{hide1 ? 'visibility_off' : 'visibility'}}\n                                    \n                                    \n                                        error\n                                        {{errorMessageService.getError('PSWD', errorType.key)}}\n                                    \n                                \n                            \n                            \n                                \n                                    {{dictionaryService.get('PSWDCONF')}}\n                                    \n                                    \n                                        {{hide2 ? 'visibility_off' : 'visibility'}}\n                                    \n                                    \n                                        \n                                            error\n                                        \n                                        {{errorMessageService.getError('PSWDCONF', errorType.key)}}\n                                    \n                                    \n                                        error\n                                        {{dictionaryService.get('PSWDNMATCH')}}\n                                    \n                                \n                            \n                        \n                    \n                \n            \n            \n            \n                \n                {{dictionaryService.get('APPLY')}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                ::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n    color: black!important;\n  }\n  \n  ::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\n    color: black!important;\n  }\n  \n  .mat-input-element {\n    caret-color: black!important;\n  }\n  \n  button.mat-button .mat-icon,\n  .mat-button .mat-icon,\n  .mat-raised-button .mat-icon,\n  .mat-flat-button .mat-icon,\n  .mat-stroked-button .mat-icon {\n    vertical-align: middle;\n    font-size: 1.5em;\n  }\n\n  .settings-button {\n    padding: 20px 10px 20px 10px;\n    align-items:center;\n    cursor: pointer;\n  }\n\n  .settings-window {\n    padding: 20px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{dictionaryService.get(\\'ACC\\')}}                                                                                    {{dictionaryService.get(\\'ACCSET\\')}}                                                 keyboard_arrow_right                                                                {{dictionaryService.get(\\'SECSET\\')}}                                                 keyboard_arrow_right                                                                                                                                                                                                {{dictionaryService.get(\\'USRNAME\\')}}                                                                                                                error                                        {{errorMessageService.getError(\\'USRNAME\\', errorType.key)}}                                                                                                                                                                                                {{dictionaryService.get(\\'EMAIL\\')}}                                                                                                                error                                        {{errorMessageService.getError(\\'EMAIL\\', errorType.key)}}                                                                                                                                                                                                {{dictionaryService.get(\\'COMCODE\\')}}                                                                                                                        {{field.details}}                                                                                                                                                        error                                        {{errorMessageService.getError(\\'COMCODE\\', errorType.key)}}                                                                                                                                                                                                {{dictionaryService.get(\\'FNAME\\')}}                                                                                                                                                                                                {{dictionaryService.get(\\'SNAME\\')}}                                                                                                                                                                                                {{dictionaryService.get(\\'TEL\\')}}                                                                                                                                                                                                {{dictionaryService.get(\\'MOB\\')}}                                                                                                                                                                                                                                                                                        {{dictionaryService.get(\\'PSWDOLD\\')}}                                                                                                                {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                error                                        {{errorMessageService.getError(\\'PSWDOLD\\', errorType.key)}}                                                                                                                                                                                                {{dictionaryService.get(\\'PSWD\\')}}                                                                                                                {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                error                                        {{errorMessageService.getError(\\'PSWD\\', errorType.key)}}                                                                                                                                                                                                {{dictionaryService.get(\\'PSWDCONF\\')}}                                                                                                                {{hide2 ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                                                            error                                                                                {{errorMessageService.getError(\\'PSWDCONF\\', errorType.key)}}                                                                                                                error                                        {{dictionaryService.get(\\'PSWDNMATCH\\')}}                                                                                                                                                                                                                                {{dictionaryService.get(\\'APPLY\\')}}                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomersComponent', 'selector': 'app-customers'},{'name': 'DeleteAccountDialog', 'selector': 'app-delete-account'},{'name': 'EditAccountDialog', 'selector': 'app-edit-account'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NewAccountDialog', 'selector': 'app-new-account'},{'name': 'NewISOComponent', 'selector': 'app-new-iso'},{'name': 'PreselectionComponent', 'selector': 'app-preselection'},{'name': 'ResetPasswordAdminDialog', 'selector': 'app-reset-password-admin'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResetPasswordUserDialog', 'selector': 'app-reset-password-user'},{'name': 'SendCustomerConfirmationDialog', 'selector': 'app-send-customer-confirmation'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Temporarily stores the data. \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetValues\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    customerType\n                                \n                                \n                                    debitCreditType\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetValues\n                        \n                        \n                    \n                \n            \n            \n                \nresetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storage.service.ts:16\n                \n            \n\n\n            \n                \n                    Resets preselection types.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        customerType\n                    \n                \n\n                \n                    \n                        getcustomerType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/storage.service.ts:21\n                                \n                            \n\n                \n                    \n                        setcustomerType(customerType: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/storage.service.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            customerType\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        debitCreditType\n                    \n                \n\n                \n                    \n                        getdebitCreditType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/storage.service.ts:25\n                                \n                            \n\n                \n                    \n                        setdebitCreditType(debitCreditType: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/storage.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            debitCreditType\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Temporarily stores the data. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  /**\n   * Resets preselection types.\n   */\n  resetValues() {\n    localStorage.setItem('customer_type', 'person');\n    localStorage.setItem('debit_credit_type', 'debitor');\n  }\n\n  get customerType() {\n    return localStorage.getItem(\"customer_type\")\n  }\n\n  get debitCreditType() {\n    return localStorage.getItem(\"debit_credit_type\")\n  }\n\n  set customerType(customerType: string) {\n    localStorage.setItem('customer_type', customerType);\n  }\n\n  set debitCreditType(debitCreditType: string) {\n    localStorage.setItem('debit_credit_type', debitCreditType);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/adapters/format-datepicker.ts\n            \n            injectable\n            AppDateAdapter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/adapters/format-datepicker.ts\n            \n            variable\n            APP_DATE_FORMATS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/customers/customers.component.ts\n            \n            component\n            CustomersComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/components/new-iso/new-iso.component.ts\n            \n            component\n            NewISOComponent\n            \n                35 %\n                (17/48)\n            \n        \n        \n            \n                \n                src/app/components/preselection/preselection.component.ts\n            \n            component\n            PreselectionComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/dialogs/delete-account-dialog/delete-account.dialog.ts\n            \n            component\n            DeleteAccountDialog\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/edit-account-dialog/edit-account.dialog.ts\n            \n            component\n            EditAccountDialog\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/new-account-dialog/new-account.dialog.ts\n            \n            component\n            NewAccountDialog\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/reset-password-admin/reset-password-admin.dialog.ts\n            \n            component\n            ResetPasswordAdminDialog\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/reset-password-user/reset-password-user.dialog.ts\n            \n            component\n            ResetPasswordUserDialog\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/dialogs/send-customer-confirmation-dialog/send-customer-confirmation.dialog.ts\n            \n            component\n            SendCustomerConfirmationDialog\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/account.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/account.ts\n            \n            interface\n            AccountDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/account.ts\n            \n            interface\n            AccountJWT\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/list.ts\n            \n            interface\n            CodeDetails\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/angular-material.module.ts\n            \n            variable\n            materialModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/modules.ts\n            \n            variable\n            externalModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/modules.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/account/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/dictionary.service.ts\n            \n            injectable\n            DictionaryService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/services/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/services/form-validation.service.ts\n            \n            injectable\n            FormValidationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/json-validation.service.ts\n            \n            injectable\n            JSONValidationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/json-validation.service.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/list.service.ts\n            \n            injectable\n            ListService\n            \n                2 %\n                (1/43)\n            \n        \n        \n            \n                \n                src/app/services/list.service.ts\n            \n            interface\n            Array\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/recaptcha.service.ts\n            \n            injectable\n            RecaptchaService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.6\n        \n            @angular/cdk : ^11.2.5\n        \n            @angular/common : ^11.2.6\n        \n            @angular/compiler : ~11.2.6\n        \n            @angular/core : ^11.2.6\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ~11.2.6\n        \n            @angular/material : ^11.2.5\n        \n            @angular/platform-browser : ~11.2.6\n        \n            @angular/platform-browser-dynamic : ~11.2.6\n        \n            @angular/router : ~11.2.6\n        \n            ajv : ^7.2.3\n        \n            ajv-keywords : ^4.0.0\n        \n            angular-svg-icon : ^10.0.0\n        \n            buffer : ^5.6.0\n        \n            concat-stream : ^1.6.2\n        \n            core-js : ^2.5.4\n        \n            crypto-js : ^3.1.9-1\n        \n            events : ^3.2.0\n        \n            flag-icon-css : ^3.5.0\n        \n            i : ^0.3.6\n        \n            jsonwebtoken : ^8.5.1\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            ng-recaptcha : ^7.0.1\n        \n            ngx-bootstrap : ^6.2.0\n        \n            ngx-cookie-service : ^11.0.2\n        \n            ngx-flag-icon-css : ^1.0.1\n        \n            ngx-mat-select-search : ^3.1.4\n        \n            ngx-toastr : ^13.1.0\n        \n            node-schedule : ^1.3.2\n        \n            npm : ^6.14.8\n        \n            rxjs : ^6.6.6\n        \n            rxjs-compat : ^6.6.6\n        \n            sax : ^1.2.4\n        \n            stream : 0.0.2\n        \n            tslib : ^2.0.0\n        \n            uuid : ^3.3.2\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 10.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomersComponent\n\nCustomersComponent\n\nAppModule -->\n\nCustomersComponent->AppModule\n\n\n\n\n\nDeleteAccountDialog\n\nDeleteAccountDialog\n\nAppModule -->\n\nDeleteAccountDialog->AppModule\n\n\n\n\n\nEditAccountDialog\n\nEditAccountDialog\n\nAppModule -->\n\nEditAccountDialog->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNewAccountDialog\n\nNewAccountDialog\n\nAppModule -->\n\nNewAccountDialog->AppModule\n\n\n\n\n\nNewISOComponent\n\nNewISOComponent\n\nAppModule -->\n\nNewISOComponent->AppModule\n\n\n\n\n\nPreselectionComponent\n\nPreselectionComponent\n\nAppModule -->\n\nPreselectionComponent->AppModule\n\n\n\n\n\nResetPasswordAdminDialog\n\nResetPasswordAdminDialog\n\nAppModule -->\n\nResetPasswordAdminDialog->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nResetPasswordUserDialog\n\nResetPasswordUserDialog\n\nAppModule -->\n\nResetPasswordUserDialog->AppModule\n\n\n\n\n\nSendCustomerConfirmationDialog\n\nSendCustomerConfirmationDialog\n\nAppModule -->\n\nSendCustomerConfirmationDialog->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAppModule -->\n\nAccountService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nAppModule -->\n\nCustomerService->AppModule\n\n\n\n\n\nDateService\n\nDateService\n\nAppModule -->\n\nDateService->AppModule\n\n\n\n\n\nDictionaryService\n\nDictionaryService\n\nAppModule -->\n\nDictionaryService->AppModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nAppModule -->\n\nErrorMessageService->AppModule\n\n\n\n\n\nFormValidationService\n\nFormValidationService\n\nAppModule -->\n\nFormValidationService->AppModule\n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nJSONValidationService\n\nJSONValidationService\n\nAppModule -->\n\nJSONValidationService->AppModule\n\n\n\n\n\nListService\n\nListService\n\nAppModule -->\n\nListService->AppModule\n\n\n\n\n\nRecaptchaService\n\nRecaptchaService\n\nAppModule -->\n\nRecaptchaService->AppModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nAppModule -->\n\nSearchService->AppModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nAppModule -->\n\nStorageService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_DATE_FORMATS   (src/.../format-datepicker.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            externalModules   (src/.../modules.ts)\n                        \n                        \n                            materialModules   (src/.../angular-material.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../modules.ts)\n                        \n                        \n                            userSchema   (src/.../json-validation.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/adapters/format-datepicker.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APP_DATE_FORMATS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDateFormats\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'numeric' },\n    dateA11yLabel: {\n      year: 'numeric', month: 'long', day: 'numeric'\n    },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  recaptchaSitekey: \"6LdMVTEaAAAAAHpaN12mSQ5NNwR8G6d4txTsLeig\",\n  serverURL: \"http://localhost:4301\",\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  recaptchaSitekey: \"6LdMVTEaAAAAAHpaN12mSQ5NNwR8G6d4txTsLeig\",\n  //serverURL: \"http://localhost:4301\",\n  serverURL: \"http://127.0.0.1:3000/api\",\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            externalModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    ToastrModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AngularMaterialModule,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DictionaryService,\n    HttpService,\n    ListService,\n    ErrorMessageService,\n    StorageService,\n    SearchService,\n    DateService,\n    AuthService,\n    AuthGuardService,\n    AccountService,\n    RecaptchaService,\n    CustomerService,\n    FormValidationService,\n    JSONValidationService,\n    CookieService,\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n    }\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/angular-material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatButtonToggleModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  MatBadgeModule,\n  MatGridListModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatSlideToggleModule,\n  NgxMatSelectSearchModule,\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/services/json-validation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n  properties: {\n    username: { type: \"string\" },\n    email: { type: \"string\" },\n    role: { type: \"string\" },\n    companyCode: { type: \"string\" },\n    blocked: { type: \"boolean\" },\n  },\n  optionalProperties: {\n    password: { type: \"string\" },\n    passwordOld: { type: \"string\" }\n  }\n} as const\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
